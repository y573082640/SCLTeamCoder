{"title": "Numeric Differentiation Function", "name": "LGF_DifferenceQuotientFC", "description": "This function numerically differentiates a signal sampled equidistantly in time.", "type": "FUNCTION", "input": [{"name": "deltaT", "type": "LReal", "description": "Equidistant distance between two measured values. (e.g. 1s)"}], "output": [{"name": "error", "type": "Bool", "description": "FALSE: No error TRUE: An error occurred during the execution of the FB"}, {"name": "status", "type": "Word", "description": "Status of the FB"}], "in/out": [{"name": "values", "type": "Array[*] of LReal", "description": "Values that will be included in the differentiation."}, {"name": "derivatedValues", "type": "Array[*] of LReal", "description": "The differentiated value range."}], "return_value": [{"type": "Void", "description": "Void - Function has no return value"}], "status_codes": {"16#0000": "STATUS_FINISHED_NO_ERROR", "16#8200": "ERR_DELTA_T Error: Delta time `deltaT` must not be zero.", "16#8400": "ERR_ARRAYS_DIFFERENT Error: The Array sizes are not equal.", "16#8401": "ERR_NOT_ENOUGH_VALUES Error: Not enough values."}, "user_defined_types": [], "description_zh": "\n该函数FC用于计算等时间间隔采样信号的一阶导数。函数接受一个LReal类型的输入参数deltaT，表示两个测量值之间的等距时间间隔。它还接受两个数组类型的输入/输出参数：values和derivatedValues。values数组包含将要进行微分的信号值，而derivatedValues数组将用于存储微分后的结果。\n\n函数执行时，首先检查输入数组的大小是否相等，以及是否至少包含4个元素，因为微分计算需要至少4个数据点。如果数组大小不匹配或元素数量不足，函数将返回错误状态。\n\n如果输入参数deltaT为0，函数也会返回错误状态，因为这将导致除以零的情况。\n\n如果所有检查都通过，函数将使用中心差分法计算信号的一阶导数，并将结果存储在derivatedValues数组中。计算公式考虑了数组边界的情况，并对边界点使用了特殊的差分公式。\n\n函数执行结束后，如果没有错误发生，将设置error输出为FALSE，status输出为STATUS_FINISHED_NO_ERROR状态码。如果发生错误，error输出将被设置为TRUE，并根据错误类型设置相应的status状态码。\n\n由于ENO机制未使用，函数强制将ENO设置为TRUE。\n\n\n"}
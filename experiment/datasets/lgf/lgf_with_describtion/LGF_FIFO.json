{
    "title": "FIFO Buffer Management",
    "name": "LGF_FIFO",
    "description": "## Short description ##\n\nFIFO (First-In First-Out / Queue / ring buffer memory)\nThis function stores incoming data and outputs the oldest unprocessed data.\n\n## Functional description ##\n\nNote The status of called commands is output in subFunctionStatus. In this case, the output value \nin status indicates which command caused the error. In this case, refer to the TIA Portal \nOnline Help section for information on the respective commands.\nNote In computer science, the queue is also based on the FIFO principle.\nWith the enqueue input, a new item is stored from the InOut parameter item in the next free \nposition in the buffer. The output elementCount is incremented by one.\nWith the dequeue input, the next element to be processed is output to the InOut parameter item, \nand this field in the buffer is replaced by the value in the parameter initialItem. The output \nelementCount decremented by one.\nWith the reset input, the buffer is initialized and the index and counter are reset. The \nelementCount output is set to zero and the isEmpty output is set to TRUE.\nWith the clear input, the buffer is emptied and initialized with the initial value initialItem. Index \nand counter are reset. The elementCount output is set to zero and the isEmpty output is set to \nTRUE.",
    "type": "FUNCTION_BLOCK",
    "input": [
        {
            "name": "enqueue",
            "type": "Bool",
            "description": "Enqueue item to the buffer"
        },
        {
            "name": "dequeue",
            "type": "Bool",
            "description": "Dequeue item from the buffer and return it on `item`"
        },
        {
            "name": "reset",
            "type": "Bool",
            "description": "Initializing the buffer (reset the index and the counter)"
        },
        {
            "name": "clear",
            "type": "Bool",
            "description": "Clearing the buffer and initialize with the initial value `initialItem` (Reset index and counter)."
        },
        {
            "name": "initialItem",
            "type": "Variant",
            "description": "Value with which the ARRAY of the buffer is initialized (usually: `0` / default value)"
        }
    ],
    "output": [
        {
            "name": "error",
            "type": "Bool",
            "description": "An error occurred during the execution of the FB"
        },
        {
            "name": "status",
            "type": "Word",
            "description": "Status of the FB, Error identification"
        },
        {
            "name": "subFunctionStatus",
            "type": "Word",
            "description": "Status or return value of called FB's, FC's and system blocks"
        },
        {
            "name": "elementCount",
            "type": "DInt",
            "description": "Number of elements in the buffer"
        },
        {
            "name": "isEmpty",
            "type": "Bool",
            "description": "Buffer is empty"
        }
    ],
    "in/out": [
        {
            "name": "item",
            "type": "Variant",
            "description": "The entry that is either returned from the ring buffer or written into the buffer"
        },
        {
            "name": "buffer",
            "type": "Variant",
            "description": "The ARRAY that is used as the ring buffer."
        }
    ],
    "return_value": [],
    "status_codes": {
        "16#0000": "STATUS_NO_ERROR",
        "16#7000": "STATUS_NO_CURRENT_JOBS",
        "16#8001": "ERR_BUFFER_EMPTY",
        "16#8002": "ERR_BUFFER_FULL",
        "16#8200": "ERR_NO_ARRAY",
        "16#8201": "ERR_WRONG_TYPE_ITEM",
        "16#8202": "ERR_WRONG_TYPE_INITIAL_ITEM",
        "16#8601": "ERR_INDEX_IN_ARRAY_LIMITS_1",
        "16#8602": "ERR_INDEX_IN_ARRAY_LIMITS_2",
        "16#8610": "ERR_CLEAR_BUFFER",
        "16#8611": "ERR_RETURN_FIRST_ENTRY",
        "16#8612": "ERR_REPLACE_ITEM_BY_INIT_VALUE",
        "16#8613": "ERR_WRITE_ENTRY"
    },
    "user_defined_types": []
}
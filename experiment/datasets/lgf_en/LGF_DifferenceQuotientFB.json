{"title": "Numeric Differentiation Function Block", "name": "LGF_DifferenceQuotientFB", "description": "This function numerically differentiates a signal sampled equidistantly in time.", "type": "FUNCTION_BLOCK", "input": [{"name": "enable", "type": "Bool", "description": "Activates the block."}, {"name": "insert", "type": "Bool", "description": "Accepts the value at the input `value` at positive edge and outputs a `derivatedValue` if five values have been read in."}, {"name": "value", "type": "LReal", "description": "Value that must be included in the differentiation."}, {"name": "deltaT", "type": "LReal", "description": "Equidistant distance between two measured values. (e.g. 1s)"}], "output": [{"name": "derivatedValue", "type": "LReal", "description": "The differentiated value."}, {"name": "error", "type": "Bool", "description": "FALSE: No error, TRUE: An error occurred during the execution of the FB"}, {"name": "status", "type": "Word", "description": "Status and error identification of the FB"}], "in/out": [], "return_value": [], "status_codes": {"16#7000": "STATUS_NO_CALL: The block waits for activation through the parameter `enable`.", "16#7001": "STATUS_FIRST_CALL: First call of FB after enabling", "16#7002": "STATUS_SUBSEQUENT_CALL: Processing is active. Subsequent call of FB.", "16#7010": "STATUS_NOT_ENOUGH_VALUES: The block requires five (5) values to calculate a differentiated value.", "16#8200": "ERR_DELTA_T: Delta time `deltaT` must not be zero."}, "user_defined_types": [], "description_zh": "\n一个函数块FB，用于计算等时间间隔采样信号的一阶导数（微分）。当使能信号激活时，该FB开始工作。插入信号用于指示何时将输入值包含在微分计算中。FB需要至少五个等时间间隔的采样值来计算微分值，其中时间间隔由参数`deltaT`指定。如果`deltaT`为零，则会发生错误。计算出的微分值在`derivatedValue`输出中提供。状态和错误信息通过`error`和`status`输出传递。\n\n\n"}
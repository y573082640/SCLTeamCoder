{
    "title": "Temperature Logic Control",
    "description": "Write a function block FB to implement a temperature control logic. The program should include the following features:\n1. Read the value of the temperature sensor through the analog input module.\n2. Compare the read temperature value TemperatureSensorInput with the set temperature value SetTemperature.\n3. If the actual temperature is lower than the set temperature, start the heater HeaterOutput.\n4. If the actual temperature is higher than the set temperature, turn off the heater HeaterOutput.\n5. If the heater operates continuously for a certain period of time (for testing convenience, use 5s), it should trigger overheat protection, automatically turn off the heater, and it must be after a certain period of time (for testing convenience, use 3s) to解除 overheat protection.\n6. Provide status indication, displaying the current temperature, set temperature, heater status, and whether overheat protection has been triggered.\n7. Provide temperature sensor fault detection, if the read temperature value TemperatureSensorInput is less than 0 or greater than 100, it is considered a sensor failure, at this time the heater should be turned off.",
    "type": "FUNCTION_BLOCK",
    "name": "FB_TempCtrl",
    "input": [
        {
            "name": "TemperatureSensorInput",
            "type": "Real",
            "description": "Temperature sensor input value, i.e., actual temperature"
        },
        {
            "name": "SetTemperature",
            "type": "Real",
            "description": "Set temperature value"
        }
    ],
    "output": [
        {
            "name": "CurrentTemperature",
            "type": "Real",
            "description": "Current temperature display"
        },
        {
            "name": "SetTempDisplay",
            "type": "Real",
            "description": "Set temperature display"
        },
        {
            "name": "HeaterStatus",
            "type": "Bool",
            "description": "Heater status display"
        },
        {
            "name": "OverheatProtection",
            "type": "Bool",
            "description": "Overheat protection status display"
        }
    ],
    "in_out": [
        {
            "name": "HeaterOutput",
            "type": "Bool",
            "description": "Heater control output"
        }
    ]
 }
{"title": "Advanced CRC-16 Calculator", "name": "LGF_CalcCRC16Advanced", "description": "The function calculates the CRC value with additional parameters for error detection at data transmission.", "type": "FUNCTION", "input": [{"name": "initValue", "type": "Word", "description": "Start value for the calculation"}, {"name": "mask", "type": "Word", "description": "Generator polynomial for the calculation"}, {"name": "finalXorValue", "type": "Word", "description": "Value for final XOR operation"}, {"name": "reflectInput", "type": "Bool", "description": "Mirror the bits within the input byte"}, {"name": "reflectResult", "type": "Bool", "description": "Mirror the order of the bits within the result"}, {"name": "noOfElements", "type": "UInt", "description": "Number of elements to be used in CRC calculation"}], "output": [{"name": "error", "type": "Bool", "description": "Error flag"}, {"name": "status", "type": "Word", "description": "Status code"}], "in/out": [{"name": "array", "type": "Array[*] of Byte", "description": "Data stream for which the CRC value will be calculated"}], "return_value": [{"type": "Word", "description": "Calculated CRC value"}], "status_codes": {"16#0000": "STATUS_NO_ERROR", "16#8400": "ERR_NO_OF_ELEMENTS"}, "user_defined_types": [], "description_zh": "\n该函数FC根据CRC-16高级算法计算数据的循环冗余校验（CRC）值。函数支持多种参数，包括初始化值、掩码、最终异或值、输入输出反转标志以及要计算元素的数量。函数可以处理输入数组中的字节，并返回计算出的CRC值。如果指定的元素数量超出数组大小，函数将设置错误标志并返回错误状态代码。在计算过程中，函数会对输入字节进行位反转（如果reflectInput为真），并在每次迭代中将字节移位到CRC的最高有效位。然后，函数使用掩码进行除法运算，并通过异或函数计算CRC值。最后，如果reflectResult为真，函数会对计算出的CRC值进行位反转，并使用finalXorValue进行最终异或操作。函数不使用ENO机制，因为没有错误处理。\n\n\n"}
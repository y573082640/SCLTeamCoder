{
    "title": "Real-Time Clock Function Block (RTC_2)",
    "description": "CALENDAR_CALC automatically calculates all the values in a CALENDAR\nstructure based on the value of the type UTC in the structure. XCAL is a\nPointer an external or global variable of type CALENDAR. CALENDAR_CALC\ncan thus deliver calendar values based on the structure XCAL throughout\nthe module. CALENDAR_CALC determines at each change of the value UTC\nin XCAL automatically all other values in the structure. Alone the value of\nUTC in a structure must be fed by the RTC module. The defnition of the\nstructured type CALENDAR you can fnd in section data structures. The\ncontinuous calculation of the sun position can weigh heavily on a PLC wi￾thout FPU, which is why the current sun position is calculated only once\nevery 25 seconds if SPE = TRUE. This corresponds to an accuracy of 0.1\ndegrees which is quite sufcient for normal applications. If SPE is FALSE,\nthe position of the sun is not calculated. By an external array HOLIDAYS of\ntype HOLYDAY_DATA, the user can specify specifc holidays according to\nhis needs, for more information on the defnition of public holidays see the\nmodule data structures. \nIf several structures of the type CALENDAR are required (for example, or\nvarious local and UTC times) then more modules CALENDAR_CALC can be\nused with diferent structures of TYPE CALENDAR in accordance .\nThe following example shows how the module SYSRTCGETTIME reads the\nRTC of the CPU and writes the current time in SYSTEMCAL.UTC. CALEN￾DAR_CALC checks every cycle if the value in .UTC has changed and if so it\ncalculates the other values of the structure automatically. The output\nWDAY shows how the structure reads data for further processing. CALEN￾DAR_CALC accounts of the setup data from the data structure (OFFSET\nDST_EN, LONGITUDE, LATITUDE).\nIn the external array HOLIDAYS up to 30 holidays can be defned. For ex￾amples, see the description of the data type HOLIDAY_DATA. This array of\nHOLIDAY_DATA must be defned outside of the module and be pre-assi￾gned as a variable with the holiday dates.",
    "type": "FUNCTION_BLOCK",
    "name": "RTC_2",
    "input": [
        {
            "name": "SET",
            "type": "BOOL",
            "description": "Boolean value to set the RTC."
        },
        {
            "name": "SDT",
            "type": "DT",
            "description": "Start date and time for the RTC."
        },
        {
            "name": "SMS",
            "type": "INT",
            "description": "Milliseconds to set for the RTC."
        },
        {
            "name": "DEN",
            "type": "BOOL",
            "description": "Boolean value indicating if daylight savings time adjustment is needed."
        },
        {
            "name": "OFS",
            "type": "INT",
            "description": "Offset in minutes to adjust the local time."
        }
    ],
    "output": [
        {
            "name": "UDT",
            "type": "DT",
            "description": "Updated date and time from the RTC."
        },
        {
            "name": "LOCAL_DT",
            "type": "DT",
            "description": "Calculated local date and time after applying offset."
        },
        {
            "name": "DSO",
            "type": "BOOL",
            "description": "Boolean value indicating if daylight savings time is in effect."
        },
        {
            "name": "XMS",
            "type": "INT",
            "description": "Milliseconds value derived from the RTC."
        }
    ],
    "in/out": [],
    "return_value": {}
}
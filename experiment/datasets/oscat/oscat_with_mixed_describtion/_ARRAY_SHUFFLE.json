{
    "title": "Array Shuffle Function",
    "description": "_ARRAY_SHUFFLE(ADR(Array), SIZEOF(Array)), where array is the name of\nthe array to be manipulated. ADR() is a standard function, which identifes\nthe pointer to the array and SIZEOF() is a standard function, which deter￾mines the size of the array. The array referenced by the Pointer is manipu￾lated directly in memory and is available directly after exit the function.\nThe function _ARRAY_SHUFFLE thus changes the contents of the array. \nThis type of processing arrays is very efcient because no additional me￾mory is required and no surrender values must be copied.\nIf an array is processed, which should not be changed, so it has to be co￾pied to a temporary array before handing over the Pointer and calling the\nfunction.",
    "type": "FUNCTION",
    "name": "_ARRAY_SHUFFLE",
    "input": [
        {
            "name": "pt",
            "type": "POINTER TO ARRAY [0..32000] OF REAL",
            "description": "A pointer to the array of real numbers that needs to be shuffled."
        },
        {
            "name": "size",
            "type": "UINT",
            "description": "The size of the array, determining how many elements will be shuffled."
        }
    ],
    "output": [],
    "in/out": [],
    "return_value": {
        "type": "BOOL",
        "description": "Returns TRUE if the array was shuffled successfully."
    }
}
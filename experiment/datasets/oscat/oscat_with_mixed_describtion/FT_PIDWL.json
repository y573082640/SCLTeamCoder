{
    "title": "PID Controller with Derivative Action",
    "description": "FT_PIDWL is a PID controller with dynamic Wind- Up reset and works accor￾ding to the following formula: \nY = KP * ( IN + 1/TN * INTEG(IN) + TV *DERIV(IN))\nThe control parameters are given in the form of KP, TN and TV, and if the￾re are parameters KP, KI and KD they can be converted using the following\nformula:\nTN = KP/KI und TV = KD/KP\nThe input values LIM_H and LIM_L limit the range of the output Y. With\nRST, the internal Integrator can always be set to 0. The output LIM indica￾tes that the Output Y runs to one of the limits LIM_L orL IM_H. The PI con￾troller is free running and uses the trapezoidal rule to calculate the inte￾grator for the highest accuracy and optimal speed. The default values of\nthe input parameters are predefned as follows: KP = 1, TN = 1s, TV = 1s,\nILIM_L =-1E38 and ILIM_H = +1 E38.\nAnti Wind-Up: Control modules with Integrator tend to the so-called Wind￾Up Efect. A Wind-Up means that the integrator module continuously run\nagain because, for example, the control signal Y is at a limit and the sys￾tem can not compensate the deviation, which then leads to subsequent\ntransition into the control range until a long and time-consuming dismant￾ling of the integrator value and the scheme only respond delayed. Since\nthe integrator is only necessary to compensate the deviation for all other\ncontrol units, and the range of the integrator should be limited with the\nvalues of ILIM.\nThe module FT_PIW has a so-called dynamic-wind Up Reset which resets\nreaching a limit (LIM_L, LIM_H) the the Integrator to a value corresponding\nof the output limit. After reaching a Limits the controller re-enters the work\narea must the Integrator are not frst or Down-integrated, and the control￾ler is ready for use without delay. The dynamic Anti-Wind Up Method is\nthat in most cases without drawbacks preferred method, because it does\nnot negatively afect the control and prevents the disadvantages of\nWind_Up . \nThe following graph illustrates the internal structure of the controller:\nFT_PD can be used in conjunction with the modules CTRL_IN and\nCTRL_OUT to establish a PD controller.",
    "type": "FUNCTION_BLOCK",
    "name": "FT_PIDWL",
    "input": [
        {
            "name": "IN",
            "type": "REAL",
            "description": "The input value to the PID controller."
        },
        {
            "name": "KP",
            "type": "REAL",
            "description": "The proportional gain, default value is 1.0."
        },
        {
            "name": "TN",
            "type": "REAL",
            "description": "The time constant for the integral term, default value is 1.0."
        },
        {
            "name": "TV",
            "type": "REAL",
            "description": "The time constant for the derivative term, default value is 1.0."
        },
        {
            "name": "LIM_L",
            "type": "REAL",
            "description": "Lower limit for the output, default value is -1E+38."
        },
        {
            "name": "LIM_H",
            "type": "REAL",
            "description": "Upper limit for the output, default value is 1E+38."
        },
        {
            "name": "RST",
            "type": "BOOL",
            "description": "Boolean flag to reset the controller state."
        }
    ],
    "output": [
        {
            "name": "Y",
            "type": "REAL",
            "description": "The output value of the PID controller after processing."
        },
        {
            "name": "LIM",
            "type": "BOOL",
            "description": "Indicates whether the output has been limited."
        }
    ],
    "in/out": [],
    "return_value": null
}
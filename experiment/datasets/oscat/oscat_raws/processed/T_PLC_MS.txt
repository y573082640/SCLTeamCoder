Type Function: DWORD
Output DWORD (SPS Timer in milliseconds) 
T_PLC_MS returns the current internal PLC time in milliseconds. This has
nothing to do with a possibly existing clock (real time module), but is the
internal Timer of a PLC, which is used as a time reference. 
The source code of the module has the following characteristics:
FUNCTION T_PLC_MS : DWORD
VAR CONSTANT
DEBUG : BOOL := FALSE;
N : INT := 0;
OFFSET := 0;
END_VAR
VAR
TEMP : DWORD := 1;
END_VAR
T_PLC_MS := TIME_TO_DWORD(TIME());
IF DEBUG THEN
T_PLC_MS := SHL(T_PLC_US,N) OR SHL(TEMP,N)-1 + OFFSET;
END_IF;
In normal operation, the module reads the function TIME() the internal
Timer of the PLC, and returns it. The internal Timer the PLC according to
IEC standard has one millisecond resolution. 
Another feature of T_PLC_MS is a debug mode, which allows to test the
overfow of the internal PLC Timers and verify the developed software shu￾re. The internal Timer of any PLC has, independent of manufacturer and
type of implementation, after a fxed time an overfow. That means that it
is running against .. FF FFFF (highest value of the corresponding type can
be stored) and then starts again at 000..0000. At standard PLC Timers is
the overfow time 2^32 -1 milliseconds, which is about 49.71 days. Since
this Timer is implemented in a hardware, it initial value can not be set, so
that after starting the PLC it always starts at 0 and runs up to the maxi￾mum value . After reaching the maximum value, the infamous Timer Over￾fow arises, which causes fatal consequences in the application software ,
but can only be tested extremely difcult. 
T_PLC_MS ofers several ways to test the overfow and time-dependent
software. With the constant DEBUG, the test mode is switched on and
then, using the constants N and ofset , starts the timer at a certain level,
thus specifcally the overfow can be tested without waiting the 49. Ofset
defnces which ist addeed to the value of the internal Timer . With the con￾stant N is determined by how many bits of the internal Timer Value is shif￾ted to the left, while the lower N bits are flled with 1. With N thus the
speed of the internal Timers can be increased by factors of 2,4,8,16 and
so on. 
T_PLC_US thus ofers all possibilities to test time-dependent software, both
for the problem of overfow, and for very slow time-dependent functions.
The constant DEBUG, N and OFFSET were intentionally not implemented
as inputs of the function to avoid accidental misuse.
Type Function module
Input SET: BOOL (Asynchronous Set)
IN: BYTE (default value for set)
UP: BOOL (forward switch edge-triggered)
DN: BOOL (reverse switch edge-triggered)
STEP: BYTE (increment of Counters )
MX: BYTE (maximum value of the Counters) 
RST: BOOL (asynchronous reset)
Output CNT: BYTE (output)
COUNT_BR is a byte count from 0 to MX and starts again at 0. The counter
can, using two edge-triggered inputs UP and DN, both forward and back￾ward counting. when reaching a fnal value 0 or MX it counts again at 0 or
MX. The STEP input sets the increment value of the counter. With a TRUE
at input SET the counter is set to present value at the IN input. A reset in￾put RST resets the counter at any time to 0.
SET IN UP DN STEP RST CNT
Reset - - - - - 1 0
Set 1 N - - - 0 N
up 0 - ↑ 0 N 0 CNT + N
down 0 - 0 ↑ N 0 CNT - N
If the independent inputs UP and DN with CLK and a control input UP/DN
should be replaced, id can be done using two AND gates at the inputs:
COUNT_BR may work with individual step width at UP or Down command,
it is important to note that the counter behaves as if it internally counts
the number of STEP steps forward or backward.
Example:
MX = 50, STEP = 10
The counter will work as follows:
0,10,20,30,40,50,9,19 ,......
Is 50 achieved in this example, it is recognized as a maximum value and it
continues counting from 0. Internally, it looks like this:
50,0,1,2,3,4,5,6,7,8,9 exactly 50 + 10 if after 50 the 0 comes back.
The implementation of a counter 0 .. 50 in increments of ten is as follows:
MX = 59, STEP = 10 results in 0,10 ...50,0,10
the transition from 50 to 0 is then exactly 10 steps.
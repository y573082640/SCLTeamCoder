{"title": "Non-Linear Interpolation Function", "name": "LGF_NonLinearInterpolation", "description": "Implements a characteristic curve defined via an interpolation point table with linear interpolation.", "type": "FUNCTION_BLOCK", "input": [{"name": "value", "type": "LReal", "description": "Input value for calculating the output value"}, {"name": "defaultOutValue", "type": "LReal", "description": "Value for pre-assignment of the output variable"}, {"name": "enDefaultOutValue", "type": "Bool", "description": "Assign default output value"}, {"name": "track", "type": "Bool", "description": "Follow the value of the input without using the characteristic curve"}, {"name": "reset", "type": "Bool", "description": "Reset the interpolation if the point table is changed in running operation"}], "output": [{"name": "outputValue", "type": "LReal", "description": "The calculated output value from the input value"}], "in/out": [{"name": "setpoints", "type": "Array[*] of LGF_typeNonLinSetpoints", "description": "Setpoint table for defining the characteristic curve"}], "return_value": [], "status_codes": {}, "user_defined_types": [{"name": "LGF_typeNonLinSetpoints", "description": "Data type for setup a setpoint table", "member": [{"name": "inputValue", "type": "LReal", "default": "0.0", "description": "Input value to be interpolated"}, {"name": "outputValue", "type": "LReal", "default": "0.0", "description": "Corresponding interpolated value"}]}], "description_zh": "\n一个函数块FB，用于实现非线性插值功能。该函数块通过定义插值点表来实现特性曲线，并使用线性插值来计算输入值对应的输出值。特性曲线可以是非线性的，通过在插值点之间进行线性插值来实现曲线的平滑过渡。\n\n函数块具有以下功能：\n1. 计算输出值：根据输入值和插值点表，计算得到对应的输出值。\n2. 默认输出值：如果使能默认输出值，则将输入值直接作为输出值。\n3. 跟踪模式：如果处于跟踪模式，则输出值将跟随输入值变化，不使用特性曲线进行插值。\n4. 重置：如果检测到插值点表在运行过程中发生变化，可以重置插值过程。\n\n函数块具有以下输入输出参数：\n- 输入值（value）：用于计算输出值的输入参数。\n- 默认输出值（defaultOutValue）：预设的输出值。\n- 使能默认输出值（enDefaultOutValue）：布尔值，用于指示是否使用默认输出值。\n- 跟踪模式（track）：布尔值，用于指示是否使用跟踪模式。\n- 重置（reset）：布尔值，用于指示是否重置插值过程。\n- 输出值（outputValue）：计算得到的输出值。\n- 插值点表（setpoints）：用于定义特性曲线的插值点数组。\n\n函数块使用线性插值方法，在给定的插值点之间进行计算，得到输入值对应的输出值。\n\n\n"}
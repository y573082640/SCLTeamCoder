FUNCTION_BLOCK METER
VAR_INPUT
    M1 : REAL;
    M2 : REAL;
    I1 : BOOL;
    I2 : BOOL;
    D : REAL := 1.0;
    RST : BOOL;
END_VAR

VAR_IN_OUT
    MX : REAL;
END_VAR_IN_OUT

VAR
    MR : REAL; (* Derived type REAL2 assumed to be REAL *)
    MX1 : REAL; (* Current consumption value on M1 and M2 *)
    MX2 : REAL; (* Current consumption value on M1 and M2 *)
    tx : DWORD;
    last : DWORD;
    tc : REAL;
    init : BOOL;
END_VAR
(* measure the last cycle time and make sure we onle execute once every millisecond *)
tx := T_PLC_MS();
IF NOT init THEN
	init := TRUE;
	last := tx;
	mr.RX := mx;
	mr.R1 := 0.0;
ELSIF tx = last THEN
	RETURN;
ELSE
	tc := DWORD_TO_REAL(tx - last) * 0.001;
END_IF;
last := tx;

(* reset *)
IF rst THEN
	mr.R1 := 0.0;
	mr.RX := 0.0;
ELSE
	(* current consumption measurement *)
	IF I1 THEN MX1 := M1; ELSE MX1 := 0.0; END_IF;
	IF I2 THEN MX2 := M2; ELSE MX2 := 0.0; END_IF;
	(* add up the current values in a double real *)
	MR := R2_ADD(MR,(SEL(I1,0.0,mx1) + SEL(I2, 0.0, mx2)) / D * TC);
	(* set the current output value *)
	MX := mr.RX;
END_IF;




(* revision history

hm	16. sep.2007		rev 1.0
	original version

hm	7. feb 2008		rev 1.1
	use new version of ft_int to avoid a counting stop at high values
	deleted unnecessary limits

hm	24. mar. 2008	rev 1.2
	use data_type real2 to extend accuracy to 15 digits total
	do not use ft_int which adds unnecessary overhead

hm	8. feb. 2009	rev 1.3
	changed mx to be I/O
	make sure calculation works for cycle times < 1 ms

hm	8. mar. 2009	rev 1.4
	last was not updated
	code improvements

*)
END_FUNCTION_BLOCK

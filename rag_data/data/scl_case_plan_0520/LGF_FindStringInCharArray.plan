{"variables": ["1. name: searchFor, type: String, initial: None, role: Text that is searched for in the array.", "2. name: startPos, type: DInt, initial: 0, role: Starting position within the array to begin the search.", "3. name: searchIn, type: Variant, initial: None, role: Array of Character or Byte to search in.", "4. name: tempNumElements, type: UDInt, initial: None, role: Temporary variable to store the number of elements in the array.", "5. name: tempLenSearchFor, type: Int, initial: None, role: Temporary variable to store the length of the search string.", "6. name: tempPosInArray, type: DInt, initial: startPos, role: Temporary variable to store the current position in the array during the search.", "7. name: tempPosInString, type: Int, initial: 0, role: Temporary variable to store the position of the found string in the temporary string.", "8. name: tempString, type: String, initial: None, role: Temporary variable used to store a segment of the searchIn array as a string for searching.", "9. name: status, type: Word, initial: STATUS_NO_ERROR, role: Status of the function, indicating whether an error occurred."], "instructions": ["Chars_TO_Strg", "FIND", "UINT_TO_INT"], "planning": "# Step1. Initialize the temporary variables tempPosInString, tempPosInArray, tempLenSearchFor, and status. Set the function return value LGF_FindStringInCharArray to -1.\n# Step2. Validate that the input searchIn is an array of characters or bytes and get the number of elements in the array. If not, set status to ERR_NO_ARRAY and exit.\n# Step3. Enter a REPEAT loop to search for the beginning of the text in the array until something is found or the end of the array is reached.\n# Step4. Inside the loop, convert a segment of the array starting at tempPosInArray to a string using Chars_TO_Strg.\n# Step5. Use the FIND instruction to search for the searchFor string within the converted tempString.\n# Step6. If the string is found (tempPosInString > 0), calculate the position of the string in the array, assign it to LGF_FindStringInCharArray, and exit the loop.\n# Step7. If the string is not found, increment tempPosInArray to continue the search in the next segment of the array.\n# Step8. Exit the loop when the string is found or the end of the array is reached.", "name": "LGF_FindStringInCharArray"}
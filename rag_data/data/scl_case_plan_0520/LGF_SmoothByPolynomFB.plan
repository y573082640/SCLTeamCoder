{"variables": ["1. name: enable, type: Bool, initial: None, role: Activates the block.", "2. name: insert, type: Bool, initial: None, role: Accepts the value at the input `value` at positive edge and outputs a `smoothedValue`.", "3. name: value, type: LReal, initial: None, role: Value that is to be included in the smoothing.", "4. name: smoothedValue, type: LReal, initial: None, role: The smoothed value output.", "5. name: error, type: Bool, initial: None, role: FALSE: No error, TRUE: An error occurred during the execution of the FB.", "6. name: status, type: Word, initial: #STATUS_NO_CALL, role: Status of the FB and error identification.", "7. name: statValues, type: Array[0..#MINIMUM_NUMBER_OF_VALUES] of LReal, initial: {0..4} elements set to #ZERO_REAL, role: Stores the last five input values for smoothing calculation.", "8. name: statCount, type: Int, initial: 0, role: Counts the number of values inserted.", "9. name: statSmoothedValue, type: LReal, initial: None, role: The internally calculated smoothed value.", "10. name: statStatus, type: Word, initial: None, role: The internally stored status of the FB.", "11. name: statEnableOld, type: Bool, initial: false, role: Stores the previous state of the `enable` input for edge detection.", "12. name: statInsertOld, type: Bool, initial: false, role: Stores the previous state of the `insert` input for edge detection."], "instructions": [""], "planning": "# Step1. Initialize the `statCount` and `statValues` array elements to their default values when the function block is enabled.\n# Step2. Check if the `insert` input has a positive edge and insert the new `value` into the `statValues` array, shifting the previous values.\n# Step3. If the number of inserted values is less than 5, set the status to `STATUS_NOT_ENOUGH_VALUES`. If there are 5 or more values, calculate the smoothed value using the polynomial smoothing formula.\n# Step4. Update the `statStatus` depending on the execution state of the function block.\n# Step5. Update the `statEnableOld` and `statInsertOld` variables with the current state of `enable` and `insert` for the next cycle edge detection.\n# Step6. Assign the calculated `statSmoothedValue` to the `smoothedValue` output, update the `error` output based on the `statStatus`, and set the `status` output to the current `statStatus`.\n# Step7. The ENO variable is forced to TRUE as per the code standard.", "name": "LGF_SmoothByPolynomFB"}
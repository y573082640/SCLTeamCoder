{"variables": ["1. name: trigger, type: Bool, initial: None, role: Input signal for edge detection.", "2. name: monitorTime, type: Time, initial: T#1s, role: Duration for monitoring the input signal for edges.", "3. name: single, type: Bool, initial: None, role: Output flag indicating a single edge detection within the monitoring time.", "4. name: double, type: Bool, initial: None, role: Output flag indicating two edge detections within the monitoring time.", "5. name: long, type: Bool, initial: None, role: Output flag indicating a single edge and the input signal remains TRUE after the edge.", "6. name: severalEdges, type: Bool, initial: None, role: Output flag indicating multiple edges within the monitoring time.", "7. name: noOfEdges, type: USInt, initial: None, role: Output counter for the number of edges within the monitoring time.", "8. name: instTimer, type: IEC_TIMER, initial: None, role: Timer instance used for monitoring the time frame.", "9. name: statTriggerPrevious, type: Bool, initial: None, role: Memory to store the previous state of the input signal for edge detection.", "10. name: statTimeElapsedFlag, type: Bool, initial: None, role: Flag to indicate the monitoring time has elapsed.", "11. name: statTriggerCounter, type: USInt, initial: None, role: Counter for the number of edges detected.", "12. name: tempTriggerEdge, type: Bool, initial: None, role: Temporary variable to detect a change in the input signal.", "13. name: tempSingle, type: Bool, initial: None, role: Temporary variable to store the result of a single edge detection.", "14. name: tempDouble, type: Bool, initial: None, role: Temporary variable to store the result of a double edge detection.", "15. name: tempLong, type: Bool, initial: None, role: Temporary variable to store the result of a long edge detection.", "16. name: tempSeveralEdges, type: Bool, initial: None, role: Temporary variable to store the result of multiple edge detections.", "17. name: tempNoOfEdges, type: USInt, initial: None, role: Temporary variable to store the number of edges detected."], "instructions": ["IEC_TIMER.TP"], "planning": "# Step1. Initialize the previous state of the trigger signal statTriggerPrevious.\n# Step2. Check for a change in the input signal (tempTriggerEdge) on each iteration.\n# Step3. If an edge is detected (tempTriggerEdge), start the timer instTimer for the duration of monitorTime.\n# Step4. Increment the edge counter statTriggerCounter when an edge is detected.\n# Step5. Check if the monitoring time has elapsed and if at least one edge was detected.\n# Step6. If the time has elapsed and the trigger signal is FALSE, reset all the outputs and counters.\n# Step7. If the time has elapsed and edges were detected, determine the type of edge detection (single, double, long, severalEdges) based on statTriggerCounter and set the output flags accordingly.\n# Step8. Assign the number of detected edges to the output noOfEdges.\n# Step9. Set ENO to TRUE as no error handling is implemented.", "name": "LGF_CountBooleanEdges"}
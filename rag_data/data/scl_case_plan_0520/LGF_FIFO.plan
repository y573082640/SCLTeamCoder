{"variables": ["1. name: enqueue, type: Bool, initial: false, role: Input signal to add an item to the FIFO buffer.", "2. name: dequeue, type: Bool, initial: false, role: Input signal to remove the oldest item from the FIFO buffer.", "3. name: reset, type: Bool, initial: Not specified, role: Input signal to reset the buffer.", "4. name: clear, type: Bool, initial: Not specified, role: Input signal to clear the buffer and fill with initialItem.", "5. name: initialItem, type: Variant, initial: Not specified, role: Initial value used to fill the buffer when cleared.", "6. name: error, type: Bool, initial: false, role: Output signal indicating an error occurred during buffer operation.", "7. name: status, type: Word, initial: Not specified, role: Status word providing error identification.", "8. name: subFunctionStatus, type: Word, initial: Not specified, role: Status word for return values of called functions and system blocks.", "9. name: elementCount, type: DInt, initial: 0, role: Output signal indicating the number of elements in the buffer.", "10. name: isEmpty, type: Bool, initial: false, role: Output signal indicating if the buffer is empty.", "11. name: item, type: Variant, initial: Not specified, role: I/O parameter to read from or write to the buffer.", "12. name: buffer, type: Variant, initial: Not specified, role: I/O parameter representing the buffer as an array of Variant elements.", "13. name: statEdgesMem, type: Struct, initial: Not specified, role: Internal memory to store previous state of input signals for edge detection.", "14. name: statFirstItemIndex, type: Int, initial: -1, role: Internal memory to track the index of the oldest item in the buffer.", "15. name: statNextEmptyItemIndex, type: Int, initial: 0, role: Internal memory to track the index where the next item will be enqueued.", "16. name: statElementCount, type: DInt, initial: Not specified, role: Internal memory to track the number of elements currently in the buffer.", "17. name: tempEdges, type: Struct, initial: Not specified, role: Temporary structure used to detect edges of input signals.", "18. name: tempInternalError, type: Int, initial: Not specified, role: Temporary variable to store error codes from MOVE_BLK_VARIANT operations.", "19. name: tempNewFirstItemIndex, type: Int, initial: Not specified, role: Temporary variable to store the new index of the first item after a dequeue operation.", "20. name: tempNewNextEmptyItemIndex, type: Int, initial: Not specified, role: Temporary variable to store the new index of the next empty item after an enqueue operation.", "21. name: tempBufferSize, type: UDInt, initial: Not specified, role: Temporary variable to store the size of the buffer.", "22. name: tempCounter, type: Int, initial: Not specified, role: Temporary loop counter used during buffer initialization."], "instructions": ["IS_ARRAY", "CountOfElements", "TypeOf", "TypeOfElements", "MOVE_BLK_VARIANT", "MOD", "UDINT_TO_INT", "INT_TO_WORD"], "planning": "# Step1. Check if any trigger input is active, if not, set status and return.\n# Step2. Validate inputs: check if buffer is an array, data types of item and initialItem match, and indices are within array limits.\n# Step3. If reset is true, reset buffer indices and counters.\n# Step4. If clear edge is detected, initialize buffer with initialItem and reset indices and counters.\n# Step5. If enqueue edge is detected, check if buffer is full, if not, write item to buffer and update indices and counters.\n# Step6. If dequeue edge is detected, check if buffer is empty, if not, read item from buffer and update indices and counters.\n# Step7. Write to outputs: update elementCount and isEmpty based on statElementCount.\n# Step8. Set error, status, and subFunctionStatus to indicate successful operation.", "name": "LGF_FIFO"}
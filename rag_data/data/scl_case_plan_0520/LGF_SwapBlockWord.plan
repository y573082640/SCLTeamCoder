{"variables": ["1. name: data, type: Array[*] of Word, initial: None, role: Contains the data values, which will be endianness adjusted.", "2. name: tempUpperIndex, type: DInt, initial: None, role: Temporary variable to store the maximum index of the array for loop control.", "3. name: tempSwapIndex, type: DInt, initial: None, role: Temporary variable used as the index to iterate through the array elements.", "4. name: tempSwapValue, type: Word, initial: None, role: Temporary variable used to hold the current value during byte swapping.", "5. name: FIRST_DIMENSION, type: UDInt, initial: 1, role: Constant representing the first dimension of the array.", "6. name: NEXT_ELEMENT, type: DInt, initial: 1, role: Constant representing the increment to move to the next element in the array."], "instructions": ["LOWER_BOUND", "UPPER_BOUND"], "planning": "# Step1. Initialize the temporary variable tempSwapIndex to the lowest index of the array data using the LOWER_BOUND instruction.\n# Step2. Initialize the temporary variable tempUpperIndex to the highest index of the array data using the UPPER_BOUND instruction.\n# Step3. Use a WHILE loop to iterate through the array elements using the tempSwapIndex as the loop control variable.\n# Step4. Inside the loop, read the current array element into the temporary variable tempSwapValue.\n# Step5. Swap the bytes of the current array element by writing the byte 1 to byte 0 and byte 0 to byte 1 of the array element.\n# Step6. Increment the tempSwapIndex by NEXT_ELEMENT to move to the next array element.\n# Step7. Continue the loop until tempSwapIndex is not less than tempUpperIndex.\n# Step8. Set the ENO to TRUE indicating successful execution without error.", "name": "LGF_SwapBlockWord"}
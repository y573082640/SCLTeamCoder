{"variables": ["1. name: array, type: Variant, initial: None, role: An input array whose number of elements needs to be counted.", "2. name: tempBufferSize, type: DInt, initial: None, role: A temporary variable used to store the number of elements in the array or return error codes.", "3. name: RETURN_NO_ARRAY, type: DInt, initial: -1, role: Constant representing an error code for non-array input.", "4. name: RETURN_NO_BOOL_ARRAYS_NOT_SUPPORTED, type: DInt, initial: -2, role: Constant representing an error code for boolean array input which is not supported."], "instructions": ["IS_ARRAY", "TypeOfElements", "UDINT_TO_DINT", "CountOfElements"], "planning": "# Step1. Check if the input variable `array` is an array. If not, assign the error code `RETURN_NO_ARRAY` to `tempBufferSize`.\n# Step2. If the input variable is an array but the elements are of type `bool`, assign the error code `RETURN_NO_BOOL_ARRAYS_NOT_SUPPORTED` to `tempBufferSize`.\n# Step3. If the input variable is an array with supported element types, use `CountOfElements` to get the number of elements and convert the result to DInt using `UDINT_TO_DINT`, then assign it to `tempBufferSize`.\n# Step4. Assign the value of `tempBufferSize` to the function return variable `LGF_CountArrayElements`.\n# Step5. Set `ENO` to `true` as there is no error handling required.", "name": "LGF_CountArrayElements"}
{"variables": ["1. name: julianDate, type: LReal, initial: None, role: Input Julian Date to convert.", "2. name: isModifiedDate, type: Bool, initial: FALSE, role: Indicates if the Julian Date is modified.", "3. name: error, type: Bool, initial: None, role: Signals if an error occurred during execution.", "4. name: status, type: Word, initial: None, role: Provides status information and error codes.", "5. name: tempJulianDate, type: LReal, initial: None, role: Temporary variable to hold adjusted Julian Date.", "6. name: tempUnixTime, type: DInt, initial: None, role: Temporary variable to store the converted Unix time.", "7. name: tempDate, type: DInt, initial: None, role: Temporary variable to store calculated date.", "8. name: tempTime, type: DInt, initial: None, role: Temporary variable to store calculated time.", "9. name: tempDTL, type: DTL, initial: None, role: Temporary variable to hold the converted date and time.", "10. name: DELTA_1970_1990, type: DInt, initial: 631152000, role: Constant, difference in seconds between 1970 and 1990.", "11. name: SEC_PER_DAY, type: DInt, initial: 86400, role: Constant, number of seconds in a day.", "12. name: SEC_PER_HOUR, type: DInt, initial: 3600, role: Constant, number of seconds in an hour.", "13. name: SEC_PER_MINUTE, type: DInt, initial: 60, role: Constant, number of seconds in a minute.", "14. name: OFFSET_JULIAN_DATE_TO_UNIX, type: LReal, initial: 2440587.5, role: Constant, offset for converting Julian Date to Unix time.", "15. name: OFFSET_MODIFIED_JULIAN_DATE_TO_JULIAN_DATE, type: LReal, initial: 2400000.5, role: Constant, offset for converting Modified Julian Date to Julian Date.", "16. name: STATUS_NO_ERRROR, type: Word, initial: 16#0000, role: Constant, status code for no error.", "17. name: ERR_TIME_BEFORE_1990, type: Word, initial: 16#8000, role: Constant, error code for time before 1990.", "18. name: WARN_CONVERSION_LIMIT, type: Word, initial: 16#6001, role: Constant, warning code for conversion limit.", "19. name: CONVERSION_LIMIT, type: DTL, initial: 1990-01-01-00:00:00, role: Constant, default DTL value for conversion limits."], "instructions": ["LREAL_TO_DINT", "DINT_TO_DATE", "DATE_TO_DTL", "DINT_TO_USINT"], "planning": "# Step1. Check if the input Julian Date is a modified date and adjust it by adding an offset if needed.\n# Step2. Convert the adjusted Julian Date to Unix time by subtracting an offset and multiplying by the number of seconds per day.\n# Step3. Check if the resulting Unix time is before 1990 and set error status and return value accordingly.\n# Step4. Convert the Unix time to a date by subtracting the difference between 1970 and 1990, then dividing by the number of seconds per day.\n# Step5. Convert the date to a DTL format using DATE_TO_DTL instruction.\n# Step6. Calculate the time by subtracting the date-related seconds from the Unix time and use modulo and division to find hours, minutes, and seconds.\n# Step7. Assign the calculated time values to the corresponding fields in the tempDTL variable.\n# Step8. Set the output variables with the converted date and time, and update the error and status flags to reflect a successful conversion.", "name": "LGF_JulianTimeToDTL"}
{"variables": ["1. name: date, type: DTL, initial: None, role: An input date used to calculate the calendar week and days since January 1st.", "2. name: calendarDay, type: DInt, initial: None, role: An output representing the number of days passed since January 1st on the given date.", "3. name: error, type: Bool, initial: None, role: An output indicating if an error occurred during the execution of the function block.", "4. name: status, type: Word, initial: None, role: An output representing the status of the function block or error identification.", "5. name: tempDate, type: DTL, initial: None, role: A temporary variable used to manipulate dates for weekday calculations.", "6. name: tempCurrentYearWeekday1Jan, type: UDInt, initial: None, role: A temporary variable representing the weekday of January 1st in the current year.", "7. name: tempNextYearWeekday1Jan, type: UDInt, initial: None, role: A temporary variable representing the weekday of January 1st in the next year.", "8. name: tempCurrentYearWeekday31Dec, type: UDInt, initial: None, role: A temporary variable representing the weekday of December 31st in the current year.", "9. name: tempPrevYearWeekday1Jan, type: UDInt, initial: None, role: A temporary variable representing the weekday of January 1st in the previous year.", "10. name: tempPrevYearWeekday31Dec, type: UDInt, initial: None, role: A temporary variable representing the weekday of December 31st in the previous year.", "11. name: tempDaysCorr, type: DInt, initial: None, role: A temporary variable used to correct the number of days depending on the weekday of January 1st.", "12. name: tempWeek, type: DInt, initial: None, role: A temporary variable representing the calculated calendar week.", "13. name: tempDays, type: DInt, initial: None, role: A temporary variable used to store the number of days passed since January 1st including the given date.", "14. name: tempCurrentYearIsLeapyear, type: Bool, initial: None, role: A temporary variable indicating if the current year is a leap year.", "15. name: tempPrevYearIsLeapyear, type: Bool, initial: None, role: A temporary variable indicating if the previous year is a leap year.", "16. name: tempYearCurrentYear, type: UInt, initial: None, role: A temporary variable representing the year of the given date.", "17. name: tempPreviousYear, type: UInt, initial: None, role: A temporary variable representing the previous year.", "18. name: tempNextYear, type: UInt, initial: None, role: A temporary variable representing the next year.", "19. name: tempIsCurrentYearWith53Weeks, type: Bool, initial: None, role: A temporary variable indicating if the current year has 53 weeks.", "20. name: tempIsPrevYearWith53Weeks, type: Bool, initial: None, role: A temporary variable indicating if the previous year had 53 weeks."], "instructions": ["LGF_GetCalendarDay"], "planning": "# Step1. Initialize the temporary variables tempDays and tempWeek to 0.\n# Step2. Use the LGF_GetCalendarDay instruction to calculate the number of days passed since January 1st, including the given date.\n# Step3. If an error occurs during the LGF_GetCalendarDay call, return the current value of tempWeek and exit.\n# Step4. Determine the year of the given date, the previous year, and the next year.\n# Step5. Check if the current year and the previous year are leap years.\n# Step6. Calculate the weekday for January 1st and December 31st for both the current year and the previous year.\n# Step7. Determine if the previous year and the current year have 53 weeks.\n# Step8. Adjust the number of days passed (tempDays) based on the weekday of January 1st in the current year.\n# Step9. Calculate the calendar week (tempWeek) based on the corrected number of days passed.\n# Step10. Handle edge cases where January 1st belongs to the last week of the previous year or December 31st belongs to the first week of the next year.\n# Step11. Set the outputs calendarDay, error, status, and return the value of tempWeek as the result of the function.", "name": "LGF_GetCalendarWeek_ISO"}
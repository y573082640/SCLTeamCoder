{"variables": ["1. name: mode, type: Int, initial: None, role: Input parameter to determine the conversion mode.", "2. name: value, type: Real, initial: None, role: Input parameter to specify the temperature value to be converted.", "3. name: tempConversionResult, type: Real, initial: None, role: Temporary variable to store the conversion result.", "4. name: error, type: Bool, initial: None, role: Output parameter to indicate whether an error occurred during execution.", "5. name: status, type: Word, initial: None, role: Output parameter to return the status of the function."], "instructions": ["# No SCL instructions used in the provided code."], "planning": "# Step1. Check the 'mode' input parameter to determine which conversion formula to use.\n# Step2. Depending on the 'mode' value, apply the corresponding conversion formula to the 'value' input parameter and store the result in 'tempConversionResult'.\n# Step3. If an unsupported 'mode' is selected, set 'error' to TRUE, 'status' to 'ERR_WRONG_MODE', and return a default value of 0.0 for the function result.\n# Step4. Set 'LGF_ConvertTemperature' to 'tempConversionResult' to return the converted temperature.\n# Step5. Set 'error' to FALSE and 'status' to 'NO_ERROR' to indicate successful execution.\n# Step6. Set ENO to TRUE to indicate that no error handling is required.", "name": "LGF_ConvertTemperature"}
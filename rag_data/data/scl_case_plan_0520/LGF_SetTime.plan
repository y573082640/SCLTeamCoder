{"variables": ["1. name: execute, type: Bool, initial: None, role: Input that triggers the function block.", "2. name: systemTime, type: DTL, initial: None, role: System time to be set in the PLC.", "3. name: isLocalTime, type: Bool, initial: None, role: Indicates if systemTime is local time.", "4. name: timeZone, type: Int, initial: None, role: Timezone offset in hours and minutes.", "5. name: isDaylightSavingTime, type: Bool, initial: None, role: Indicates daylight saving time status.", "6. name: done, type: Bool, initial: None, role: Output indicating successful completion.", "7. name: busy, type: Bool, initial: None, role: Output indicating the function block is active.", "8. name: error, type: Bool, initial: None, role: Output indicating an error occurred.", "9. name: lastSetTimeZone, type: String, initial: None, role: Output of the last set time zone.", "10. name: status, type: Word, initial: #STATUS_NO_CALL, role: Status of the function block.", "11. name: subFunctionStatus, type: Word, initial: None, role: Status or return value of called functions.", "12. name: statExecuteOld, type: Bool, initial: None, role: Internal variable for edge detection of 'execute'.", "13. name: statDone, type: Bool, initial: None, role: Internal variable for 'done' output.", "14. name: statBusy, type: Bool, initial: None, role: Internal variable for 'busy' output.", "15. name: statError, type: Bool, initial: None, role: Internal variable for 'error' output.", "16. name: statStatus, type: Word, initial: #STATUS_NO_CALL, role: Internal variable for 'status' output.", "17. name: statSubFunctionStatus, type: Word, initial: None, role: Internal variable for 'subFunctionStatus' output.", "18. name: statFBState, type: DInt, initial: #FB_STATE_NO_PROCESSING, role: Internal variable for state machine management.", "19. name: instSetTimeZone, type: SET_TIMEZONE, initial: None, role: Instance of SET_TIMEZONE system function.", "20. name: statTimeZone, type: TimeTransformationRule, initial: (0, 60, 3, 5, 1, 2, 0, 10, 5, 1, 3, 0, 'not even set by LGF_TimeZone'), role: Internal variable for time zone settings.", "21. name: tempExecute, type: Bool, initial: None, role: Temporary variable for 'execute' input.", "22. name: tempSetTimeZoneDone, type: Bool, initial: None, role: Temporary variable for 'DONE' output of SET_TIMEZONE.", "23. name: tempSetTimeZoneBusy, type: Bool, initial: None, role: Temporary variable for 'BUSY' output of SET_TIMEZONE.", "24. name: tempSetTimeZoneError, type: Bool, initial: None, role: Temporary variable for 'ERROR' output of SET_TIMEZONE.", "25. name: tempSetTimeZoneStatus, type: Word, initial: None, role: Temporary variable for 'STATUS' output of SET_TIMEZONE.", "26. name: tempResultSetTime, type: Word, initial: None, role: Temporary variable for result of setting time."], "instructions": ["SET_TIMEZONE", "WR_LOC_T", "WR_SYS_T", "INT_TO_WORD"], "planning": "# Step1. Check if the function block is triggered by a rising edge of 'execute'.\n# Step2. Initialize the function block if it is the first call.\n# Step3. Set the time zone values for the system function based on the 'timeZone' input.\n# Step4. Select daylight saving time on/off based on 'isDaylightSavingTime' input.\n# Step5. Call the subsidiary FBs with FALSE to initialize the functionality.\n# Step6. If 'isLocalTime' is TRUE, set the local time using WR_LOC_T; otherwise, set the system time using WR_SYS_T.\n# Step7. Check for errors in setting the time and set the appropriate error status.\n# Step8. If no error, proceed to set the time zone using SET_TIMEZONE.\n# Step9. Monitor the 'DONE' and 'ERROR' outputs of SET_TIMEZONE to determine the next step.\n# Step10. Update the outputs 'done', 'busy', 'error', 'status', 'subFunctionStatus', and 'lastSetTimeZone' based on the current state and status.\n# Step11. Set 'ENO' to TRUE as error handling is done with 'error' and 'status' outputs.", "name": "LGF_SetTime"}
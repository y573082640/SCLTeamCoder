{"variables": ["1. name: error, type: Bool, initial: False, role: Error flag for the function, indicating if an error has occurred during execution.", "2. name: status, type: Word, initial: 16#0000, role: Status code indicating the result of the function execution.", "3. name: matrix, type: Array[*, *] of LReal, initial: None, role: Input matrix to be transposed.", "4. name: matrixTranspose, type: Array[*, *] of LReal, initial: None, role: Output matrix to store the transposed input matrix.", "5. name: tempMatrix1LowerBoundRows, type: DInt, initial: None, role: Temporary variable to store the lower bound of rows for matrix.", "6. name: tempMatrix1LowerBoundColumns, type: DInt, initial: None, role: Temporary variable to store the lower bound of columns for matrix.", "7. name: tempMatrix1UpperBoundRows, type: DInt, initial: None, role: Temporary variable to store the upper bound of rows for matrix.", "8. name: tempMatrix1UpperBoundColumns, type: DInt, initial: None, role: Temporary variable to store the upper bound of columns for matrix.", "9. name: tempResultMatrixLowerBoundRows, type: DInt, initial: None, role: Temporary variable to store the lower bound of rows for matrixTranspose.", "10. name: tempResultMatrixLowerBoundColumns, type: DInt, initial: None, role: Temporary variable to store the lower bound of columns for matrixTranspose.", "11. name: tempResultMatrixUpperBoundRows, type: DInt, initial: None, role: Temporary variable to store the upper bound of rows for matrixTranspose.", "12. name: tempResultMatrixUpperBoundColumns, type: DInt, initial: None, role: Temporary variable to store the upper bound of columns for matrixTranspose.", "13. name: tempCounterRow, type: DInt, initial: None, role: Counter variable used in FOR loop for iterating over rows.", "14. name: tempCounterColumn, type: DInt, initial: None, role: Counter variable used in FOR loop for iterating over columns.", "15. name: ROWS, type: UInt, initial: 1, role: Constant for selecting row dimension for matrix operations.", "16. name: COLUMNS, type: UInt, initial: 2, role: Constant for selecting column dimension for matrix operations.", "17. name: STATUS_NO_ERROR, type: Word, initial: 16#0000, role: Constant representing no error status code.", "18. name: ERR_MATR1_LOWBOUND_ROWS_RESMATR_LOWBOUND_COLUMNS, type: Word, initial: 16#8200, role: Constant representing specific error status code.", "19. name: ERR_MATR1_LOWBOUND_COLUMNS_RESMATR_LOWBOUND_ROWS, type: Word, initial: 16#8201, role: Constant representing specific error status code.", "20. name: ERR_MATR1_UPPBOUND_ROWS_RESMATR_UPPBOUND_COLUMNS, type: Word, initial: 16#8202, role: Constant representing specific error status code.", "21. name: ERR_MATR1_UPPBOUND_COLUMNS_RESMATR_UPPBOUND_ROWS, type: Word, initial: 16#8203, role: Constant representing specific error status code."], "instructions": ["LOWER_BOUND", "UPPER_BOUND"], "planning": "# Step1. Initialize the matrix dimensions and error status variables.\n# Step2. Check the dimensions of the input matrix against the dimensions of the output matrix to validate preconditions for matrix transpose. If any dimension does not match, set the error flag and corresponding status code, then exit the function.\n# Step3. If preconditions are met, use nested FOR loops to iterate through each element of the input matrix, swapping row and column indices to populate the output matrix with the transposed values.\n# Step4. After completing the transpose operation, set the error flag to FALSE and status code to STATUS_NO_ERROR to indicate successful execution.\n# Step5. Set ENO to TRUE, indicating no runtime errors occurred during the function execution.", "name": "LGF_MatrixTranspose"}
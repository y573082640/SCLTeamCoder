{"variables": ["1. name: date, type: DTL, initial: None, role: Input date used to calculate the calendar week and days since January 1st.", "2. name: calendarDay, type: DInt, initial: None, role: Output number of days passed since January 1st on the given date.", "3. name: error, type: Bool, initial: None, role: Output flag indicating if an error occurred during the execution.", "4. name: status, type: Word, initial: None, role: Output status of the function block or error identification.", "5. name: tempDate, type: DTL, initial: None, role: Temporary variable used to calculate specific dates for weekday determination.", "6. name: tempCurrentYearWeekday1Jan, type: UDInt, initial: None, role: Variable to store the weekday of January 1st of the current year.", "7. name: tempNextYearWeekday1Jan, type: UDInt, initial: None, role: Variable to store the weekday of January 1st of the next year.", "8. name: tempCurrentYearWeekday31Dec, type: UDInt, initial: None, role: Variable to store the weekday of December 31st of the current year.", "9. name: tempPrevYearWeekday1Jan, type: UDInt, initial: None, role: Variable to store the weekday of January 1st of the previous year.", "10. name: tempPrevYearWeekday31Dec, type: UDInt, initial: None, role: Variable to store the weekday of December 31st of the previous year.", "11. name: tempDaysCorr, type: DInt, initial: None, role: Corrected number of days to calculate the week number correctly.", "12. name: tempWeek, type: DInt, initial: None, role: Temporary variable to store the calculated week number.", "13. name: tempDays, type: DInt, initial: 0, role: Temporary variable to store the number of days passed in the current year including the input date.", "14. name: tempCurrentYearIsLeapyear, type: Bool, initial: None, role: Flag indicating if the current year is a leap year.", "15. name: tempPrevYearIsLeapyear, type: Bool, initial: None, role: Flag indicating if the previous year is a leap year.", "16. name: tempYearCurrentYear, type: UInt, initial: None, role: Variable to store the current year extracted from the input date.", "17. name: tempYearPrevYear, type: UInt, initial: None, role: Variable to store the previous year's year number.", "18. name: tempYearNextYear, type: UInt, initial: None, role: Variable to store the next year's year number.", "19. name: tempIsCurrentYearWith53Weeks, type: Bool, initial: None, role: Flag indicating if the current year has 53 weeks.", "20. name: tempIsPrevYearWith53Weeks, type: Bool, initial: None, role: Flag indicating if the previous year has 53 weeks."], "instructions": ["LGF_GetCalendarDay"], "planning": "# Step1. Initialize the temporary variable tempDays to 0 and tempWeek to 0.\n# Step2. Call the LGF_GetCalendarDay function to calculate the number of days passed since January 1st on the given date and store it in tempDays.\n# Step3. Extract the year from the input date and calculate the previous and next year's year numbers.\n# Step4. Determine if the current year and the previous year are leap years.\n# Step5. Calculate the weekday for January 1st and December 31st for the current year and the previous year.\n# Step6. Adjust the tempDays value based on the weekday of January 1st to get the corrected tempDaysCorr.\n# Step7. Calculate the initial week number using the corrected tempDaysCorr.\n# Step8. Check if the current year has 53 weeks and adjust the week number accordingly.\n# Step9. If the calculated week number is 54, adjust it to 1, as there are only 53 weeks at most in a year.\n# Step10. Assign the calculated values to the output parameters calendarDay, error, status, and the function return value LGF_GetCalendarWeek_US.\n# Step11. Set the ENO to TRUE as error handling is done with error and status.", "name": "LGF_GetCalendarWeek_US"}
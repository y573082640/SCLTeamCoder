{"variables": ["1. name: startValue, type: Int, initial: None, role: The starting value for the sawtooth signal.", "2. name: timeRange, type: Time, initial: None, role: The time range for each step of the sawtooth signal.", "3. name: incrementRange, type: Int, initial: None, role: The increment value for each step of the sawtooth signal.", "4. name: numberSteps, type: Int, initial: None, role: The number of steps in the sawtooth signal if not endless.", "5. name: endlessSteps, type: Bool, initial: FALSE, role: Determines if the sawtooth signal runs endlessly.", "6. name: reset, type: Bool, initial: FALSE, role: A trigger to reset the sawtooth signal generator.", "7. name: value, type: Int, initial: None, role: The current value of the sawtooth signal output.", "8. name: statStartValue, type: Int, initial: None, role: Static copy of the startValue for internal use.", "9. name: statEndlessSteps, type: Bool, initial: None, role: Static copy of the endlessSteps for internal use.", "10. name: statTimeRange, type: Time, initial: None, role: Static copy of the timeRange for internal use.", "11. name: statIncrementRange, type: Int, initial: None, role: Static copy of the incrementRange for internal use.", "12. name: statNumberSteps, type: Int, initial: None, role: Static copy of the numberSteps for internal use.", "13. name: statCurrentStep, type: Int, initial: 0, role: Tracks the current step of the sawtooth signal.", "14. name: statFirstRun, type: Bool, initial: TRUE, role: Flag for first run or after reset initialization.", "15. name: statStartTimer, type: Bool, initial: FALSE, role: Controls the start of the timer.", "16. name: statTimerFinished, type: Bool, initial: FALSE, role: Flag indicating the timer has finished its time range.", "17. name: instTimer, type: TON_TIME, initial: None, role: Timer instance to manage timing for each step.", "18. name: statActValue, type: Int, initial: None, role: Static actual value of the sawtooth signal.", "19. name: ZERO, type: Int, initial: 0, role: Constant representing the zero value.", "20. name: INCREMENT_WITH_ONE, type: Int, initial: 1, role: Constant representing an increment of one."], "instructions": ["TON_TIME"], "planning": "# Step1. Initialize static variables on first run or reset.\n# Step2. If the timer finished its interval and reset is not active, calculate the new sawtooth signal value and update the step counter.\n# Step3. If the number of steps is limited and the current step exceeds the number of steps, reset the step counter and the actual value to start values.\n# Step4. If endless steps are enabled, reset the step counter after each increment.\n# Step5. Reset the timer start condition and start the timer.\n# Step6. If reset is active, set the actual value to the start value.\n# Step7. Assign the actual value to the output variable.\n# Step8. Set ENO to TRUE as no error handling is required.", "name": "LGF_SawTooth"}
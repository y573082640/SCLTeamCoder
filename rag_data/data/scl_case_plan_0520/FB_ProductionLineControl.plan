{"variables": ["1. name: Mode, type: Bool, initial: None, role: Input signal to switch between manual and automatic mode of the production line.", "2. name: ForwardButton, type: Bool, initial: None, role: Button input to control motor forward in manual mode.", "3. name: ReverseButton, type: Bool, initial: None, role: Button input to control motor reverse in manual mode.", "4. name: SensorA, type: Bool, initial: None, role: Sensor input to detect product arrival at station A.", "5. name: SensorB, type: Bool, initial: None, role: Sensor input to detect product arrival at station B.", "6. name: SensorC, type: Bool, initial: None, role: Sensor input to detect product arrival at station C.", "7. name: ButtonA, type: Bool, initial: None, role: Button input to trigger the processing completion signal at station A.", "8. name: ButtonB, type: Bool, initial: None, role: Button input to trigger the processing completion signal at station B.", "9. name: ButtonC, type: Bool, initial: None, role: Button input to trigger the processing completion signal at station C.", "10. name: MotorForward, type: Bool, initial: None, role: Output signal to control the motor forward.", "11. name: MotorReverse, type: Bool, initial: None, role: Output signal to control the motor reverse.", "12. name: CompletionLight, type: Bool, initial: None, role: Output signal to indicate the completion of product processing.", "13. name: currentState, type: Int, initial: 0, role: State variable used to track the current state of the production line.", "14. name: tempMotorForward, type: Bool, initial: None, role: Temporary variable to store the motor forward control signal.", "15. name: tempMotorReverse, type: Bool, initial: None, role: Temporary variable to store the motor reverse control signal.", "16. name: tempCompletionLight, type: Bool, initial: None, role: Temporary variable to store the completion light control signal."], "instructions": [""], "planning": "# Step1. Check the mode of operation. If the Mode is FALSE, the production line is in manual mode.\n# Step2. In manual mode, set tempMotorForward to ForwardButton if ReverseButton is not pressed, and set tempMotorReverse to ReverseButton if ForwardButton is not pressed.\n# Step3. If the Mode is TRUE, the production line is in automatic mode, and the logic proceeds based on the currentState.\n# Step4. In STATE_A, if both SensorA and ButtonA are TRUE, transition to STATE_B and set tempMotorForward to TRUE to move the product to station B.\n# Step5. In STATE_B, if both SensorB and ButtonB are TRUE, transition to STATE_C and set tempMotorForward to TRUE to move the product to station C.\n# Step6. In STATE_C, if both SensorC and ButtonC are TRUE, transition to STATE_D and set tempCompletionLight to TRUE to indicate the product is processed.\n# Step7. In STATE_D, if SensorC is FALSE (product is removed), transition back to STATE_A and set tempCompletionLight to FALSE. If SensorC is TRUE, keep tempCompletionLight TRUE.\n# Step8. In automatic mode, tempMotorReverse is always set to FALSE.\n# Step9. Assign the temporary variables to the output signals MotorForward, MotorReverse, and CompletionLight.", "name": "FB_ProductionLineControl"}
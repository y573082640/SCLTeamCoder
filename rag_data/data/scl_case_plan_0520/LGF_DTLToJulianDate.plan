{"variables": ["1. name: timeDTL, type: DTL, initial: None, role: Input DTL value to be converted to Julian Date.", "2. name: julianDate, type: LReal, initial: None, role: Output value holding the converted Julian date.", "3. name: modifiedJulianDate, type: LReal, initial: None, role: Output value holding the converted modified Julian date.", "4. name: error, type: Bool, initial: None, role: Output flag indicating if an error occurred during execution.", "5. name: status, type: Word, initial: None, role: Output parameter that gives the status of the function and error identification.", "6. name: tempTimeDtl, type: DTL, initial: None, role: Temporary variable used to check the validity of the input and for conversions.", "7. name: tempUnixTime, type: DInt, initial: 0, role: Temporary variable to store the converted Unix time.", "8. name: tempJulianDate, type: LReal, initial: 0.0, role: Temporary variable to calculate the Julian date.", "9. name: tempModifiedJulianDate, type: LReal, initial: 0.0, role: Temporary variable to calculate the modified Julian date."], "instructions": ["DATE_TO_DINT", "DTL_TO_DATE", "TOD_TO_DINT", "DTL_TO_TOD", "DINT_TO_LREAL"], "planning": "# Step1. Initialize temporary variables tempUnixTime, tempJulianDate, and tempModifiedJulianDate.\n# Step2. Force an update of the input timeDTL to check for errors and invalid dates.\n# Step3. If an error occurs during the update, set the error flag, update the status with ERR_DTL_INPUT_VALUE_INVALID, and exit the function.\n# Step4. If the date is before the conversion limit (1990-01-01), set the error flag, update the status with ERR_TIME_BEFORE_1990, and exit the function.\n# Step5. Convert the DTL value to a date and time in Unix time format.\n# Step6. Convert the Unix time to Julian date format.\n# Step7. Calculate the modified Julian date from the Julian date.\n# Step8. Assign the calculated Julian date and modified Julian date to the output variables julianDate and modifiedJulianDate, respectively.\n# Step9. Set the error flag to FALSE and the status to STATUS_EXECUTION_FINISHED_NO_ERROR indicating successful execution.", "name": "LGF_DTLToJulianDate"}
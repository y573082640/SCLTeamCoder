{"variables": ["1. name: value, type: LReal, initial: None, role: An input value to be checked if it is within the defined value range.", "2. name: lowLimit, type: LReal, initial: None, role: The lower limit to be checked against the value to ensure it is greater.", "3. name: highLimit, type: LReal, initial: None, role: The upper limit to be checked against the value to ensure it is less.", "4. name: overHighLimit, type: Bool, initial: None, role: Output indicating if the value is greater than the high limit.", "5. name: belowLowLimit, type: Bool, initial: None, role: Output indicating if the value is less than the low limit.", "6. name: error, type: Bool, initial: None, role: Indicates if an error has occurred during the execution of the function.", "7. name: status, type: Word, initial: None, role: Provides the status of the function or error identification.", "8. name: tempValueOverHighLimit, type: Bool, initial: None, role: Temporary variable to store if the value is over the high limit.", "9. name: tempValueUnderLowLimit, type: Bool, initial: None, role: Temporary variable to store if the value is under the low limit.", "10. name: STATUS_NO_ERROR, type: Word, initial: 16#0000, role: Constant representing no error status.", "11. name: ERR_RANGE_HIGH_BELOW_LOW_LIMIT, type: Word, initial: 16#8401, role: Constant representing an error where the high limit is below the low limit."], "instructions": [""], "planning": "# Step1. Check if the highLimit is less than the lowLimit. If so, set error to TRUE, status to the corresponding error code, and all outputs to default values, then return FALSE.\n# Step2. Evaluate if the input value is greater than the highLimit and store the result in the temporary variable tempValueOverHighLimit.\n# Step3. Evaluate if the input value is less than the lowLimit and store the result in the temporary variable tempValueUnderLowLimit.\n# Step4. Set the output LGF_IsValueInLimits to TRUE if neither of the temporary flags tempValueOverHighLimit or tempValueUnderLowLimit are TRUE, otherwise set it to FALSE.\n# Step5. Assign the temporary flags to the corresponding output variables overHighLimit and belowLowLimit.\n# Step6. Set error to FALSE and status to STATUS_NO_ERROR, indicating no error has occurred.\n# Step7. Disable the ENO mechanism by setting ENO to TRUE.", "name": "LGF_IsValueInLimits"}
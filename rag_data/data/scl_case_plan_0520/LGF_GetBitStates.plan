{"variables": ["1. name: value, type: DWord, initial: None, role: Input value to be checked for edges.", "2. name: statPreviousValue, type: DWord, initial: None, role: Store the previous cycle's input value for comparison.", "3. name: tempRisingResult, type: DWord, initial: None, role: Temporary storage for the result of detecting rising edges.", "4. name: tempNoRisingBits, type: DWord, initial: None, role: Temporary storage for the number of rising edges.", "5. name: tempFallingResult, type: DWord, initial: None, role: Temporary storage for the result of detecting falling edges.", "6. name: tempNoFallingBits, type: DWord, initial: None, role: Temporary storage for the number of falling edges.", "7. name: hasChanged, type: Bool, initial: None, role: Output indicating if there has been a change since the last cycle.", "8. name: hasRisingEdges, type: Bool, initial: None, role: Output indicating if rising edges are present.", "9. name: risingBits, type: DWord, initial: None, role: Output bitstream showing the rising edges.", "10. name: noOfRisingBits, type: USInt, initial: None, role: Output number of rising edges.", "11. name: hasFallingEdges, type: Bool, initial: None, role: Output indicating if falling edges are present.", "12. name: fallingBits, type: DWord, initial: None, role: Output bitstream showing the falling edges.", "13. name: noOfFallingBits, type: USInt, initial: None, role: Output number of falling edges."], "instructions": ["AND", "NOT", "SHR", "UDINT_TO_DWORD", "DWORD_TO_UDINT"], "planning": "# Step1. Compare the current input value with the previous cycle's value to detect rising and falling edges.\n# Step2. Save the current input value for comparison in the next cycle.\n# Step3. Use bitwise operations and shift instructions to count the number of rising edges and save the result to tempNoRisingBits.\n# Step4. Use bitwise operations and shift instructions to count the number of falling edges and save the result to tempNoFallingBits.\n# Step5. Determine if there are any changes, rising edges, or falling edges, and assign the results to the corresponding output variables.\n# Step6. Convert the number of rising and falling bits from DWord to USInt for the output variables.\n# Step7. Set ENO to FALSE, indicating no error handling is implemented.", "name": "LGF_GetBitStates"}
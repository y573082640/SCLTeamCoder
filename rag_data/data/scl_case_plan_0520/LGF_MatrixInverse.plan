{"variables": ["1. name: error, type: Bool, initial: None, role: Error flag indicating success or failure of the function.", "2. name: status, type: Word, initial: None, role: Status code indicating specific error or success state.", "3. name: matrix, type: Array[*, *] of LReal, initial: None, role: Input square matrix that will be inversed.", "4. name: matrixResult, type: Array[*, *] of LReal, initial: None, role: Output inverted matrix.", "5. name: tempMatrix1LowerBoundRows, type: DInt, initial: None, role: Temporary variable to store lower bound of rows of the input matrix.", "6. name: tempMatrix1LowerBoundColumns, type: DInt, initial: None, role: Temporary variable to store lower bound of columns of the input matrix.", "7. name: tempMatrix1UpperBoundRows, type: DInt, initial: None, role: Temporary variable to store upper bound of rows of the input matrix.", "8. name: tempMatrix1UpperBoundColumns, type: DInt, initial: None, role: Temporary variable to store upper bound of columns of the input matrix.", "9. name: tempResultMatrixLowerBoundRows, type: DInt, initial: None, role: Temporary variable to store lower bound of rows of the output matrix.", "10. name: tempResultMatrixLowerBoundColumns, type: DInt, initial: None, role: Temporary variable to store lower bound of columns of the output matrix.", "11. name: tempResultMatrixUpperBoundRows, type: DInt, initial: None, role: Temporary variable to store upper bound of rows of the output matrix.", "12. name: tempResultMatrixUpperBoundColumns, type: DInt, initial: None, role: Temporary variable to store upper bound of columns of the output matrix.", "13. name: tempCounterRows, type: DInt, initial: None, role: Temporary loop counter for iterating over rows.", "14. name: tempCounterColumns, type: DInt, initial: None, role: Temporary loop counter for iterating over columns.", "15. name: tempColumns, type: DInt, initial: None, role: Temporary variable to store the number of columns in the input matrix.", "16. name: tempRows, type: DInt, initial: None, role: Temporary variable to store the number of rows in the input matrix.", "17. name: tempK, type: DInt, initial: None, role: Temporary loop counter for main diagonal relegation.", "18. name: tempI, type: DInt, initial: None, role: Temporary loop counter for column operations.", "19. name: tempJ, type: DInt, initial: None, role: Temporary loop counter for row operations.", "20. name: tempMatrixElement, type: LReal, initial: None, role: Temporary variable to store a single element of the matrix for computation."], "instructions": ["LOWER_BOUND", "UPPER_BOUND", "ABS"], "planning": "# Step1. Initialize temporary variables for bounds of the input matrix and result matrix.\n# Step2. Determine the size of the input matrix by calculating the number of rows and columns.\n# Step3. Validate the input matrix to check if it is a square matrix and if the input and output matrices have the same size.\n# Step4. Initialize the result matrix by negating the input matrix.\n# Step5. Perform the matrix inversion algorithm by iterating through the matrix and calculating the pivot and non-pivot elements.\n# Step6. If an error occurs during the algorithm, set the error flag and status code accordingly.\n# Step7. If the inversion is successful, set the error flag to FALSE and the status code to STATUS_NO_ERROR.", "name": "LGF_MatrixInverse"}
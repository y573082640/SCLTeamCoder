{"variables": ["1. name: error, type: Bool, initial: False, role: An error flag indicating if an error occurred during matrix multiplication.", "2. name: status, type: Word, initial: STATUS_NO_ERROR, role: A status code providing information about any errors that have occurred.", "3. name: matrix1, type: Array[*, *] of LReal, initial: Uninitialized, role: The first matrix to multiply.", "4. name: matrix2, type: Array[*, *] of LReal, initial: Uninitialized, role: The second matrix to multiply.", "5. name: matrixResult, type: Array[*, *] of LReal, initial: Uninitialized, role: The resulting matrix after multiplication.", "6. name: tempMatrix1LowerBoundRows, type: DInt, initial: 0, role: Temporary variable to store the lower bound of rows for matrix1.", "7. name: tempMatrix1LowerBoundColumns, type: DInt, initial: 0, role: Temporary variable to store the lower bound of columns for matrix1.", "8. name: tempMatrix1UpperBoundRows, type: DInt, initial: 0, role: Temporary variable to store the upper bound of rows for matrix1.", "9. name: tempMatrix1UpperBoundColumns, type: DInt, initial: 0, role: Temporary variable to store the upper bound of columns for matrix1.", "10. name: tempMatrix2LowerBoundRows, type: DInt, initial: 0, role: Temporary variable to store the lower bound of rows for matrix2.", "11. name: tempMatrix2LowerBoundColumns, type: DInt, initial: 0, role: Temporary variable to store the lower bound of columns for matrix2.", "12. name: tempMatrix2UpperBoundRows, type: DInt, initial: 0, role: Temporary variable to store the upper bound of rows for matrix2.", "13. name: tempMatrix2UpperBoundColumns, type: DInt, initial: 0, role: Temporary variable to store the upper bound of columns for matrix2.", "14. name: tempResultMatrixLowerBoundRows, type: DInt, initial: 0, role: Temporary variable to store the lower bound of rows for the result matrix.", "15. name: tempResultMatrixLowerBoundColumns, type: DInt, initial: 0, role: Temporary variable to store the lower bound of columns for the result matrix.", "16. name: tempResultMatrixUpperBoundRows, type: DInt, initial: 0, role: Temporary variable to store the upper bound of rows for the result matrix.", "17. name: tempResultMatrixUpperBoundColumns, type: DInt, initial: 0, role: Temporary variable to store the upper bound of columns for the result matrix.", "18. name: tempJ, type: DInt, initial: 0, role: Temporary loop iteration variable for iterating over rows of matrix1.", "19. name: tempK, type: DInt, initial: 0, role: Temporary loop iteration variable for iterating over columns of matrix2.", "20. name: tempL, type: DInt, initial: 0, role: Temporary loop iteration variable for iterating over columns of matrix1/rows of matrix2.", "21. name: tempResult, type: LReal, initial: 0.0, role: Temporary variable to store intermediate results of the multiplication."], "instructions": ["LOWER_BOUND", "UPPER_BOUND"], "planning": "# Step1. Initialize the error flag to false and the status to STATUS_NO_ERROR.\n# Step2. Determine the size of the input matrices and the result matrix by calculating lower and upper bounds for rows and columns.\n# Step3. Check if the matrices dimensions are compatible for multiplication. If not, set the error flag, update the status with the corresponding error code, and exit the function.\n# Step4. Perform matrix multiplication by iterating through rows of matrix1 and columns of matrix2, calculating the dot product for each pair and storing the result in the corresponding cell of matrixResult.\n# Step5. After completing the multiplication, set the error flag to false and the status to STATUS_NO_ERROR to indicate successful completion.", "name": "LGF_MatrixMultiplication"}
{"variables": ["1. name: frequency, type: Real, initial: 0.0, role: Input parameter for setting the signal frequency.", "2. name: pulsePauseRatio, type: Real, initial: 1.0, role: Input parameter for setting the ratio between the pulse duration and the pause duration.", "3. name: clock, type: Bool, initial: None, role: Output signal that changes between FALSE and TRUE at the defined frequency.", "4. name: countdown, type: Time, initial: None, role: Output parameter indicating the remaining time of the current clock state.", "5. name: instTofTimePulse, type: TOF_TIME, initial: None, role: Timer for the pulse duration.", "6. name: instTofTimePause, type: TOF_TIME, initial: None, role: Timer for the pause duration.", "7. name: statFrequencyOld, type: Real, initial: None, role: Variable to store the old frequency value to detect changes.", "8. name: statPulsePauseRatioOld, type: Real, initial: None, role: Variable to store the old pulsePauseRatio value to detect changes.", "9. name: statTimePulse, type: Time, initial: None, role: Variable to store the calculated pulse duration time.", "10. name: statTimePause, type: Time, initial: None, role: Variable to store the calculated pause duration time.", "11. name: tempPulseRate, type: Real, initial: None, role: Temporary variable for storing the calculated pulse rate.", "12. name: tempPauseRate, type: Real, initial: None, role: Temporary variable for storing the calculated pause rate.", "13. name: tempCountdown, type: Time, initial: None, role: Temporary variable for storing the current countdown time.", "14. name: ZERO, type: Real, initial: 0.0, role: Constant for the value zero, used for comparisons.", "15. name: ZERO_TIME, type: Time, initial: T#0ms, role: Constant for zero time, used to initialize countdown.", "16. name: SECOND_IN_MS, type: Real, initial: 1000.0, role: Constant representing the number of milliseconds in one second.", "17. name: ONE, type: Real, initial: 1.0, role: Constant for the value one, used in calculations."], "instructions": ["TOF_TIME", "RESET_TIMER", "UDINT_TO_TIME", "REAL_TO_UDINT"], "planning": "# Step1. Check if the input frequency or pulsePauseRatio is less than or equal to zero. If so, disable the block by setting the clock to FALSE and the countdown to zero time.\n# Step2. If the input frequency or pulsePauseRatio has changed, reset the timers and calculate the new pulse and pause rates and durations.\n# Step3. Configure the TOF_TIME timers for pulse and pause based on the calculated times. The timers reset each other on expiration.\n# Step4. Calculate the remaining time for the current state (pulse or pause) and store it in tempCountdown.\n# Step5. Assign the status of the pulse timer to the clock output and update the countdown output with the remaining time.\n# Step6. Set ENO to TRUE as error handling is not implemented.", "name": "LGF_Frequency"}
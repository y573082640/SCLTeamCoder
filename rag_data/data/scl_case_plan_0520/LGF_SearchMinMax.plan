{"variables": ["1. name: variableArray, type: Variant, initial: None, role: Input array to search for min and max values.", "2. name: minValue, type: Variant, initial: None, role: Output variable to store the minimum value found in the array.", "3. name: minValueIndex, type: DInt, initial: None, role: Output variable to store the index of the minimum value found in the array.", "4. name: maxValue, type: Variant, initial: None, role: Output variable to store the maximum value found in the array.", "5. name: maxValueIndex, type: DInt, initial: None, role: Output variable to store the index of the maximum value found in the array.", "6. name: error, type: Bool, initial: false, role: Output flag indicating if an error occurred during the execution.", "7. name: status, type: Word, initial: STATUS_NO_ERROR, role: Output status code representing the error or success of the function.", "8. name: subfunctionStatus, type: Word, initial: SUBFUNCTION_NO_ERROR, role: Output status or return value of called blocks.", "9. name: tempArrayEndIndex, type: DInt, initial: None, role: Temporary variable to store the last index of the array.", "10. name: tempCounter, type: DInt, initial: None, role: Temporary loop counter used in FOR loop iterations.", "11. name: tempSubfunctionErr, type: Int, initial: SUBFUNCTION_NO_ERROR, role: Temporary variable to store the return value of MOVE_BLK_VARIANT function.", "12. name: tempArrayIndexMax, type: DInt, initial: None, role: Temporary variable to store the index of the maximum value found in the array.", "13. name: tempArrayIndexMin, type: DInt, initial: None, role: Temporary variable to store the index of the minimum value found in the array.", "14. name: tempActValueInt, type: Int, initial: None, role: Temporary variable to store the current integer value being compared in the array.", "15. name: tempMinInt, type: Int, initial: None, role: Temporary variable to store the minimum integer value found in the array.", "16. name: tempMaxInt, type: Int, initial: None, role: Temporary variable to store the maximum integer value found in the array.", "17. name: tempActValueUInt, type: UInt, initial: None, role: Temporary variable to store the current unsigned integer value being compared in the array.", "18. name: tempMinUInt, type: UInt, initial: None, role: Temporary variable to store the minimum unsigned integer value found in the array.", "19. name: tempMaxUInt, type: UInt, initial: None, role: Temporary variable to store the maximum unsigned integer value found in the array.", "20. name: tempActValueDInt, type: DInt, initial: None, role: Temporary variable to store the current double integer value being compared in the array.", "21. name: tempMinDInt, type: DInt, initial: None, role: Temporary variable to store the minimum double integer value found in the array.", "22. name: tempMaxDInt, type: DInt, initial: None, role: Temporary variable to store the maximum double integer value found in the array.", "23. name: tempActValueUDInt, type: UDInt, initial: None, role: Temporary variable to store the current unsigned double integer value being compared in the array.", "24. name: tempMinUDInt, type: UDInt, initial: None, role: Temporary variable to store the minimum unsigned double integer value found in the array.", "25. name: tempMaxUDInt, type: UDInt, initial: None, role: Temporary variable to store the maximum unsigned double integer value found in the array.", "26. name: tempActValueUSInt, type: USInt, initial: None, role: Temporary variable to store the current unsigned short integer value being compared in the array.", "27. name: tempMinUSInt, type: USInt, initial: None, role: Temporary variable to store the minimum unsigned short integer value found in the array.", "28. name: tempMaxUSInt, type: USInt, initial: None, role: Temporary variable to store the maximum unsigned short integer value found in the array.", "29. name: tempActValueSInt, type: SInt, initial: None, role: Temporary variable to store the current signed integer value being compared in the array.", "30. name: tempMinSInt, type: SInt, initial: None, role: Temporary variable to store the minimum signed integer value found in the array.", "31. name: tempMaxSInt, type: SInt, initial: None, role: Temporary variable to store the maximum signed integer value found in the array.", "32. name: tempActValueReal, type: Real, initial: None, role: Temporary variable to store the current real value being compared in the array.", "33. name: tempMinReal, type: Real, initial: None, role: Temporary variable to store the minimum real value found in the array.", "34. name: tempMaxReal, type: Real, initial: None, role: Temporary variable to store the maximum real value found in the array.", "35. name: tempActValueLReal, type: LReal, initial: None, role: Temporary variable to store the current long real value being compared in the array.", "36. name: tempMinLReal, type: LReal, initial: None, role: Temporary variable to store the minimum long real value found in the array.", "37. name: tempMaxLReal, type: LReal, initial: None, role: Temporary variable to store the maximum long real value found in the array."], "instructions": ["IS_ARRAY", "TypeOfElements", "TypeOf", "COUNT_OF_ELEMENTS", "UDINT_TO_DINT", "INT_TO_WORD", "MOVE_BLK_VARIANT"], "planning": "# Step1. Initialize the output variables error, status, and subfunctionStatus with default values.\n# Step2. Validate the input variableArray to check if it is an array and if its elements have the same data type as the output variables minValue and maxValue.\n# Step3. If validation fails, set the error flag, update the status code, and return from the function.\n# Step4. If validation is successful, determine the end index of the array and store it in tempArrayEndIndex.\n# Step5. Use a CASE statement to branch the logic based on the data type of the array elements.\n# Step6. For each data type, initialize the temporary variables tempMin* and tempMax* with the first value of the array using MOVE_BLK_VARIANT.\n# Step7. Check the return value of MOVE_BLK_VARIANT. If an error occurred, set the error flag, update the status code, and return from the function.\n# Step8. Iterate through the array elements using a FOR loop, comparing each element with the current minimum and maximum values.\n# Step9. If a new minimum or maximum value is found, update the corresponding temporary variables and store the index in tempArrayIndexMin or tempArrayIndexMax.\n# Step10. After the loop, check the return value of MOVE_BLK_VARIANT again. If an error occurred, set the error flag, update the status code, and return from the function.\n# Step11. Copy the found minimum and maximum values to the output variables minValue and maxValue using MOVE_BLK_VARIANT.\n# Step12. Check the return value of MOVE_BLK_VARIANT again. If an error occurred, set the error flag, update the status code, and return from the function.\n# Step13. Write the found indexes to the output variables minValueIndex and maxValueIndex.\n# Step14. Set the ENO variable to TRUE to indicate no error occurred during the execution.", "name": "LGF_SearchMinMax"}
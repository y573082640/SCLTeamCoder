{"variables": ["1. enable: value, type: Bool, initial: None, role: Input to activate or deactivate the function block.", "2. positionGps: value, type: LGF_typeGPS_DD, initial: None, role: GPS position data structure for Latitude and Longitude in decimal degrees.", "3. offsetSunrise: value, type: Time, initial: None, role: Offset time to be added to the calculated sunrise time.", "4. offsetSunset: value, type: Time, initial: None, role: Offset time to be added to the calculated sunset time.", "5. valid: value, type: Bool, initial: 'False', role: Output indicating the availability of valid results.", "6. busy: value, type: Bool, initial: 'False', role: Output indicating the function block is currently processing.", "7. error: value, type: Bool, initial: 'False', role: Output indicating an error occurred during execution.", "8. status: value, type: Word, initial: #STATUS_NO_CALL, role: Output providing status information about the function block.", "9. subFunctionStatus: value, type: Word, initial: None, role: Output providing detailed status information from called functions.", "10. actualLocalTime: value, type: DTL, initial: None, role: Output of the current local time.", "11. sunriseTime: value, type: DTL, initial: None, role: Output of the calculated sunrise time.", "12. sunsetTime: value, type: DTL, initial: None, role: Output of the calculated sunset time.", "13. isDaytime: value, type: Bool, initial: 'False', role: Output indicating whether it is currently daytime.", "14. statEnableOld: value, type: Bool, initial: None, role: Internal variable to store the previous state of the 'enable' input.", "15. statBusy: value, type: Bool, initial: None, role: Internal variable to track the busy state of the function block.", "16. statStatus: value, type: Word, initial: #STATUS_NO_CALL, role: Internal variable to track the status of the function block.", "17. statSubfunctionStatus: value, type: Word, initial: None, role: Internal variable to track the status of called subfunctions.", "18. statLongitudeHour: value, type: Real, initial: None, role: Internal variable to store the converted longitude value in hours.", "19. statLatitudeRadiant: value, type: Real, initial: None, role: Internal variable to store the converted latitude value in radians.", "20. tempRetval: value, type: Word, initial: None, role: Temporary variable to store return values from function calls.", "21. tempSysTime: value, type: DTL, initial: None, role: Temporary variable to store the system time.", "22. tempOfficLocTime: value, type: DTL, initial: None, role: Temporary variable to store the official local time.", "23. tempDate1Jan: value, type: DTL, initial: None, role: Temporary variable to store the date of January 1st.", "24. tempSunrise: value, type: DTL, initial: None, role: Temporary variable to store the calculated sunrise time.", "25. tempSunset: value, type: DTL, initial: None, role: Temporary variable to store the calculated sunset time.", "26. tempTimeZone: value, type: Real, initial: None, role: Temporary variable to store the time zone difference.", "27. tempDayOfYear: value, type: Real, initial: None, role: Temporary variable to store the day of the year.", "28. tempAproximateTime: value, type: Real, initial: None, role: Temporary variable to store an approximate time value.", "29. tempSunMeanAnomaly: value, type: Real, initial: None, role: Temporary variable to store the sun's mean anomaly.", "30. tempSunLongitude: value, type: Real, initial: None, role: Temporary variable to store the sun's true longitude.", "31. tempSunMeanRad: value, type: Real, initial: None, role: Temporary variable to store the sun's mean anomaly in radians.", "32. tempSunLongitudeRadiant: value, type: Real, initial: None, role: Temporary variable to store the sun's true longitude in radians.", "33. tempSunAscension: value, type: Real, initial: None, role: Temporary variable to store the sun's right ascension.", "34. tempSunAscensRad: value, type: Real, initial: None, role: Temporary variable to store the sun's right ascension in radians.", "35. tempSinDeclination: value, type: Real, initial: None, role: Temporary variable to store the sine of the sun's declination.", "36. tempCosDeclination: value, type: Real, initial: None, role: Temporary variable to store the cosine of the sun's declination.", "37. tempCosLocHourAngle: value, type: Real, initial: None, role: Temporary variable to store the cosine of the sun's local hour angle.", "38. tempLocalHourAngle: value, type: Real, initial: None, role: Temporary variable to store the sun's local hour angle.", "39. tempLocalMeanTime: value, type: Real, initial: None, role: Temporary variable to store the local mean time.", "40. tempUTC: value, type: Real, initial: None, role: Temporary variable to store the universal coordinated time.", "41. tempLocalTime: value, type: Real, initial: None, role: Temporary variable to store the local time."], "instructions": ["DTL_TO_DATE", "DATE_TO_UDINT", "INT_TO_WORD", "ABS", "TIME_TO_DINT", "DINT_TO_REAL", "T_DIFF", "UDINT_TO_REAL", "TIME_TO_DINT", "TRUNC", "REAL_TO_UDINT", "UDINT_TO_TIME", "ADD", "SUB", "SIN", "ASIN", "COS", "ACOS", "ATAN", "FLOOR"], "planning": "# Step1. Check for the rising edge of the 'enable' input and whether the function block is not already in operation. If true, initialize the function block and set the 'busy' state to true.\n# Step2. Check for the falling edge of the 'enable' input and whether the function block is in operation. If true, disable the function block and set the 'busy' state to false.\n# Step3. If the function block is enabled and in operation, proceed with the astro clock calculation.\n# Step4. Read the system time and the official local time, calculate the time zone difference, and check for errors in these readings.\n# Step5. Calculate the day of the year based on the official local time.\n# Step6. Check the input GPS coordinates for validity (latitude within -90 to 90 degrees and longitude within -180 to 180 degrees).\n# Step7. Convert the GPS coordinates to radians and hours respectively for further calculations.\n# Step8. Calculate the approximate time for sunrise and sunset.\n# Step9. Calculate the sun's mean anomaly, true longitude, and right ascension. Adjust these values to be within 0 to 360 degrees or 0 to 2*PI radians.\n# Step10. Calculate the sun's declination, sine, and cosine of the declination.\n# Step11. Calculate the sun's local hour angle and adjust its value to be within -1 to 1.\n# Step12. Calculate the local hour angle for sunrise and sunset.\n# Step13. Calculate the local mean time for sunrise and sunset, adjust to UTC, and convert to local time.\n# Step14. Convert the local time to DTL format, add the offset times, and store the results in temporary variables.\n# Step15. Write the results to the outputs: actual local time, sunrise time, sunset time, and whether it is daytime.\n# Step16. Write the status information to the outputs: valid, busy, error, status, and subFunctionStatus.\n# Step17. Set the 'ENO' variable to true as no error handling is implemented.", "name": "LGF_AstroClock"}
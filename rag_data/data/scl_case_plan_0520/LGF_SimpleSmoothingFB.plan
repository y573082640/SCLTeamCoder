{"variables": ["1. name: enable, type: Bool, initial: None, role: Activates the function block.", "2. name: insert, type: Bool, initial: None, role: Triggers the acceptance of the input value for smoothing.", "3. name: value, type: LReal, initial: None, role: The value to be smoothed.", "4. name: smoothedValue, type: LReal, initial: None, role: Outputs the smoothed value.", "5. name: error, type: Bool, initial: None, role: Indicates if an error occurred during execution.", "6. name: status, type: Word, initial: #STATUS_NO_CALL, role: Reflects the status of the function block and error identification.", "7. name: statValues, type: Array[0..#MINIMUM_NUMBER_OF_VALUES] of LReal, initial: ExternalAccessible := 'False', role: Stores the last three measured values for smoothing calculation.", "8. name: statCount, type: Int, initial: 0, role: Counts how many values have been read in for smoothing.", "9. name: statSmoothedValue, type: LReal, initial: ExternalAccessible := 'False', role: Temporarily holds the calculated smoothed value.", "10. name: statStatus, type: Word, initial: ExternalAccessible := 'False', role: Temporarily holds the status of the function block.", "11. name: statEnableOld, type: Bool, initial: ExternalAccessible := 'False', role: Stores the previous state of the enable input for edge detection.", "12. name: statInsertOld, type: Bool, initial: ExternalAccessible := 'False', role: Stores the previous state of the insert input for edge detection."], "instructions": [""], "planning": "# Step1. Check if the function block is triggered by a rising edge on the enable input.\n# Step2. If enabled, reset the static values and set the status for the first call.\n# Step3. If the function block is already enabled, check for a positive edge on the insert input.\n# Step4. On a positive edge of insert, shift the values in the statValues array and insert the new value.\n# Step5. Check if the minimum number of values required for calculation is reached; if not, update the status.\n# Step6. If the minimum number of values is reached, calculate the smoothed value.\n# Step7. Store the previous states of enable and insert for edge detection.\n# Step8. Write the calculated smoothed value, the error status, and the general status to the outputs.\n# Step9. Set ENO to TRUE as the error handling is done through error and status outputs.", "name": "LGF_SimpleSmoothingFB"}
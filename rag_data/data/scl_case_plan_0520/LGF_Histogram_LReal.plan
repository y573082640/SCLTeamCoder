{"variables": ["1. name: execute, type: Bool, initial: None, role: Activation for the calculation with each positive edge.", "2. name: numberOfClasses, type: UInt, initial: None, role: Specifies the number of desired classes.", "3. name: error, type: Bool, initial: False, role: Indicates if an error occurred during the execution of the FB.", "4. name: status, type: Word, initial: #STATUS_NO_CALL, role: Provides the status of the FB and error identification.", "5. name: subfunctionStatus, type: Word, initial: 16#0, role: Indicates the status or return value of called FB's, FC's and system blocks.", "6. name: histValues, type: Array[0..1, 0..#CLASSES_COUNTER_UP_LIMIT] of LReal, initial: None, role: Displays the relative frequency and class centers.", "7. name: axis, type: Array[0..3] of LReal, initial: None, role: Specifies the axis values.", "8. name: classWidth, type: LReal, initial: None, role: Returns the calculated class width.", "9. name: values, type: Array[*] of LReal, initial: None, role: The array containing the data series for calculation.", "10. name: statArray, type: Array[0..#MAX_ARRAY_ELEMENTS] of LReal, initial: None, role: Temporary storage for sorted values.", "11. name: statStatus, type: Word, initial: None, role: Internal status storage.", "12. name: statSubfuncStatus, type: Word, initial: None, role: Internal subfunction status storage.", "13. name: statExecuteOld, type: Bool, initial: False, role: Stores the previous state of the execute input.", "14. name: instShellSort, type: \"LGF_ShellSort_LReal\", initial: None, role: Instance of the ShellSort FB used for sorting the input values.", "15. name: statMin, type: LReal, initial: None, role: Internal storage for the minimum value found in the input array.", "16. name: statMax, type: LReal, initial: None, role: Internal storage for the maximum value found in the input array.", "17. name: statCounter, type: DInt, initial: None, role: Counter variable used in loops.", "18. name: statWidth, type: LReal, initial: None, role: Internal storage for the calculated width of a class.", "19. name: statFrequencyValues, type: Int, initial: #ZERO_INT, role: Temporarily holds the frequency values for a class.", "20. name: statIndex, type: DInt, initial: #ZERO_INT, role: Index for iterating through the sorted array.", "21. name: statIndexOld, type: DInt, initial: 0, role: Stores the previous index value during iteration.", "22. name: statBound, type: LReal, initial: None, role: Internal storage for the class boundary during calculation.", "23. name: statMaxFrequency, type: Int, initial: #ZERO_INT, role: Stores the maximum frequency value found.", "24. name: statHistFrequencyAbs, type: Array[0..#CLASSES_COUNTER_UP_LIMIT] of Int, initial: #ZERO_INT, role: Stores the absolute frequency values for each class.", "25. name: statHistFrequencyRel, type: Array[0..#CLASSES_COUNTER_UP_LIMIT] of LReal, initial: #ZERO_LREAL, role: Stores the relative frequency values for each class.", "26. name: statHistMiddleOfClass, type: Array[0..#CLASSES_COUNTER_UP_LIMIT] of LReal, initial: #ZERO_LREAL, role: Stores the middle value of each class.", "27. name: tempNumberOfElements, type: DInt, initial: None, role: Temporarily holds the number of elements in the input array.", "28. name: tempLowerBound, type: DInt, initial: None, role: Temporarily holds the lower bound index of the input array.", "29. name: tempUpperBound, type: DInt, initial: None, role: Temporarily holds the upper bound index of the input array.", "30. name: tempValueLReal, type: LReal, initial: None, role: Temporarily holds a value from the input array during iteration.", "31. name: tempMinLReal, type: LReal, initial: None, role: Temporary storage for minimum value during calculation.", "32. name: tempMaxLReal, type: LReal, initial: None, role: Temporary storage for maximum value during calculation.", "33. name: tempLoopIndex, type: DInt, initial: None, role: Loop index variable for iterating through the array.", "34. name: tempArrayOffset, type: DInt, initial: None, role: Offset for adjusting array indices."], "instructions": ["# No SCL instructions identified in the case code."], "planning": "# Step1. Check if the execute input has a positive edge to initiate the histogram calculation.\n# Step2. Get the array boundaries and initialize necessary variables and arrays.\n# Step3. Validate the number of classes specified by the numberOfClasses input.\n# Step4. Calculate the number of elements, sort the input array, and identify the minimum and maximum values.\n# Step5. Calculate the class width and initialize the class boundary.\n# Step6. Iterate through the sorted array to count the frequency values for each class and calculate the middle of each class.\n# Step7. Store the results in the histValues output array and update the status.\n# Step8. Assign axis values and class width to their respective outputs.\n# Step9. Update the error, status, and subfunctionStatus outputs.\n# Step10. Force the ENO to TRUE, as error handling is done through the error and status outputs.", "name": "LGF_Histogram_LReal"}
{"variables": ["1. name: controlButton, type: Bool, initial: N/A, role: An input boolean value representing the state of the control button.", "2. name: greenLight, type: Bool, initial: N/A, role: An output boolean value to control the green light.", "3. name: redLight, type: Bool, initial: N/A, role: An output boolean value to control the red light.", "4. name: yellowLight, type: Bool, initial: N/A, role: An output boolean value to control the yellow light.", "5. name: lightState, type: Int, initial: 0, role: A state variable that tracks the state of the light sequence.", "6. name: lastControlButtonState, type: Bool, initial: FALSE, role: A memory variable to store the previous state of the control button to detect rising edge."], "instructions": [""], "planning": "# Step1. Check for a rising edge of the controlButton signal.\n# Step2. If a rising edge is detected, increment the lightState variable.\n# Step3. If lightState exceeds 5, reset it to 1 to cycle the states.\n# Step4. Update the lastControlButtonState with the current state of controlButton for the next cycle edge detection.\n# Step5. Use a CASE statement to set the outputs greenLight, redLight, and yellowLight according to the current lightState.", "name": "FB_ColorLightControl"}
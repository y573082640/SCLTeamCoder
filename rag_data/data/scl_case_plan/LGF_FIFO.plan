{"variables": ["1. name: enqueue, type: Bool, initial: false, role: A flag to indicate whether to enqueue an item to the buffer.", "2. name: dequeue, type: Bool, initial: false, role: A flag to indicate whether to dequeue an item from the buffer.", "3. name: reset, type: Bool, role: A flag to indicate whether to reset the buffer.", "4. name: clear, type: Bool, role: A flag to indicate whether to clear the buffer and initialize it with the initial value.", "5. name: initialItem, type: Variant, role: The initial value with which the ARRAY of the buffer is initialized.", "6. name: error, type: Bool, initial: false, role: A flag to indicate whether an error occurred during the execution of the FB.", "7. name: status, type: Word, role: The status of the FB, used for error identification.", "8. name: subFunctionStatus, type: Word, role: The status or return value of called FB's, FC's and system blocks.", "9. name: elementCount, type: DInt, initial: 0, role: The number of elements in the buffer.", "10. name: isEmpty, type: Bool, initial: false, role: A flag to indicate whether the buffer is empty.", "11. name: item, type: Variant, role: The entry that is either returned from the ring buffer or written into the buffer.", "12. name: buffer, type: Variant, role: The ARRAY that is used as the ring buffer.", "13. name: statEdgesMem, type: Struct, role: Stores the edge detection values for enqueue, dequeue, and clear flags.", "14. name: statFirstItemIndex, type: Int, initial: -1, role: The index of the first item in the buffer.", "15. name: statNextEmptyItemIndex, type: Int, initial: 0, role: The index of the next empty item in the buffer.", "16. name: statElementCount, type: DInt, role: The number of elements in the buffer.", "17. name: tempEdges, type: Struct, role: Temporary storage for edge detection values of enqueue, dequeue, and clear flags.", "18. name: tempInternalError, type: Int, role: Temporary storage for internal error code.", "19. name: tempNewFirstItemIndex, type: Int, role: Temporary storage for the new index of the first item in the buffer.", "20. name: tempNewNextEmptyItemIndex, type: Int, role: Temporary storage for the new index of the next empty item in the buffer.", "21. name: tempBufferSize, type: UDInt, role: Temporary storage for the size of the buffer.", "22. name: tempCounter, type: Int, role: Temporary storage for a counter used in loops.", "23. name: BUFFER_IS_EMPTY, type: Int, initial: -1, role: A constant representing an empty buffer.", "24. name: NO_INTERNAL_ERROR, type: Int, initial: 0, role: A constant representing no internal error.", "25. name: BUFFER_INITIALIZED, type: Int, initial: -1, role: A constant representing the initialized state of the buffer.", "26. name: EMPTY_INITIALIZED, type: Int, initial: 0, role: A constant representing an empty state.", "27. name: INDEX_BEGINNING, type: Int, initial: 0, role: A constant representing the beginning index.", "28. name: COUNT_ELEMENTS, type: UDInt, initial: 1, role: A constant representing the count of elements.", "29. name: INCREMENT, type: Int, initial: 1, role: A constant representing the increment value.", "30. name: BUFFER_SIZE_CORRECTION, type: UDInt, initial: 1, role: A constant representing the buffer size correction value.", "31. name: COUNTER_LOWER_LIMIT, type: Int, initial: 0, role: A constant representing the lower limit of the counter.", "32. name: ZERO_ELEMENTS, type: DInt, initial: 0, role: A constant representing zero elements.", "33. name: STATUS_NO_ERROR, type: Word, initial: 16#0000, role: A constant representing no error.", "34. name: STATUS_NO_CURRENT_JOBS, type: Word, initial: 16#7000, role: A constant representing no current jobs.", "35. name: ERR_BUFFER_EMPTY, type: Word, initial: 16#8001, role: A constant representing an empty buffer error.", "36. name: ERR_BUFFER_FULL, type: Word, initial: 16#8002, role: A constant representing a buffer full error.", "37. name: ERR_NO_ARRAY, type: Word, initial: 16#8200, role: A constant representing a missing array error.", "38. name: ERR_WRONG_TYPE_ITEM, type: Word, initial: 16#8201, role: A constant representing a wrong type of item error.", "39. name: ERR_WRONG_TYPE_INITIAL_ITEM, type: Word, initial: 16#8202, role: A constant representing a wrong type of initial item error.", "40. name: ERR_INDEX_IN_ARRAY_LIMITS_1, type: Word, initial: 16#8601, role: A constant representing an index out of array limits error 1.", "41. name: ERR_INDEX_IN_ARRAY_LIMITS_2, type: Word, initial: 16#8602, role: A constant representing an index out of array limits error 2.", "42. name: ERR_CLEAR_BUFFER, type: Word, initial: 16#8610, role: A constant representing a clear buffer error.", "43. name: ERR_RETURN_FIRST_ENTRY, type: Word, initial: 16#8611, role: A constant representing a return first entry error.", "44. name: ERR_REPLACE_ITEM_BY_INIT_VALUE, type: Word, initial: 16#8612, role: A constant representing a replace item by initial value error.", "45. name: ERR_WRITE_ENTRY, type: Word, initial: 16#8613, role: A constant representing a write entry error."], "instructions": ["IS_ARRAY", "CountOfElements", "TypeOf", "TypeOfElements", "MOVE_BLK_VARIANT", "UDINT_TO_INT", "INT_TO_WORD", "MOD"], "planning": "Step 1. Collect edge detection values for enqueue, dequeue, and clear flags.\nStep 2. Check if the buffer is an ARRAY. If not, set error flags and terminate execution.\nStep 3. Check if the data type of the item matches the data type of the buffer elements. If not, set error flags and terminate execution.\nStep 4. Check if the data type of the initial item matches the data type of the item. If not, set error flags and terminate execution.\nStep 5. Check if the indices are within the array limits. If not, set error flags and terminate execution.\nStep 6. If reset flag is true, reset the buffer counters and set isEmpty flag to true.\nStep 7. If clear flag has a rising edge, initialize the buffer with initial values and reset counters.\nStep 8. If dequeue flag has a rising edge, check if the buffer is empty. If so, set error flags and terminate execution.\nStep 9. If dequeue flag has a rising edge, return the first entry of the buffer.\nStep 10. If dequeue flag has a rising edge, replace the first entry with the initial item.\nStep 11. If dequeue flag has a rising edge, calculate the new index of the first entry and update counters.\nStep 12. If enqueue flag has a rising edge, check if the buffer is full. If so, set error flags and terminate execution.\nStep 13. If enqueue flag has a rising edge, write the item to the buffer.\nStep 14. If enqueue flag has a rising edge, calculate the new index of the next empty item and update counters.\nStep 15. If enqueue flag has a rising edge, check if the first item index is initialized. If so, set it to the beginning index.\nStep 16. If enqueue flag has a rising edge, update the element count.\nStep 17. Update the element count and isEmpty flag based on the current element count.\nStep 18. Set error flags to false and status flags to no error.\nStep 19. Set ENO to TRUE.", "name": "LGF_FIFO"}
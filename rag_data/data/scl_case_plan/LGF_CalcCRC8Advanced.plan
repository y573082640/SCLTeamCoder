{"variables": ["1. name: initValue, type: Byte, initial: 16#00, role: The starting value for the CRC calculation.", "2. name: mask, type: Byte, initial: 16#00, role: The generator polynomial (mask) used in the CRC calculation.", "3. name: finalXorValue, type: Byte, initial: 16#00, role: The value XORed with the final CRC result.", "4. name: reflectInput, type: Bool, initial: FALSE, role: Indicates whether the input byte should be mirrored before processing.", "5. name: reflectResult, type: Bool, initial: FALSE, role: Indicates whether the final CRC result should be mirrored.", "6. name: noOfElements, type: UInt, initial: 0, role: The number of elements from the input array to be used in the CRC calculation.", "7. name: error, type: Bool, role: An error flag indicating if an error occurred during the CRC calculation.", "8. name: status, type: Word, role: A status code providing additional information about the error if one occurred.", "9. name: array, type: Array[*] of Byte, role: The data stream for which the CRC value will be calculated.", "10. name: tempInput, type: Byte, role: A temporary variable used to hold the current input byte for processing.", "11. name: tempCRC, type: Byte, role: A temporary variable used to hold the intermediate CRC value during calculation.", "12. name: tempInvCRC, type: Byte, role: A temporary variable used to hold the mirrored CRC value if needed.", "13. name: tempLowerLimit, type: DInt, role: The lower limit index for the loop processing the array.", "14. name: tempUpperLimit, type: DInt, role: The upper limit index for the loop processing the array.", "15. name: tempIndexArray, type: DInt, role: The loop index for iterating through the array.", "16. name: tempIndexCRC, type: DInt, role: The loop index for iterating through the bits of the CRC value."], "instructions": ["LOWER_BOUND", "UPPER_BOUND", "SHL", "XOR"], "planning": "Step1. Initialize the CRC value tempCRC with the initValue.\nStep2. Calculate the lower and upper bounds of the array to be processed.\nStep3. Check if the noOfElements parameter is greater than zero and within the array bounds. If not, set the error flag and status code accordingly, then exit the function.\nStep4. Iterate through the array elements from the lower to the upper limit. For each element, check if the reflectInput flag is set and mirror the byte if necessary.\nStep5. XOR the current element with the tempCRC value.\nStep6. Iterate through the bits of the CRC value, shifting left and performing XOR with the mask if the most significant bit is set.\nStep7. After processing all elements, check if the reflectResult flag is set and mirror the CRC value if necessary.\nStep8. XOR the final CRC value with the finalXorValue.\nStep9. Set the status code to indicate no error and clear the error flag.", "name": "LGF_CalcCRC8Advanced"}
{"variables": ["1. name: frequency, type: Real, initial: 0.0, role: The input frequency value which determines how often the clock signal changes state.", "2. name: pulsePauseRatio, type: Real, initial: 1.0, role: The input pulse-pause ratio value which determines the proportion of time the signal is TRUE versus FALSE.", "3. name: clock, type: Bool, initial: None, role: The output signal that changes between TRUE and FALSE based on the defined frequency and pulse-pause ratio.", "4. name: countdown, type: Time, initial: None, role: The remaining time of the current clock state.", "5. name: instTofTimePulse, type: TOF_TIME, initial: None, role: An instance of the TOF_TIME instruction used for the pulse timing.", "6. name: instTofTimePause, type: TOF_TIME, initial: None, role: An instance of the TOF_TIME instruction used for the pause timing.", "7. name: statFrequencyOld, type: Real, initial: None, role: Stores the last frequency value to detect changes in input.", "8. name: statPulsePauseRatioOld, type: Real, initial: None, role: Stores the last pulse-pause ratio value to detect changes in input.", "9. name: statTimePulse, type: Time, initial: None, role: Stores the calculated pulse time.", "10. name: statTimePause, type: Time, initial: None, role: Stores the calculated pause time.", "11. name: tempPulseRate, type: Real, initial: None, role: Calculates the pulse rate based on the pulse-pause ratio.", "12. name: tempPauseRate, type: Real, initial: None, role: Calculates the pause rate based on the pulse-pulse ratio.", "13. name: tempCountdown, type: Time, initial: None, role: Temporarily stores the remaining time of the current clock state.", "14. name: ZERO, type: Real, initial: 0.0, role: A constant representing the number zero.", "15. name: ZERO_TIME, type: Time, initial: T#0ms, role: A constant representing zero time.", "16. name: SECOND_IN_MS, type: Real, initial: 1000.0, role: A constant representing the number of milliseconds in one second.", "17. name: ONE, type: Real, initial: 1.0, role: A constant representing the number one."], "instructions": ["UDINT_TO_TIME", "REAL_TO_UDINT", "RESET_TIMER"], "planning": "Step1. Check if the input frequency or pulse-pause ratio is less than or equal to zero. If so, set the clock output to FALSE and the countdown to zero time.\nStep2. If the input frequency or pulse-pause ratio has changed since the last execution, recalculate the pulse and pause rates, as well as the corresponding times in milliseconds, and update the stored values.\nStep3. Use the TOF_TIME instruction to manage a time delay for the pulse and pause, resetting each other upon expiration.\nStep4. Calculate the remaining time of the current clock state by subtracting the elapsed time from the respective timer.\nStep5. Assign the state of the pulse timer to the clock output and the remaining time to the countdown output.\nStep6. Since error handling is not implemented, set the ENO (Enable Output) to TRUE.", "name": "LGF_Frequency"}
{"variables": ["1. name: value, type: LReal, initial: None, role: The value to be checked against the setpoint and range.", "2. name: setpoint, type: LReal, initial: None, role: The set point value to be used as a center for the range check.", "3. name: range, type: LReal, initial: None, role: The range value defining the acceptable deviation from the setpoint.", "4. name: overHighLimit, type: Bool, initial: None, role: Indicates if the value exceeds the upper limit of the range.", "5. name: belowLowLimit, type: Bool, initial: None, role: Indicates if the value is below the lower limit of the range.", "6. name: error, type: Bool, initial: None, role: Indicates if an error has occurred during the execution of the function.", "7. name: status, type: Word, initial: None, role: Provides status information or error codes for the function execution.", "8. name: tempHighLimit, type: LReal, initial: None, role: Temporary variable to hold the calculated high limit of the range.", "9. name: tempLowLimit, type: LReal, initial: None, role: Temporary variable to hold the calculated low limit of the range.", "10. name: tempValueOverHighLimit, type: Bool, initial: None, role: Temporary variable to determine if the value is above the high limit.", "11. name: tempValueUnderLowLimit, type: Bool, initial: None, role: Temporary variable to determine if the value is below the low limit.", "12. name: HALF, type: LReal, initial: 0.5, role: Constant used to calculate the half range.", "13. name: STATUS_NO_ERROR, type: Word, initial: 16#0000, role: Constant representing no error status.", "14. name: ERR_RANGE_LIMIT_VALUES, type: Word, initial: 16#8401, role: Constant representing an error with range limit values."], "instructions": ["ABS", "RETURN"], "planning": "Step1. Declare and initialize the input, output, temporary, and constant variables.\nStep2. Calculate the high and low limits of the range using the setpoint and range values.\nStep3. Check if the execution enable (ENO) is false, indicating an error condition; if so, set the error flag, status, output variables, and return.\nStep4. Determine if the input value is above the high limit and set a temporary flag accordingly.\nStep5. Determine if the input value is below the low limit and set a temporary flag accordingly.\nStep6. Determine if the input value is within the range by checking the temporary flags and set the function return value and output variables accordingly.\nStep7. Set the error flag to false, the status to no error, and ENO to true to indicate successful execution.", "name": "LGF_IsValueInRange"}
{"variables": ["1. name: x, type: LReal, initial: None, role: Input value `x` to be scaled.", "2. name: x1, type: LReal, initial: None, role: `x` coordinate of the first point of the linear function.", "3. name: y1, type: LReal, initial: None, role: `y` coordinate of the first point of the linear function.", "4. name: x2, type: LReal, initial: None, role: `x` coordinate of the second point of the linear function.", "5. name: y2, type: LReal, initial: None, role: `y` coordinate of the second point of the linear function.", "6. name: yMin, type: LReal, initial: None, role: Lower limit value of the output.", "7. name: yMax, type: LReal, initial: None, role: Upper limit value of the output.", "8. name: error, type: Bool, initial: None, role: Error flag indicating if an error occurred during the scaling process.", "9. name: status, type: Word, initial: None, role: Status code providing additional information about the result of the scaling process.", "10. name: tempY, type: LReal, initial: 0.0, role: Temporary variable to hold the calculated scaled output value before applying limits.", "11. name: tempStatus, type: Word, initial: 16#0000, role: Temporary variable to hold the status before assigning it to the output.", "12. name: STATUS_FINISHED_NO_ERROR, type: Word, initial: 16#0000, role: Constant representing no error occurred.", "13. name: ERR_LOW_LIM_OVER_UP_LIM, type: Word, initial: 16#8200, role: Constant representing an error where the lower limit is above the upper limit.", "14. name: WARN_Y_LIMITED_TO_YMIN, type: Word, initial: 16#6001, role: Constant representing a warning where the output is limited to the lower limit.", "15. name: WARN_Y_LIMITED_TO_YMAX, type: Word, initial: 16#6002, role: Constant representing a warning where the output is limited to the upper limit.", "16. name: PRECISION, type: LReal, initial: 1.0E-06, role: Constant representing the precision used to compare floating-point numbers."], "instructions": ["ABS", "IF", "ELSE", "ELSIF"], "planning": "Step 1. Initialize the temporary variables #tempY and #tempStatus to 0.0 and 16#0000 respectively.\nStep 2. Check if the lower limit is greater than the upper limit and set #tempStatus to #ERR_LOW_LIM_OVER_UP_LIM if true.\nStep 3. If the difference between #x1 and #x2 is less than or equal to the precision, set #tempY to #y1 to avoid division by zero.\nStep 4. Otherwise, calculate the scaled output value using the linear equation #tempY := (#y2 - #y1) / (#x2 - #x1) * (#x - #x1) + #y1.\nStep 5. Check if the calculated #tempY is less than the lower limit or greater than the upper limit and adjust it accordingly, setting the warning status if necessary.\nStep 6. Assign the final #tempStatus to #status and set #error based on the most significant bit of #tempStatus.\nStep 7. Set the function's return value to #tempY.\nStep 8. Since the ENO mechanism is not used, set ENO to TRUE.", "name": "LGF_ScaleLinear"}
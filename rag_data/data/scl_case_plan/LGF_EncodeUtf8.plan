{"variables": ["1. name: sourceString, type: WString, initial: None, role: The input WString that contains characters to be encoded into UTF-8.", "2. name: startPos, type: DInt, initial: None, role: The starting position in the encoded byte stream where new encoded characters should be inserted.", "3. name: bytesUsed, type: UInt, initial: None, role: The output parameter that indicates the number of bytes that have been used in the encoding process.", "4. name: encodedByteStream, type: Array[*] of Byte, initial: None, role: The in/out array that holds the UTF-8 encoded byte sequence.", "5. name: tempStatus, type: Word, initial: STATUS_NO_ERROR, role: A temporary variable to store the status of the encoding process.", "6. name: tempConvertedUtf8, type: DWord, initial: DWORD_NULL, role: A temporary variable used to store the UTF-8 encoded value of a character.", "7. name: tempBytesUsed, type: UInt, initial: USINT_NULL, role: A temporary variable used to track the number of bytes used during the encoding process.", "8. name: tempCharacter, type: WChar, initial: None, role: A temporary variable that holds the current character being processed from the sourceString.", "9. name: tempIndex, type: DInt, initial: 1, role: The loop index variable used for iterating over the characters of the sourceString.", "10. name: tempArrayIndex, type: DInt, initial: Calculated based on the lower bound of encodedByteStream and startPos, role: The index in the encodedByteStream array where the next byte will be written.", "11. name: tempUpperBound, type: DInt, initial: Calculated based on the upper bound of encodedByteStream, role: The upper bound index of the encodedByteStream array.", "12. name: USINT_NULL, type: USInt, initial: 0, role: A constant representing a null USInt value.", "13. name: DWORD_NULL, type: DWord, initial: 16#0000_0000, role: A constant representing a null DWord value.", "14. name: EMPTY_WCHAR, type: WChar, initial: ' ', role: A constant representing an empty character.", "15. name: BELOW_7F, type: Word, initial: 16#007F, role: A constant representing the maximum value for a 1-byte UTF-8 character.", "16. name: BELOW_7FF, type: Word, initial: 16#07FF, role: A constant representing the maximum value for a 2-byte UTF-8 character.", "17. name: BELOW_MAX_FFFF, type: Word, initial: 16#FFFF, role: A constant representing the maximum value for a 3-byte UTF-8 character.", "18. name: BYTE_3F, type: Byte, initial: 16#3F, role: A constant representing the bitmask for the lower 6 bits of a byte.", "19. name: BYTE_80, type: Byte, initial: 16#80, role: A constant representing the byte used to set the continuation bit in UTF-8 encoding.", "20. name: BYTE_C0, type: Byte, initial: 16#C0, role: A constant representing the byte used to indicate a 2-byte character in UTF-8 encoding.", "21. name: BYTE_E0, type: Byte, initial: 16#E0, role: A constant representing the byte used to indicate a 3-byte character in UTF-8 encoding.", "22. name: USINT_ONE, type: USInt, initial: 1, role: A constant representing the number one.", "23. name: USINT_TWO, type: USInt, initial: 2, role: A constant representing the number two.", "24. name: USINT_THREE, type: USInt, initial: 3, role: A constant representing the number three.", "25. name: STATUS_NO_ERROR, type: Word, initial: 16#0000, role: A constant representing the status code for no error.", "26. name: ERR_START_POS_OUTSIDE, type: Word, initial: 16#8201, role: A constant representing the status code for a start position outside the array bounds.", "27. name: ERR_COUNT_EXCEEDS_BOUNDS, type: Word, initial: 16#8202, role: A constant representing the status code for the count exceeding the array bounds."], "instructions": ["WCHAR_TO_WORD", "WCHAR_TO_BYTE", "WORD_TO_BYTE", "SHR"], "planning": "Step1. Initialize the temp variables tempStatus to STATUS_NO_ERROR, tempConvertedUtf8 to DWORD_NULL, tempBytesUsed to USINT_NULL, and calculate tempArrayIndex based on the lower bound of encodedByteStream and startPos, also calculate tempUpperBound based on the upper bound of encodedByteStream.\nStep2. Check if the startPos is within the bounds of the encodedByteStream, if not set tempStatus to ERR_START_POS_OUTSIDE.\nStep3. Iterate over each character in the sourceString, for each character:\n  - Determine the number of bytes needed for UTF-8 encoding based on the character's value.\n  - Check if there is enough space in the encodedByteStream to accommodate the encoded character, if not set tempStatus to ERR_COUNT_EXCEEDS_BOUNDS and exit the loop.\n  - Encode the character into tempConvertedUtf8 based on the number of bytes required and update the encodedByteStream accordingly.\n  - Update tempArrayIndex and tempBytesUsed to reflect the number of bytes written.\nStep4. After the loop, set bytesUsed to the value of tempBytesUsed unless an error occurred, in which case set it to 0.\nStep5. Set the function's return value LGF_EncodeUtf8 to tempStatus to indicate the result of the function execution.", "name": "LGF_EncodeUtf8"}
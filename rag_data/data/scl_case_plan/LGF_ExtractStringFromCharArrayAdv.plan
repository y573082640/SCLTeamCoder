{"variables": ["1. name: textBefore, type: String, initial: None, role: The text that should appear before the characters to be extracted.", "2. name: textAfter, type: String, initial: None, role: The text that should appear after the characters to be extracted.", "3. name: includeBeforeAfter, type: Bool, initial: FALSE, role: Determines if textBefore and textAfter should be included in the extracted string.", "4. name: startPos, type: DInt, initial: 0, role: The starting index within the array from which to begin the search.", "5. name: extractedString, type: String, initial: '', role: The string that has been extracted from the array.", "6. name: position, type: DInt, initial: -1, role: The position within the array where the extracted text begins.", "7. name: length, type: Int, initial: x, role: The length of the text that was extracted.", "8. name: status, type: Word, initial: STATUS_NO_ERROR, role: The status of the function block execution.", "9. name: searchIn, type: Variant, initial: None, role: The array of characters or bytes in which to search for the specified text.", "10. name: tempNumElements, type: UDInt, initial: None, role: The number of elements in the searchIn array.", "11. name: tempPosInArray, type: DInt, initial: None, role: Temporary variable used to track the current position within the array.", "12. name: tempLenTextBefore, type: Int, initial: None, role: The length of the textBefore string.", "13. name: tempPosTextBefore, type: Int, initial: 0, role: The position of the textBefore within the current string slice.", "14. name: tempLenTextAfter, type: Int, initial: None, role: The length of the textAfter string.", "15. name: tempPosTextAfter, type: Int, initial: 0, role: The position of the textAfter within the current string slice.", "16. name: tempString, type: String, initial: '', role: Temporary string used to hold slices of the searchIn array.", "17. name: STATUS_TEXT_FOUND, type: Word, initial: 16#0000, role: Status code indicating text was found.", "18. name: WARNING_ONLY_START, type: Word, initial: 16#9001, role: Status code indicating only the start of the text was found.", "19. name: WARNING_NOTHING_FOUND, type: Word, initial: 16#9002, role: Status code indicating nothing was found.", "20. name: STATUS_NO_ERROR, type: Word, initial: 16#0000, role: Status code indicating no error.", "21. name: ERR_NO_ARRAY, type: Word, initial: 16#8200, role: Status code indicating an error due to invalid array input."], "instructions": ["Chars_TO_Strg", "UDINT_TO_UINT", "MIN", "FIND", "LEFT"], "planning": "Step1. Initialize temporary variables for positions, lengths, and status codes.\nStep2. Validate input to check if searchIn is an array of Char or Byte and calculate the number of elements.\nStep3. Repeat the search process:\n  Step3.1. Extract a substring from the searchIn array starting at tempPosInArray.\n  Step3.2. Search for textBefore in the extracted substring.\n  Step3.3. If textBefore is found, adjust tempPosInArray based on includeBeforeAfter.\n  Step3.4. Extract another substring from the adjusted position and search for textAfter.\n  Step3.5. If textAfter is found, set the extracted string, position, and length accordingly. If not, set the appropriate status code and exit.\n  Step3.6. Continue the search from the next position in the array.\nStep4. If the end of the array is reached without finding the specified text, set the status code to indicate nothing was found.", "name": "LGF_ExtractStringFromCharArrayAdv"}
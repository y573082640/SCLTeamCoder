{"variables": ["1. name: amplitude, type: Real, initial: 1.0, role: The input amplitude of the cosine signal.", "2. name: offset, type: Real, initial: 0.0, role: The input offset of the cosine signal.", "3. name: periode, type: UDInt, initial: 1000, role: The input period of the cosine signal in milliseconds.", "4. name: phaseShift, type: Real, initial: 0.0, role: The input phase shift of the cosine signal.", "5. name: callOB, type: OB_CYCLIC, initial: None, role: The cyclic interrupt OB number used to determine the sample time.", "6. name: reset, type: Bool, initial: FALSE, role: A boolean input to reset the cosine signal generator.", "7. name: value, type: Real, initial: None, role: The output current value of the cosinusoidal signal.", "8. name: error, type: Bool, initial: FALSE, role: An output boolean indicating an error status.", "9. name: status, type: Word, initial: None, role: The output status word indicating the status of the function block.", "10. name: subFunctionStatus, type: Word, initial: None, role: The output status or return value of called function blocks, functions, and system blocks.", "11. name: statRad, type: Real, initial: None, role: A variable to store the angle in radians for the cosine calculation.", "12. name: statPhaseShift, type: Real, initial: 0.0, role: A variable to store the phase shift in radians for the cosine calculation.", "13. name: statCounter, type: UDInt, initial: None, role: A counter that increments with each call to the cyclic interrupt OB, used to calculate the current position in the cosine period.", "14. name: tempCycleTime, type: UDInt, initial: None, role: A temporary variable to store the cycle time of the cyclic interrupt OB.", "15. name: tempCyclePhase, type: UDInt, initial: None, role: A temporary variable to store the phase of the cyclic interrupt OB.", "16. name: tempCycleStatus, type: Word, initial: None, role: A temporary variable to store the status of the cyclic interrupt OB.", "17. name: tempReadTimeStatus, type: Int, initial: None, role: A temporary variable to store the status of the QRY_CINT function call.", "18. name: SECOND_IN_MS, type: UDInt, initial: 1000, role: A constant representing the number of milliseconds in a second.", "19. name: ZERO, type: Int, initial: 0, role: A constant representing the value zero.", "20. name: SLOPE, type: Int, initial: 2, role: A constant representing the slope of the signal (not used in the code).", "21. name: TWO_PI, type: Real, initial: 6.283185, role: A constant representing the value of 2*PI.", "22. name: SUB_STATUS_NO_ERROR, type: Word, initial: 16#0000, role: A constant representing the status code for no error.", "23. name: STATUS_FINISHED_NO_ERROR, type: Word, initial: 16#0000, role: A constant representing the status code for finished without error.", "24. name: QRY_CINT_OB_UNAVAILABLE, type: Word, initial: 16#0000, role: A constant representing the status code when the OB is unavailable.", "25. name: ERR_OB_UNAVAILABLE, type: Word, initial: 16#8600, role: A constant representing the error code when the OB is unavailable.", "26. name: ERR_QRY_CINT, type: Word, initial: 16#8601, role: A constant representing the error code for a QRY_CINT failure."], "instructions": ["QRY_CINT", "INT_TO_WORD", "COS", "UDINT_TO_REAL"], "planning": "Step1. Initialize the constants and internal variables.\nStep2. Query the cyclic interrupt OB for its sample time, phase, and status using the QRY_CINT instruction.\nStep3. Handle errors from the QRY_CINT instruction and set the appropriate error status and output values.\nStep4. If reset is true, reset the counter and output value to zero.\nStep5. If not reset, increment the counter based on the sample time and calculate the cosine value using the given amplitude, offset, and phase shift.\nStep6. Set the error output to false, the status to indicate no error, and the subFunctionStatus to no error.\nStep7. Set the ENO output to true as the error output mechanism is not used.", "name": "LGF_CosinusCI"}
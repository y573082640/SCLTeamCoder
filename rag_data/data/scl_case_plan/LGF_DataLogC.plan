{"variables": ["1. name: enable, type: Bool, initial: None, role: A boolean input that enables or disables the functionality of the function block.", "2. name: name, type: String, initial: 'DefaultDataLog', role: The name of the datalog, which is also used as the file name.", "3. name: triggerLogEntry, type: Bool, initial: None, role: A boolean input that triggers a datalog entry on a rising edge, if parameter.isLoggingByInterval is set to FALSE.", "4. name: clearLog, type: Bool, initial: None, role: A boolean input that triggers clearing of the datalog file on a rising edge.", "5. name: deleteLog, type: Bool, initial: None, role: A boolean input that triggers deletion of the datalog file on a rising edge, if it exists.", "6. name: parameter, type: LGF_typeDataLogParameter, initial: None, role: A user-defined type that holds all possible parameters to configure the behavior of the function block.", "7. name: valid, type: Bool, initial: None, role: A boolean output that indicates if a valid set of output values is available at the function block.", "8. name: busy, type: Bool, initial: None, role: A boolean output that indicates if the function block is not finished and new output values can be expected.", "9. name: error, type: Bool, initial: None, role: A boolean output that indicates if an error occurred during the execution of the function block.", "10. name: status, type: Word, initial: #STATUS_NO_CALL, role: The status of the function block, used for error identification.", "11. name: writeEntryDone, type: Bool, initial: None, role: A boolean output that indicates if the datalog write operation was successfully completed.", "12. name: clearLogDone, type: Bool, initial: None, role: A boolean output that indicates if the datalog clear operation was successfully completed.", "13. name: deleteLogDone, type: Bool, initial: None, role: A boolean output that indicates if the datalog delete operation was successfully completed.", "14. name: lastEntryReached, type: Bool, initial: None, role: A boolean output that indicates if the last entry of the datalog has been reached.", "15. name: noOfEntries, type: UDInt, initial: None, role: The number of entries in the datalog.", "16. name: diagnostics, type: LGF_typeDiagnostics, initial: None, role: A diagnostic structure to store and transfer diagnostic information from blocks through the interface.", "17. name: data, type: Variant, initial: None, role: The data structure to be logged in the datalog file.", "18. name: statDataLogCommands, type: Struct, initial: None, role: A structure containing various properties related to the datalog commands.", "19. name: instIntervalTimer, type: IEC_TIMER, initial: None, role: An instance of the IEC_TIMER instruction used for interval timing.", "20. name: instDataLogCreate, type: DataLogCreate, initial: None, role: An instance of the DataLogCreate instruction used for creating a datalog.", "21. name: instDataLogOpen, type: DataLogOpen, initial: None, role: An instance of the DataLogOpen instruction used for opening a datalog.", "22. name: instDataLogClose, type: DataLogClose, initial: None, role: An instance of the DataLogClose instruction used for closing a datalog.", "23. name: instDataLogWrite, type: DataLogWrite, initial: None, role: An instance of the DataLogWrite instruction used for writing to a datalog.", "24. name: instDataLogClear, type: DataLogClear, initial: None, role: An instance of the DataLogClear instruction used for clearing a datalog.", "25. name: instDataLogDelete, type: DataLogDelete, initial: None, role: An instance of the DataLogDelete instruction used for deleting a datalog.", "26. name: statInternal, type: Struct, initial: None, role: A structure containing internal state information of the function block.", "27. name: statNoOfEntries, type: UDInt, initial: 0, role: The number of entries in the datalog.", "28. name: statLlastEntryReached, type: Bool, initial: FALSE, role: A boolean flag indicating if the last entry of the datalog has been reached.", "29. name: statWriteEntryDone, type: Bool, initial: FALSE, role: A boolean flag indicating if a write operation to the datalog was successfully completed.", "30. name: tempEnable, type: Bool, initial: None, role: A temporary variable used to store the current state of the enable input.", "31. name: tempExitStateLoop, type: Bool, initial: None, role: A temporary variable used to control the exit condition of the state machine loop."], "instructions": ["DataLogCreate", "DataLogOpen", "DataLogClose", "DataLogWrite", "DataLogClear", "DataLogDelete", "IEC_TIMER"], "planning": "Step 1. Initialize the function block state machine and check for the initial call or command call order errors.\nStep 2. Handle the enable and disable conditions of the function block, initializing parameters and setting the main state accordingly.\nStep 3. If the main state is #FB_STATE_NO_PROCESSING or between #FB_STATE_DL_CREATE and #FB_STATE_DL_DELETE, evaluate any clear or delete commands.\nStep 4. Enter the state machine loop and process each state based on the current main state value.\nStep 5. In each state, perform the necessary operations using the respective instruction calls and check for completion or errors.\nStep 6. If the state requires waiting for a trigger or interval, set the appropriate state and exit the loop if necessary.\nStep 7. After processing the states, reset any edge memories and update the outputs based on the internal state variables.\nStep 8. If disabling is completed, reset all outputs and set the main state to #FB_STATE_NO_PROCESSING.\nStep 9. If an error is cleared by the user, reset outputs and set the error flag, then set the main state to #FB_STATE_NO_PROCESSING.\nStep 10. If an error is automatically cleared by the function block, reset outputs and set the error flag, then set the main state to #FB_STATE_NO_PROCESSING.\nStep 11. If an error is acknowledged after user/auto clearing, set the valid flag and update the status to #STATUS_SUBSEQUENT_CALL.\nStep 12. Write static values to the outputs based on the internal state variables.\nStep 13. End the function block execution.", "name": "LGF_DataLogC"}
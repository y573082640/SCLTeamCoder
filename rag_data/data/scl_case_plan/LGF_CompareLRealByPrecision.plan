{"variables": ["1. name: valueA, type: LReal, initial: None, role: The first LREAL number to be compared.", "2. name: valueB, type: LReal, initial: None, role: The second LREAL number to be compared.", "3. name: precision, type: LReal, initial: None, role: The accuracy with which the two LREAL values are compared.", "4. name: LGF_CompareLRealByPrecision, type: Bool, initial: FALSE, role: The return value indicating whether the two LREAL numbers are approximately the same or not.", "5. name: ENO, type: Bool, initial: TRUE, role: An output that indicates the execution status of the function (not used for error handling, always set to TRUE)."], "instructions": ["// The following SCL instructions are used:\nABS"], "planning": "# Step1. Initialize the return variable LGF_CompareLRealByPrecision to FALSE.\n# Step2. Check if valueA is 0 and if the absolute value of valueB is less than or equal to the precision, if so set LGF_CompareLRealByPrecision to TRUE.\n# Step3. Check if valueB is 0 and if the absolute value of valueA is less than or equal to the precision, if so set LGF_CompareLRealByPrecision to TRUE.\n# Step4. Check if the absolute difference between valueA and valueB is less than or equal to the precision multiplied by the absolute value of valueA, if so set LGF_CompareLRealByPrecision to TRUE.\n# Step5. Since no error handling is required, the ENO variable is forced to TRUE.", "name": "LGF_CompareLRealByPrecision"}
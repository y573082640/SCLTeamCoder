{"variables": ["1. name: minValue, type: UDInt, initial: None, role: The output variable that stores the minimum value found in the array.", "2. name: minValueIndex, type: DInt, initial: , role: The output variable that stores the index of the minimum value found in the array.", "3. name: maxValue, type: UDInt, initial: , role: The output variable that stores the maximum value found in the array.", "4. name: maxValueIndex, type: DInt, initial: , role: The output variable that stores the index of the maximum value found in the array.", "5. name: values, type: Array[*] of UDInt, initial: , role: The input/output array variable in which the function searches for the maximum and minimum values.", "6. name: tempArrayLowerBound, type: DInt, initial: , role: A temporary variable that stores the lower bound index of the array.", "7. name: tempArrayUpperBound, type: DInt, initial: , role: A temporary variable that stores the upper bound index of the array.", "8. name: tempCounter, type: DInt, initial: , role: A temporary loop counter used for iterating through the array.", "9. name: tempArrayIndexMax, type: DInt, initial: , role: A temporary variable that stores the index of the maximum value found in the array.", "10. name: tempArrayIndexMin, type: DInt, initial: , role: A temporary variable that stores the index of the minimum value found in the array.", "11. name: tempActValue, type: UDInt, initial: , role: A temporary variable that stores the current value being compared during the loop.", "12. name: tempMinValue, type: UDInt, initial: , role: A temporary variable that stores the current minimum value found during the loop.", "13. name: tempMaxValue, type: UDInt, initial: , role: A temporary variable that stores the current maximum value found during the loop.", "14. name: START_FROM_SECOND_ELEMENT, type: Int, initial: 1, role: A constant that defines the starting index for the search (skips the first element).", "15. name: DIMENSION_ONE, type: UInt, initial: 1, role: A constant that is used to specify the dimension for array bounds calculation."], "instructions": ["UPPER_BOUND", "LOWER_BOUND", "FOR", "IF", "ELSEIF"], "planning": "Step1. Determine the lower and upper bounds of the array using the LOWER_BOUND and UPPER_BOUND instructions.\nStep2. Initialize the temporary variables for the minimum and maximum values and their indices with the first element of the array.\nStep3. Iterate through the array starting from the second element using a FOR loop, comparing each element with the current minimum and maximum values.\nStep4. If a new minimum value is found, update the tempMinValue and tempArrayIndexMin variables.\nStep5. If a new maximum value is found, update the tempMaxValue and tempArrayIndexMax variables.\nStep6. After the loop ends, assign the final minimum and maximum values and their indices to the output variables minValue, minValueIndex, maxValue, and maxValueIndex.\nStep7. Set the ENO output to TRUE as no error handling is required and the operation is guaranteed to succeed.", "name": "LGF_SearchMinMax_UDInt"}
{"variables": ["1. name: timeDTL, type: DTL, initial: None, role: Input date and time value to be converted to Julian Date.", "2. name: julianDate, type: LReal, initial: 0.0, role: Output for the converted Julian date.", "3. name: modifiedJulianDate, type: LReal, initial: 0.0, role: Output for the converted modified Julian date.", "4. name: error, type: Bool, initial: None, role: Indicates whether an error occurred during the execution of the function.", "5. name: status, type: Word, initial: None, role: Provides status of the function, including error identification.", "6. name: tempTimeDtl, type: DTL, initial: None, role: Temporary variable used to force PLC tag update and validation.", "7. name: tempUnixTime, type: DInt, initial: 0, role: Temporary variable to hold the calculated Unix time.", "8. name: tempJulianDate, type: LReal, initial: 0.0, role: Temporary variable to hold the calculated Julian date.", "9. name: tempModifiedJulianDate, type: LReal, initial: 0.0, role: Temporary variable to hold the calculated modified Julian date.", "10. name: DELTA_1970_1990, type: DInt, initial: 631152000, role: Constant representing the number of seconds between 1970 and 1990.", "11. name: SEC_PER_DAY, type: DInt, initial: 86400, role: Constant representing the number of seconds in a day.", "12. name: OFFSET_JULIAN_DATE_TO_UNIX, type: LReal, initial: 2440587.5, role: Offset used to convert Unix time to Julian date.", "13. name: OFFSET_MODIFIED_JULIAN_DATE_TO_JULIAN_DATE, type: LReal, initial: 2400000.5, role: Offset used to convert regular Julian date to modified Julian date.", "14. name: TIME_ZERO_FORCE_UPDATE, type: Time, initial: t#0d, role: Time value used to force tag update.", "15. name: STATUS_EXECUTION_FINISHED_NO_ERROR, type: Word, initial: 16#0000, role: Status code for successful execution.", "16. name: ERR_DTL_INPUT_VALUE_INVALID, type: Word, initial: 16#8000, role: Status code for invalid DTL input value.", "17. name: ERR_TIME_BEFORE_1990, type: Word, initial: 16#8001, role: Status code for time before 1990.", "18. name: CONVERSION_LIMIT, type: DTL, initial: DTL#1990-01-01-00:00:00, role: Constant representing the conversion limit date."], "instructions": ["DATE_TO_DINT", "DTL_TO_DATE", "DTL_TO_TOD", "TOD_TO_DINT", "DINT_TO_LREAL"], "planning": "Step 1. Initialize temporary variables #tempUnixTime, #tempJulianDate, and #tempModifiedJulianDate to 0 or 0.0.\nStep 2. Force an update of the input DTL value and store it in the temporary variable #tempTimeDtl.\nStep 3. Check if the input DTL value is valid. If not, set #error to TRUE and #status to #ERR_DTL_INPUT_VALUE_INVALID, then return.\nStep 4. Check if the input time is before the year 1990. If so, set #error to TRUE and #status to #ERR_TIME_BEFORE_1990, then return.\nStep 5. If the input is valid and after 1990, convert the DTL value to Unix time.\nStep 6. Convert the Unix time to a regular Julian date.\nStep 7. Convert the regular Julian date to a modified Julian date.\nStep 8. Assign the calculated #tempJulianDate and #tempModifiedJulianDate to the output variables #julianDate and #modifiedJulianDate, respectively.\nStep 9. Set #error to FALSE indicating no error occurred and #status to #STATUS_EXECUTION_FINISHED_NO_ERROR to indicate successful execution.", "name": "LGF_DTLToJulianDate"}
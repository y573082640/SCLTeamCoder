{"variables": ["1. name: julianDate, type: LReal, initial: None, role: Input value representing the Julian date to be converted.", "2. name: isModifiedDate, type: Bool, initial: FALSE, role: Input flag indicating whether the provided Julian date is modified or regular.", "3. name: error, type: Bool, initial: None, role: Output indicating whether an error occurred during the execution of the function.", "4. name: status, type: Word, initial: None, role: Output providing status of the function, including error identification.", "5. name: tempJulianDate, type: LReal, initial: None, role: Temporary variable to hold adjusted Julian date value.", "6. name: tempUnixTime, type: DInt, initial: None, role: Temporary variable to hold the calculated UNIX time from the Julian date.", "7. name: tempDate, type: DInt, initial: None, role: Temporary variable to hold the calculated date part of the UNIX time.", "8. name: tempTime, type: DInt, initial: None, role: Temporary variable to hold the calculated time part of the UNIX time.", "9. name: tempDTL, type: DTL, initial: None, role: Temporary variable to construct the DTL date and time value.", "10. name: DELTA_1970_1990, type: DInt, initial: 631_152_000, role: Constant representing the number of seconds from 1970-01-01 to 1990-01-01.", "11. name: SEC_PER_DAY, type: DInt, initial: 86400, role: Constant representing the number of seconds in a day.", "12. name: SEC_PER_HOUR, type: DInt, initial: 3600, role: Constant representing the number of seconds in an hour.", "13. name: SEC_PER_MINUTE, type: DInt, initial: 60, role: Constant representing the number of seconds in a minute.", "14. name: OFFSET_JULIAN_DATE_TO_UNIX, type: LReal, initial: 2440587.5, role: Constant representing the offset from Julian date to UNIX time.", "15. name: OFFSET_MODIFIED_JULIAN_DATE_TO_JULIAN_DATE, type: LReal, initial: 2400000.5, role: Constant representing the offset from modified Julian date to regular Julian date.", "16. name: STATUS_NO_ERRROR, type: Word, initial: 16#0000, role: Constant representing the status code for no error.", "17. name: ERR_TIME_BEFORE_1990, type: Word, initial: 16#8000, role: Constant representing the error status code for a time before 1990.", "18. name: WARN_CONVERSION_LIMIT, type: Word, initial: 16#6001, role: Constant representing the warning status code for conversion limit.", "19. name: CONVERSION_LIMIT, type: DTL, initial: DTL#1990-01-01-00:00:00, role: Constant representing the DTL value for the lower limit of conversion (1990-01-01 00:00:00)."], "instructions": ["LREAL_TO_DINT", "DATE_TO_DTL", "DINT_TO_DATE", "DINT_TO_USINT", "MOD"], "planning": "Step1. Check if the input Julian date is modified or regular and adjust it accordingly.\nStep2. Convert the adjusted Julian date to UNIX time.\nStep3. Check if the calculated UNIX time corresponds to a date before 1990. If so, set the output to the conversion limit, set an error flag, and return.\nStep4. If the UNIX time is on the lower limit of 1990, set a warning status and return.\nStep5. Calculate the date part from the UNIX time and convert it to DTL format.\nStep6. Calculate the time part from the UNIX time and assign the hours, minutes, and seconds to the temporary DTL variable.\nStep7. Assign the final DTL value to the output, set the error flag to FALSE, and set the status to no error.", "name": "LGF_JulianTimeToDTL"}
{"variables": ["1. name: autoValue, type: LReal, initial: None, role: The input signal to be processed and limited in its rate of change.", "2. name: manualValue, type: LReal, initial: None, role: Manually controlled output value.", "3. name: setPosUpRateLim, type: LReal, initial: None, role: Rate of change per second for the rising ramp in the positive value range.", "4. name: setPosDownRateLim, type: LReal, initial: None, role: Rate of change per second for the falling ramp in the positive value range.", "5. name: setNegUpRateLim, type: LReal, initial: None, role: Rate of change per second for the rising ramp in the negative value range.", "6. name: setNegDownRateLim, type: LReal, initial: None, role: Rate of change per second for the falling ramp in the negative value range.", "7. name: setHighLim, type: LReal, initial: None, role: High limit value.", "8. name: setLowLim, type: LReal, initial: None, role: Low limit value.", "9. name: defaultOutValue, type: LReal, initial: None, role: Value for pre-assignment of the output variable.", "10. name: enDefaultOutValue, type: Bool, initial: None, role: Assign default output value.", "11. name: track, type: Bool, initial: None, role: Follow / tracking of Input variable.", "12. name: manOp, type: Bool, initial: None, role: Manual mode on.", "13. name: reset, type: Bool, initial: None, role: Complete restart of function.", "14. name: callOB, type: OB_CYCLIC, initial: None, role: Calling wake-alarm interrupt OB.", "15. name: outputValue, type: LReal, initial: None, role: Output variable.", "16. name: posUpRateLim, type: Bool, initial: None, role: Rise limitation in positive range tripped.", "17. name: posDownRateLim, type: Bool, initial: None, role: Down rate limit in positive range reached.", "18. name: negUpRateLim, type: Bool, initial: None, role: Up rate limit in negative range reached.", "19. name: negDownRateLim, type: Bool, initial: None, role: Down rate limit in negative range reached.", "20. name: highLim, type: Bool, initial: None, role: High limit reached.", "21. name: lowLim, type: Bool, initial: None, role: Low limit reached.", "22. name: error, type: Bool, initial: None, role: Error occurred during the execution of the FB.", "23. name: status, type: Word, initial: None, role: Status of the FB.", "24. name: subfunctionStatus, type: Word, initial: None, role: Status or return value of called FB's, FC's and system blocks.", "25. name: statPrevOutputValue, type: LReal, initial: 0.0, role: Previous output value.", "26. name: statManOp, type: Bool, initial: False, role: Manual mode flag.", "27. name: tempPosUp, type: Bool, initial: None, role: Temporary variable to indicate rise limitation in positive range.", "28. name: tempPosDown, type: Bool, initial: None, role: Temporary variable to indicate down rate limit in positive range.", "29. name: tempNegUp, type: Bool, initial: None, role: Temporary variable to indicate up rate limit in negative range.", "30. name: tempNegDown, type: Bool, initial: None, role: Temporary variable to indicate down rate limit in negative range.", "31. name: tempHighLim, type: Bool, initial: None, role: Temporary variable to indicate high limit reached.", "32. name: tempLowLim, type: Bool, initial: None, role: Temporary variable to indicate low limit reached.", "33. name: tempCycleReal, type: LReal, initial: None, role: Time in seconds.", "34. name: tempOutv, type: LReal, initial: None, role: Temporary output variable.", "35. name: tempVar, type: LReal, initial: None, role: Temporary variable used for intermediate calculations.", "36. name: tempCycleTime, type: UDInt, initial: None, role: Sample time in microseconds.", "37. name: tempCyclePhase, type: UDInt, initial: None, role: Phase of the cyclic interrupt OB.", "38. name: tempCycleStatus, type: Word, initial: None, role: Status of the cyclic interrupt OB.", "39. name: tempReadTimeStatus, type: Int, initial: None, role: Status of the QRY_CINT function.", "40. name: ZERO_INT, type: Int, initial: 0, role: Constant representing zero for integer type.", "41. name: ZERO_REAL, type: LReal, initial: 0.0, role: Constant representing zero for real type.", "42. name: SECOND_IN_MICROSECONDS, type: LReal, initial: 1000000.0, role: Constant representing one second in microseconds.", "43. name: SUB_STATUS_NO_ERROR, type: Word, initial: 16#0000, role: Constant representing no error in subfunction status.", "44. name: STATUS_FINISHED_NO_ERROR, type: Word, initial: 16#0000, role: Constant representing finished without error in status.", "45. name: ERR_NEG_RATE_LIM, type: Word, initial: 16#8200, role: Constant representing error for negative rate limit.", "46. name: ERR_NEG_RATE_OF_CHANGE, type: Word, initial: 16#8202, role: Constant representing error for negative rate of change.", "47. name: ERR_QRY_CINT, type: Word, initial: 16#8600, role: Constant representing error for QRY_CINT function.", "48. name: ERR_OB_UNAVAILABLE, type: Word, initial: 16#8601, role: Constant representing error for unavailable OB."], "instructions": ["QRY_CINT", "UDINT_TO_REAL", "INT_TO_WORD"], "planning": "Step1. Initialize the temporary variables tempPosUp, tempPosDown, tempNegUp, tempNegDown, tempHighLim, tempLowLim, and tempOutv to False or 0.0.\nStep2. Get the sample time from the cyclic interrupt OB and convert it to seconds.\nStep3. Validate the input parameters and check for errors such as negative rate limits or unavailable OB. If any error is found, set the corresponding error flags and return.\nStep4. Check if the reset input is True. If so, reset the manual mode flag and set the output value based on the enDefaultOutValue flag.\nStep5. If the manual mode is enabled, set the output value to the manualValue and update the manual mode flag.\nStep6. If the manual mode is disabled, check if the enDefaultOutValue flag is True. If so, set the output value to the defaultOutValue.\nStep7. If the track flag is enabled, set the output value to the autoValue.\nStep8. If the track flag is disabled, perform the regular function processing based on the previous output value and the autoValue. This includes calculating the rate of change and applying the rate limits in both positive and negative ranges.\nStep9. Apply the high and low limits to the output value if the output value is outside the specified limits.\nStep10. Update the previous output value with the current output value.\nStep11. Write the output values to the output variables.\nStep12. Set the error and status flags to indicate no error.\nStep13. Use the ENO mechanism to indicate the successful execution of the function block.", "name": "LGF_LimRateOfChangeAdvancedCI"}
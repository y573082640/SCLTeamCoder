{"variables": ["1. name: amplitude, type: Real, initial: 1.0, role: The input parameter that sets the peak value of the sinusoidal signal.", "2. name: offset, type: Real, initial: 0.0, role: The input parameter that sets the vertical offset of the sinusoidal signal.", "3. name: periode, type: UDInt, initial: 1000, role: The input parameter that defines the period of the sinusoidal signal in milliseconds.", "4. name: phaseShift, type: Real, initial: 0.0, role: The input parameter that sets the phase shift of the sinusoidal signal.", "5. name: callOB, type: OB_CYCLIC, initial: None, role: The input parameter that specifies the cyclic interrupt OB number.", "6. name: reset, type: Bool, initial: FALSE, role: The input parameter that allows resetting the signal generator.", "7. name: value, type: Real, initial: None, role: The output parameter that holds the current value of the sinusoidal signal.", "8. name: error, type: Bool, initial: FALSE, role: The output parameter that indicates if an error has occurred.", "9. name: status, type: Word, initial: None, role: The output parameter that holds the status of the function block.", "10. name: subFunctionStatus, type: Word, initial: None, role: The output parameter that holds the status or return value of called FB's, FC's, and system blocks.", "11. name: statRad, type: Real, initial: None, role: A variable used to convert the counter to radians for the SIN function.", "12. name: statPhaseShift, type: Real, initial: 0.0, role: A variable used to store the calculated phase shift in radians.", "13. name: statCounter, type: UDInt, initial: None, role: A variable used to keep track of the time counter for generating the sinusoidal signal.", "14. name: tempCycleTime, type: UDInt, initial: None, role: A temporary variable used to store the cyclic interrupt OB's cycle time.", "15. name: tempCyclePhase, type: UDInt, initial: None, role: A temporary variable used to store the cyclic interrupt OB's phase.", "16. name: tempCycleStatus, type: Word, initial: None, role: A temporary variable used to store the status of the cyclic interrupt OB.", "17. name: tempReadTimeStatus, type: Int, initial: None, role: A temporary variable used to store the status of the QRY_CINT function call.", "18. name: SECOND_IN_MS, type: UDInt, initial: 1000, role: A constant that defines the number of milliseconds in one second.", "19. name: ZERO, type: Int, initial: 0, role: A constant used for comparisons.", "20. name: SLOPE, type: Int, initial: 2, role: A constant used in calculations, possibly for scaling.", "21. name: TWO_PI, type: Real, initial: 6.283185, role: A constant representing the value of 2 times pi.", "22. name: SUB_STATUS_NO_ERROR, type: Word, initial: 16#0000, role: A constant representing the status code for no error.", "23. name: STATUS_FINISHED_NO_ERROR, type: Word, initial: 16#0000, role: A constant representing the status code for finished with no error.", "24. name: QRY_CINT_OB_UNAVAILABLE, type: Word, initial: 16#0000, role: A constant representing the status code when OB is unavailable.", "25. name: ERR_OB_UNAVAILABLE, type: Word, initial: 16#8600, role: A constant representing the error code for OB unavailable.", "26. name: ERR_QRY_CINT, type: Word, initial: 16#8601, role: A constant representing the error code for QRY_CINT function error."], "instructions": ["QRY_CINT", "UDINT_TO_REAL", "MOD", "SIN", "INT_TO_WORD"], "planning": "Step1. Check if the reset input is set to TRUE, if so, reset the statCounter to 0 and set the value output to 0.\nStep2. If reset is not TRUE, increment the statCounter based on the tempCycleTime and convert it to a value within one period using MOD.\nStep3. Convert the statCounter to radians and calculate the phase shift in radians.\nStep4. Calculate the current value of the sinusoidal signal using the SIN function and assign it to the value output.\nStep5. Set the error output to FALSE, status output to STATUS_FINISHED_NO_ERROR, and subFunctionStatus output to SUB_STATUS_NO_ERROR.\nStep6. If there is an error in reading the cyclic interrupt OB time (QRY_CINT), set the error and status outputs accordingly and return.\nStep7. If the cyclic interrupt OB is not available, set the error and status outputs accordingly and return.", "name": "LGF_SinusCI"}
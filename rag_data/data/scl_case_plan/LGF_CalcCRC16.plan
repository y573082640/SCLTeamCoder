{"variables": ["1. name: initValue, type: Word, initial: 16#00, role: Start value for the CRC calculation.", "2. name: mask, type: Word, initial: 16#00, role: Generator polynomial for the CRC calculation.", "3. name: noOfElements, type: UInt, initial: 0, role: Number of elements to be used in the CRC calculation.", "4. name: error, type: Bool, initial: FALSE, role: Error flag indicating an error in the calculation.", "5. name: status, type: Word, initial: None, role: Status code representing the status of the calculation.", "6. name: array, type: Array[*] of Byte, initial: None, role: Data stream for which the CRC value will be calculated.", "7. name: tempCRC, type: Word, initial: None, role: Temporary variable to store the intermediate CRC value.", "8. name: tempLowerLimit, type: DInt, initial: None, role: Lower limit index for the array iteration.", "9. name: tempUpperLimit, type: DInt, initial: None, role: Upper limit index for the array iteration.", "10. name: tempIndexArray, type: DInt, initial: None, role: Array index used for iteration during CRC calculation.", "11. name: tempIndexCRC, type: DInt, initial: None, role: Index used for bit-wise iteration during CRC calculation.", "12. name: SHIFT_ONE_BIT, type: UInt, initial: 1, role: Constant value representing the bit shift for one position.", "13. name: SHIFT_ONE_BYTE, type: UInt, initial: 8, role: Constant value representing the bit shift for one byte.", "14. name: ARRAY_FIRST_DIMENSION, type: UInt, initial: 1, role: Constant value representing the first dimension of the array.", "15. name: CRC_LOOP_LOWER_LIMIT, type: DInt, initial: 0, role: Constant value representing the lower limit for CRC bit-wise loop.", "16. name: CRC_LOOP_UPPER_LIMIT, type: DInt, initial: 7, role: Constant value representing the upper limit for CRC bit-wise loop.", "17. name: ERR_NO_OF_ELEMENTS, type: Word, initial: 16#8400, role: Error code for invalid number of elements.", "18. name: STATUS_NO_ERROR, type: Word, initial: 16#0000, role: Status code for no error condition."], "instructions": ["LOWER_BOUND", "UPPER_BOUND", "SHL", "BYTE_TO_WORD", "XOR", "ENO"], "planning": "Step1. Initialize the tempCRC variable with the initValue.\nStep2. Calculate the lower and upper bounds of the array.\nStep3. Check if the noOfElements parameter is greater than zero and if it fits within the array size. If not, set the error flag, status code, and return.\nStep4. Iterate over the array elements from the lower to the upper limit.\nStep5. For each array element, convert it to Word and shift left by one byte, then XOR it with tempCRC.\nStep6. For each bit of the CRC, check if the most significant bit is set.\nStep7. If set, shift the CRC left by one bit and XOR it with the mask. If not, just shift the CRC left.\nStep8. After processing all elements, set the function return value to tempCRC.\nStep9. Set the status to no error and error flag to FALSE.\nStep10. Enable the ENO (Enable Output) to indicate successful execution.", "name": "LGF_CalcCRC16"}
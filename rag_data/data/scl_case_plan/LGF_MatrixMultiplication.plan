{"variables": ["1. name: error, type: Bool, initial: false, role: Flag to indicate if an error has occurred during matrix multiplication.", "2. name: status, type: Word, initial: 0, role: Status code to provide detailed information about the error if one occurs.", "3. name: matrix1, type: Array[*, *] of LReal, initial: Unspecified, role: The first input matrix to be multiplied.", "4. name: matrix2, type: Array[*, *] of LReal, initial: Unspecified, role: The second input matrix to be multiplied.", "5. name: matrixResult, type: Array[*, *] of LReal, initial: Unspecified, role: The output matrix that will store the result of the multiplication.", "6. name: tempMatrix1LowerBoundRows, type: DInt, initial: Unspecified, role: Temporary variable to store the lower bound of rows for matrix1.", "7. name: tempMatrix1LowerBoundColumns, type: DInt, initial: Unspecified, role: Temporary variable to store the lower bound of columns for matrix1.", "8. name: tempMatrix1UpperBoundRows, type: DInt, initial: Unspecified, role: Temporary variable to store the upper bound of rows for matrix1.", "9. name: tempMatrix1UpperBoundColumns, type: DInt, initial: Unspecified, role: Temporary variable to store the upper bound of columns for matrix1.", "10. name: tempMatrix2LowerBoundRows, type: DInt, initial: Unspecified, role: Temporary variable to store the lower bound of rows for matrix2.", "11. name: tempMatrix2LowerBoundColumns, type: DInt, initial: Unspecified, role: Temporary variable to store the lower bound of columns for matrix2.", "12. name: tempMatrix2UpperBoundRows, type: DInt, initial: Unspecified, role: Temporary variable to store the upper bound of rows for matrix2.", "13. name: tempMatrix2UpperBoundColumns, type: DInt, initial: Unspecified, role: Temporary variable to store the upper bound of columns for matrix2.", "14. name: tempResultMatrixLowerBoundRows, type: DInt, initial: Unspecified, role: Temporary variable to store the lower bound of rows for matrixResult.", "15. name: tempResultMatrixLowerBoundColumns, type: DInt, initial: Unspecified, role: Temporary variable to store the lower bound of columns for matrixResult.", "16. name: tempResultMatrixUpperBoundRows, type: DInt, initial: Unspecified, role: Temporary variable to store the upper bound of rows for matrixResult.", "17. name: tempResultMatrixUpperBoundColumns, type: DInt, initial: Unspecified, role: Temporary variable to store the upper bound of columns for matrixResult.", "18. name: tempJ, type: DInt, initial: Unspecified, role: Temporary loop variable for iterating over the rows of matrix1.", "19. name: tempK, type: DInt, initial: Unspecified, role: Temporary loop variable for iterating over the columns of matrix2.", "20. name: tempL, type: DInt, initial: Unspecified, role: Temporary loop variable for iterating over the columns of matrix1 (and rows of matrix2).", "21. name: tempResult, type: LReal, initial: 0.0, role: Temporary variable to accumulate the result of the multiplication for a single element of the result matrix.", "22. name: ZERO, type: Real, initial: 0.0, role: Constant representing the value of zero.", "23. name: ROWS, type: UInt, initial: 1, role: Constant representing the dimension for rows when using array boundary functions.", "24. name: COLUMNS, type: UInt, initial: 2, role: Constant representing the dimension for columns when using array boundary functions.", "25. name: STATUS_NO_ERROR, type: Word, initial: 0x0000, role: Constant representing the status code for no error.", "26. name: ERR_MATR1_LOWBOUND_COLUMNS_MATR2_LOWBOUND_ROWS, type: Word, initial: 0x8200, role: Constant representing the error code for mismatched lower bounds of columns and rows between matrix1 and matrix2.", "27. name: ERR_MATR1_UPPBOUND_COLUMNS_MATR2_UPPBOUND_ROWS, type: Word, initial: 0x8201, role: Constant representing the error code for mismatched upper bounds of columns and rows between matrix1 and matrix2.", "28. name: ERR_MATR1_LOWBOUND_ROWS_RESMATR_LOWBOUND_ROWS, type: Word, initial: 0x8202, role: Constant representing the error code for mismatched lower bounds of rows between matrix1 and matrixResult.", "29. name: ERR_MATR2_LOWBOUND_COLUMNS_RESMATR_LOWBOUND_COLUMNS, type: Word, initial: 0x8203, role: Constant representing the error code for mismatched lower bounds of columns between matrix2 and matrixResult.", "30. name: ERR_MATR1_UPPBOUND_ROWS_RESMATR_UPPBOUND_ROWS, type: Word, initial: 0x8204, role: Constant representing the error code for mismatched upper bounds of rows between matrix1 and matrixResult.", "31. name: ERR_MATR2_UPPBOUND_COLUMNS_RESMATR_UPPBOUND_COLUMNS, type: Word, initial: 0x8205, role: Constant representing the error code for mismatched upper bounds of columns between matrix2 and matrixResult."], "instructions": ["LOWER_BOUND", "UPPER_BOUND"], "planning": "Step1. Determine the size of the matrices by using LOWER_BOUND and UPPER_BOUND functions for rows and columns of matrix1, matrix2, and matrixResult.\nStep2. Check for size compatibility between matrix1 and matrix2 for multiplication. If not compatible, set the error flag and status code accordingly and exit the function.\nStep3. Check if the result matrix has the correct size to store the multiplication result. If not, set the error flag and status code accordingly and exit the function.\nStep4. Perform the matrix multiplication by iterating through each row of matrix1 and each column of matrix2, accumulating the result in tempResult.\nStep5. Assign the calculated result to the corresponding element in the matrixResult.\nStep6. Set the error flag to false and status code to no error to indicate successful multiplication.", "name": "LGF_MatrixMultiplication"}
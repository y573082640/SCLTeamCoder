FUNCTION "LGF_BitReset" : DWord
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : Siemens_SIMATIC_Systems_Support
FAMILY : LGF
NAME : LGF_BitReset
   VAR_INPUT 
      value : DWord;
      bitNo : USInt;
   END_VAR

   VAR CONSTANT 
      BINARY_ONES : DWord := 16#FFFFFFFF;
      TRUE_BOOL_BIT : DWord := 16#0001;
      MAX_NO_OF_BITS : USInt := 32;
   END_VAR


BEGIN
	REGION BLOCK INFO HEADER
	  //===============================================================================
	  // SIEMENS AG / (c)Copyright 2019
	  //-------------------------------------------------------------------------------
	  // Title:            LGF_BitReset
	  // Comment/Function: Reset bit in elementary datatype - DWord
	  //                   can be used for Word and Byte as well, by convert
	  //                   the passed paramter and the result using for e.g. Dword_to_Byte
	  // Library/Family:   LGF (Library General Functions)
	  // Author:           Siemens Digital Industry
	  // Tested with:      CPU1212C DC/DC/DC FW:V4.2
	  // Engineering:      TIA Portal V15.1
	  // Restrictions:     ENO not in use, set to true, no error handling
	  // Requirements:     PLC (S7-1200 / S7-1500)
	  //-------------------------------------------------------------------------------
	  // Change log table:
	  // Version  | Date       | Expert in charge         | Changes applied
	  // 01.00.00 | 06.06.2015 | Siemens Industry Support | first release
	  // 03.00.00 | 23.04.2020 | Siemens Industry Support | Set version to V3.0.0
	  //                         harmonize the version of the whole library
	  // 03.00.01 | 19.01.2021 | Simatic Systems Support
	  //                         Insert documentation
	  //===============================================================================
	END_REGION
	
	REGION Logic
	  // reset the bit in tag
	  // shift one true bit into given position
	  // concatenate value then with XOR and biary ones
	  // using this result with AND and value will result in the previous value and the reseted bit in position
	  #LGF_BitReset := #value AND (#BINARY_ONES XOR SHL(IN := #TRUE_BOOL_BIT, N := (#bitNo MOD #MAX_NO_OF_BITS)));
	  
	  // no error handling needed
	  ENO := TRUE;
	END_REGION
	
END_FUNCTION

FUNCTION "LGF_BitSet" : DWord
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : Siemens_SIMATIC_Systems_Support
FAMILY : LGF
NAME : LGF_BitSet
   VAR_INPUT 
      value : DWord;
      bitNo : USInt;
   END_VAR

   VAR CONSTANT 
      TRUE_BOOL_BIT : DWord := 16#0001;
      MAX_NO_OF_BITS : USInt := 32;
   END_VAR


BEGIN
	REGION BLOCK INFO HEADER
	  //===============================================================================
	  // SIEMENS AG / (c)Copyright 2019
	  //-------------------------------------------------------------------------------
	  // Title:            LGF_BitSet
	  // Comment/Function: Set bit in elementary datatype - DWord
	  //                   cam be used for Word and Byte as well, by convert
	  //                   the passed paramter and the result using for e.g. Dword_to_Byte
	  // Library/Family:   LGF (Library General Functions)
	  // Author:           Siemens Digital Industry
	  // Tested with:      CPU1212C DC/DC/DC FW:V4.2
	  // Engineering:      TIA Portal V15.1
	  // Restrictions:     ENO not in use, set to true, no error handling
	  // Requirements:     PLC (S7-1200 / S7-1500)
	  //-------------------------------------------------------------------------------
	  // Change log table:
	  // Version  | Date       | Expert in charge         | Changes applied
	  // 01.00.00 | 06.06.2015 | Siemens Industry Support | first release
	  // 03.00.00 | 23.04.2020 | Siemens Industry Support | Set version to V3.0.0
	  //                         harmonize the version of the whole library
	  // 03.00.01 | 19.01.2021 | Simatic Systems Support
	  //                         Insert documentation
	  //===============================================================================
	END_REGION
	
	REGION Logic
	  // set the bit in tag
	  // shift one true bit into given position
	  // concatenate value then with OR will result in the previous value and the set bit in position
	  #LGF_BitSet := #value OR SHL(IN := #TRUE_BOOL_BIT, N := (#bitNo MOD #MAX_NO_OF_BITS));
	  
	  // no error handling needed
	  ENO := TRUE;
	END_REGION
	
END_FUNCTION

FUNCTION "LGF_BitSetTo" : DWord
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : Siemens_SIMATIC_Systems_Support
FAMILY : LGF
NAME : LGF_BitSetTo
   VAR_INPUT 
      value : DWord;
      bitNo : USInt;
      setTo : Bool;
   END_VAR

   VAR CONSTANT 
      BINARY_ONES : DWord := 16#FFFFFFFF;
      TRUE_BOOL_BIT : DWord := 16#0001;
      MAX_NO_OF_BITS : USInt := 32;
   END_VAR


BEGIN
	REGION BLOCK INFO HEADER
	  //===============================================================================
	  // SIEMENS AG / (c)Copyright 2019
	  //-------------------------------------------------------------------------------
	  // Title:            LGF_BitSetTo
	  // Comment/Function: Set bit in elemtary datatype DWord to FALSE or TRUE,
	  //                   along to the given value in "setTo" parameter
	  //                   can be used for Word and Byte as well, by convert
	  //                   the passed paramter and the result using for e.g. Dword_to_Byte
	  // Library/Family:   LGF (Library General Functions)
	  // Author:           Siemens Digital Industry
	  // Tested with:      CPU1212C DC/DC/DC FW:V4.2
	  // Engineering:      TIA Portal V15.1
	  // Restrictions:     ENO not in use, set to true, no error handling
	  // Requirements:     PLC (S7-1200 / S7-1500)
	  //-------------------------------------------------------------------------------
	  // Change log table:
	  // Version  | Date       | Expert in charge         | Changes applied
	  // 01.00.00 | 06.06.2015 | Siemens Industry Support | first release
	  // 03.00.00 | 23.04.2020 | Siemens Industry Support | Set version to V3.0.0
	  //                         harmonize the version of the whole library
	  // 03.00.01 | 19.01.2021 | Simatic Systems Support
	  //                         Insert documentation
	  //===============================================================================
	END_REGION
	
	REGION logic
	  // check th value we wont TO use - TRUE / FALSE
	  IF #setTo THEN
	    // set the bit in tag
	    // shift one true bit into given position
	    // concatenate value then with OR will result in the previous value and the set bit in position
	    #LGF_BitSetTo := #value OR SHL(IN := #TRUE_BOOL_BIT, N := (#bitNo MOD #MAX_NO_OF_BITS));
	  ELSE
	    // reset the bit in tag
	    // shift one true bit into given position
	    // concatenate value then with XOR and biary ones
	    // using this result with AND and value will result in the previous value and the reseted bit in position
	    #LGF_BitSetTo := #value AND (#BINARY_ONES XOR SHL(IN := #TRUE_BOOL_BIT, N := (#bitNo MOD #MAX_NO_OF_BITS)));
	  END_IF;
	END_REGION
END_FUNCTION

FUNCTION "LGF_BitTest" : Bool
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : Siemens_SIMATIC_Systems_Support
FAMILY : LGF
NAME : LGF_BitTest
   VAR_INPUT 
      value : DWord;
      bitNo : USInt;
   END_VAR

   VAR CONSTANT 
      BINARY_ZERO : DWord := 16#0000;
      TRUE_BOOL_BIT : DWord := 16#0001;
      MAX_NO_OF_BITS : USInt := 32;
   END_VAR


BEGIN
	REGION BLOCK INFO HEADER
	  //===============================================================================
	  // SIEMENS AG / (c)Copyright 2019
	  //-------------------------------------------------------------------------------
	  // Title:            LGF_BitTest
	  // Comment/Function: Test bit in DWord if it is 1 or 0 respectively
	  //                   returning TRUE or FALSE
	  //                   can be used for Word and Byte as well, by convert
	  //                   the passed paramter and the result using for e.g. Dword_to_Byte
	  // Library/Family:   LGF (Library General Functions)
	  // Author:           Siemens Digital Industry
	  // Tested with:      CPU1212C DC/DC/DC FW:V4.2
	  // Engineering:      TIA Portal V15.1
	  // Restrictions:     ENO not in use, set to true, no error handling
	  // Requirements:     PLC (S7-1200 / S7-1500)
	  //-------------------------------------------------------------------------------
	  // Change log table:
	  // Version  | Date       | Expert in charge         | Changes applied
	  // 01.00.00 | 06.06.2015 | Siemens Industry Support | first release
	  // 03.00.00 | 23.04.2020 | Siemens Industry Support | Set version to V3.0.0
	  //                         harmonize the version of the whole library
	  // 03.00.01 | 19.01.2021 | Simatic Systems Support
	  //                         Insert documentation
	  //===============================================================================
	END_REGION
	
	REGION Logic
	  // test the bit in tag
	  // shift one true bit into the selected position
	  // compare with input value with "AND" logic and check if different to zero
	  // result is true if bit is true, otherwise it is false
	  #LGF_BitTest := (#BINARY_ZERO <> (#value AND SHL(IN := #TRUE_BOOL_BIT, N := (#bitNo MOD #MAX_NO_OF_BITS))));
	  
	  // no error handling needed
	  ENO := TRUE;
	END_REGION
	
END_FUNCTION

FUNCTION "LGF_BitToggle" : DWord
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : Siemens_SIMATIC_Systems_Support
FAMILY : LGF
NAME : LGF_BitToggle
   VAR_INPUT 
      value : DWord;
      bitNo : USInt;
   END_VAR

   VAR CONSTANT 
      TRUE_BOOL_BIT : DWord := 16#0001;
      MAX_NO_OF_BITS : USInt := 32;
   END_VAR


BEGIN
	REGION BLOCK INFO HEADER
	  //===============================================================================
	  // SIEMENS AG / (c)Copyright 2019
	  //-------------------------------------------------------------------------------
	  // Title:            LGF_BitToggle
	  // Comment/Function: Toggle bit in elementary datatype - DWord
	  //                   can be used for Word and Byte as well, by convert
	  //                   the passed paramter and the result using for e.g. Dword_to_Byte
	  // Library/Family:   LGF (Library General Functions)
	  // Author:           Siemens Digital Industry
	  // Tested with:      CPU1212C DC/DC/DC FW:V4.2
	  // Engineering:      TIA Portal V15.1
	  // Restrictions:     ENO not in use, set to true, no error handling
	  // Requirements:     PLC (S7-1200 / S7-1500)
	  //-------------------------------------------------------------------------------
	  // Change log table:
	  // Version  | Date       | Expert in charge         | Changes applied
	  // 01.00.00 | 06.06.2015 | Siemens Industry Support | first release
	  // 03.00.00 | 23.04.2020 | Siemens Industry Support | Set version to V3.0.0
	  //                         harmonize the version of the whole library
	  // 03.00.01 | 19.01.2021 | Simatic Systems Support
	  //                         Insert documentation
	  //===============================================================================
	END_REGION
	
	REGION Logic
	  // toggle the bit in tag
	  // shift one true bit into given position
	  // concatenate value then with XOR resets the bit on the given position
	  #LGF_BitToggle := #value XOR SHL(IN := #TRUE_BOOL_BIT, N := (#bitNo MOD #MAX_NO_OF_BITS));
	  
	  // no error handling needed
	  ENO := TRUE;
	END_REGION
	
END_FUNCTION

FUNCTION_BLOCK "LGF_IecTimerOnOff"
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : 'Siemens Industry Support'
FAMILY : LGF
NAME : LGF_IecTimerOnOff
   VAR_INPUT 
      in : Bool;
      timeOnDelay : Time;
      timeOffDelay : Time;
   END_VAR

   VAR_OUTPUT 
      out { ExternalWritable := 'False'} : Bool;
   END_VAR

   VAR 
      instOnDelay {InstructionName := 'IEC_TIMER'; LibVersion := '1.0'; ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'; S7_SetPoint := 'False'} : IEC_TIMER;
      instOffDelay {InstructionName := 'IEC_TIMER'; LibVersion := '1.0'; ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'; S7_SetPoint := 'False'} : IEC_TIMER;
   END_VAR


BEGIN
	REGION BLOCK INFO HEADER
	  //===============================================================================
	  // SIEMENS AG / (c)Copyright 2019
	  //-------------------------------------------------------------------------------
	  // Title:            LGF_IecTimerOnOff
	  // Comment/Function: The Block implements an IEC_Timer TON and TOF
	  // Library/Family:   LGF (Library General Functions)
	  // Author:           Siemens Digital Industry
	  // Tested with:      CPU1212C DC/DC/DC FW:V4.2
	  // Engineering:      TIA Portal V17
	  // Restrictions:     ENO not in use, set to true, no error handling
	  // Requirements:     PLC (S7-1200 / S7-1500)
	  //-------------------------------------------------------------------------------
	  // Change log table:
	  // Version  | Date       | Expert in charge         | Changes applied
	  //----------|------------|--------------------------|-----------------------------
	  // 01.00.00 | 2022-05-01 | Siemens Industry Support | First released version
	  //===============================================================================
	END_REGION
	
	REGION DESCRIPTION
	(/**/)
	END_REGION DESCRIPTION
	
	REGION PROGRAM LOGIC
	  #instOnDelay.TON(IN := #in,
	               PT := #timeOnDelay);
	  
	  #instOffDelay.TOF(IN := #instOnDelay.Q,
	                PT := #timeOffDelay);
	  
	  #out := #instOffDelay.Q;
	  // no error handling needed
	  ENO := TRUE;
	END_REGION PROGRAM LOGIC
	
END_FUNCTION_BLOCK

FUNCTION_BLOCK "LGF_PulseRelay"
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : Siemens_Digital_Industry
FAMILY : LGF
NAME : LGF_PulseRelay
   VAR_INPUT 
      trigger : Bool;
      set : Bool;
      reset : Bool;
   END_VAR

   VAR_OUTPUT 
      out { ExternalWritable := 'False'} : Bool;
   END_VAR

   VAR 
      statTriggerOld { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Bool := false;
      statSetOld { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Bool := false;
      statResetOld { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Bool := false;
      statOut { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Bool := false;
   END_VAR


BEGIN
	REGION BLOCK INFO HEADER
	  //===============================================================================
	  // SIEMENS AG / (c)Copyright 2019
	  //-------------------------------------------------------------------------------
	  // Title:            LGF_PulseRelay
	  // Comment/Function: Pulse relay, Surge relay, Toggle-Flip-Flop, Frequency divider
	  //                   Reset is leading / prior to Set or Trigger
	  // Library/Family:   LGF (Library General Functions)
	  // Author:           Siemens Digital Industry
	  // Tested with:      CPU1212C DC/DC/DC FW:V4.2
	  // Engineering:      TIA Portal V15.1
	  // Restrictions:     ENO not in use, set to true, no error handling
	  // Requirements:     PLC (S7-1200 / S7-1500)
	  //-------------------------------------------------------------------------------
	  // Change log table:
	  // Version  | Date       | Expert in charge       | Changes applied
	  // 01.00.00 06.06.2015 Siemens Industry Online Support
	  //                     First released version
	  // 01.00.01 02.01.2017 Siemens Industry Online Support
	  //                     Upgrade: TIA V14 Update 1
	  // 01.00.02 02.01.2017 Siemens Industry Online Support
	  //                     Comment correction                  
	  // 01.00.03 17.08.2018 Siemens Industry Online Support
	  //                     Upgrade: TIA V15 Update 2
	  // 01.00.04 23.11.2018 Siemens Industry Online Support
	  //                     Upgrade: TIA V15.1
	  // 01.00.05 24.05.2019 Simatic Systems Support
	  //                     Refactoring and performance improvement
	  //                     add ENO handling
	  // 03.00.00 23.04.2020 Simatic Systems Support
	  //                     Set version to V3.0.0, harmonize the version of the whole library
	  // 03.00.01 19.01.2021 Simatic Systems Support
	  //                     Insert documentation
	  //===============================================================================
	END_REGION
	
	REGION DESCRIPTION
	  (/**/)
	END_REGION DESCRIPTION
	
	REGION PROGRAM LOGIC
	  REGION toggle output
	    // Scan for rising edge "trigger"  - toggle static Output
	    IF #trigger AND NOT #statTriggerOld THEN
	      // toggle static output memory
	      #statOut := NOT #statOut;
	    END_IF;
	    // store trigger input for edge dedection
	    #statTriggerOld := #trigger;
	  END_REGION
	  
	  REGION set output
	    // Scan for rising edge "set" - static Output: set
	    IF #set AND NOT #statSetOld THEN
	      // set static output memory
	      #statOut := TRUE;
	    END_IF;
	    // store set input for edge dedection
	    #statSetOld := #set;
	  END_REGION
	  
	  REGION reset output    
	    // Scan for rising edge "reset" - static Output: reset
	    IF #reset AND NOT #statResetOld THEN
	      // store trigger input for edge dedection
	      #statOut := FALSE;
	    END_IF;
	    // store reset input for edge dedection
	    #statResetOld := #reset;
	  END_REGION
	END_REGION
	
	REGION OUTPUTS
	  // write the Output value
	  #out := #statOut;
	  // no error handling needed
	  ENO := TRUE;
	END_REGION
	
END_FUNCTION_BLOCK


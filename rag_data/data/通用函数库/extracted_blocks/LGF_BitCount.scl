FUNCTION "LGF_BitCount" : Void
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : SiemensSIMATICSystemsSupport
FAMILY : LGF
NAME : LGF_BitCount
   VAR_INPUT 
      value : DWord;
      numberOfBits : USInt;
   END_VAR

   VAR_OUTPUT 
      countBitsFalse : USInt;
      countBitsTrue : USInt;
   END_VAR

   VAR_TEMP 
      tempBinaryValues : DWord;
      tempLoopIndex : DInt;
      tempCountBitsTrue : USInt;
      tempCountBitsFalse : USInt;
   END_VAR

   VAR CONSTANT 
      ZERO : USInt := 0;
      INCREMENT : USInt := 1;
      SHIFT_ON_BIT_RIGHT : USInt := 1;
      START_INDEX : DInt := 1;
   END_VAR


BEGIN
	REGION BLOCK INFO HEADER
	  //===============================================================================
	  // SIEMENS AG / (c)Copyright 2019
	  //-------------------------------------------------------------------------------
	  // Title:            LGF_BitCount
	  // Comment/Function: Count bits in elementary datatype - DWord
	  //                   count the set (TRUE) and not set (FALSE) bits in a binary datatype 
	  //                   can be used for Word and Byte as well, by convert
	  //                   the past paramter and the result using for e.g. Dword_to_Byte
	  //                   "numberOfBits" number of bits in input tag "value",
	  //                   in case of Byte=8, Word=16, Dword=32
	  // Library/Family:   LGF (Library General Functions)
	  // Author:           Siemens Digital Industry
	  // Tested with:      CPU1212C DC/DC/DC FW:V4.2
	  // Engineering:      TIA Portal V15.1
	  // Restrictions:     ENO not in use, set to true, no error handling
	  // Requirements:     PLC (S7-1200 / S7-1500)
	  //-------------------------------------------------------------------------------
	  // Change log table:
	  // Version  | Date       | Expert in charge         | Changes applied
	  // 01.00.00 | 06.06.2015 | Siemens Industry Support | first release
	  // 03.00.00 | 23.04.2020 | Siemens Industry Support | Set version to V3.0.0
	  //                         harmonize the version of the whole library
	  // 03.00.02 | 19.01.2021 | Simatic Systems Support
	  //                         Insert documentation
	  //===============================================================================
	END_REGION
	
	REGION Logic
	  // init counter tags
	  #tempCountBitsFalse := #ZERO;
	  #tempCountBitsTrue := #ZERO;
	  #tempBinaryValues := #value;
	  
	  // iterate over input tag
	  FOR #tempLoopIndex := #START_INDEX TO USINT_TO_DINT(#numberOfBits) DO
	    // check if bit is true or false
	    IF #tempBinaryValues.%X0 THEN
	      #tempCountBitsTrue += #INCREMENT;
	    ELSE
	      #tempCountBitsFalse += #INCREMENT;
	    END_IF;
	    
	    // shift input tag one to the right
	    #tempBinaryValues := SHR(IN := #tempBinaryValues, N := #SHIFT_ON_BIT_RIGHT);
	  END_FOR;
	  
	  // set output values
	  #countBitsFalse := #tempCountBitsFalse;
	  #countBitsTrue := #tempCountBitsTrue;
	  
	  // no error handling needed
	  ENO := TRUE;
	END_REGION
	
END_FUNCTION
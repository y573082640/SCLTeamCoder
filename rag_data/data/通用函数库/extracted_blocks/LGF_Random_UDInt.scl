FUNCTION "LGF_Random_UDInt" : UDInt
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : Siemens_Digital_Industries
FAMILY : LGF
NAME : LGF_Random_UDInt
   VAR_OUTPUT 
      error : Bool;
      status : Word;
      subfunctionStatus : Word;
   END_VAR

   VAR_TEMP 
      tempTime {InstructionName := 'DTL'; LibVersion := '1.0'} : DTL;
      tempNanoSecondInDWord : DWord;
      tempTimeStatus : Word;
      tempRandomValue : DWord;
   END_VAR

   VAR CONSTANT 
      ZERO : UDInt := 0;
      SUB_STATUS_NO_ERROR : Word := 16#0000;
      STATUS_FINISHED_NO_ERROR : Word := 16#0000;
      ERR_RD_SYS_T : Word := 16#8600;
   END_VAR


BEGIN
	REGION Block info header
	  //=============================================================================
	  // SIEMENS AG / (c)Copyright 2019
	  //-----------------------------------------------------------------------------
	  // Title:            LGF_Random_UDInt
	  // Comment/Function: Generates a random number in the UDInt Range
	  // Library/Family:   LGF(Library General Functions)
	  // Author:           Siemens Digital Industry Support
	  // Tested with:      S7-PLCSIM Advanced V2.0 SP1
	  // Engineering:      TIA Portal V15 Update 2
	  // Restrictions:     ENO disabled - error handling done by error and status
	  // Requirements:     PLC (S7-1200 / S7-1500)
	  //-------------------------------------------------------------------------------
	  // Change log table:
	  // Version  | Date       | Expert in charge       | Changes applied
	  //----------|------------|------------------------|------------------------------
	  // 01.00.00 11.12.2019  Simatic Systems Support
	  //                      First release
	  //                      copied from "LGF_Random_Real"
	  // 03.00.00 23.04.2020  Simatic Systems Support
	  //                      Set version to V3.0.0, harmonize the version of the whole library
	  // 03.00.01 04.02.2021  Simatic Systems Support
	  //                      Insert documentation
	  //=============================================================================
	END_REGION Block info header
	
	REGION DESCRIPTION
	  (/**/)
	END_REGION DESCRIPTION
	
	REGION Validation
	  // Read system time
	  #tempTimeStatus := INT_TO_WORD(RD_SYS_T(#tempTime));
	  
	  // Check return variable for error
	  IF (#tempTimeStatus <> #SUB_STATUS_NO_ERROR) THEN
	    #error := true;
	    #status := #ERR_RD_SYS_T;
	    #subfunctionStatus := #tempTimeStatus;
	    #LGF_Random_UDInt := #ZERO;
	    RETURN;
	  END_IF;
	END_REGION
	
	REGION Calculating random number
	  // Converting to double word so individual bytes can be addressed
	  #tempNanoSecondInDWord := UDINT_TO_DWORD(#tempTime.NANOSECOND);
	  
	  // Calculate a random-start-value depending on the time
	  #tempRandomValue.%B3 := #tempNanoSecondInDWord.%B0;
	  #tempRandomValue.%B2 := #tempNanoSecondInDWord.%B1;
	  #tempRandomValue.%B1 := #tempNanoSecondInDWord.%B2;
	  #tempRandomValue.%B0 := #tempNanoSecondInDWord.%B3;
	  
	  #LGF_Random_UDInt := DWORD_TO_UDINT(#tempRandomValue);
	  
	  #error := false;
	  #status := #STATUS_FINISHED_NO_ERROR;
	  #subfunctionStatus := #SUB_STATUS_NO_ERROR;
	  // ENO mechanism is not used
	  ENO := TRUE;
	END_REGION
	
END_FUNCTION
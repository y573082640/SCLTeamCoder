FUNCTION "LGF_BitSetTo" : DWord
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : Siemens_SIMATIC_Systems_Support
FAMILY : LGF
NAME : LGF_BitSetTo
   VAR_INPUT 
      value : DWord;
      bitNo : USInt;
      setTo : Bool;
   END_VAR

   VAR CONSTANT 
      BINARY_ONES : DWord := 16#FFFFFFFF;
      TRUE_BOOL_BIT : DWord := 16#0001;
      MAX_NO_OF_BITS : USInt := 32;
   END_VAR


BEGIN
	REGION BLOCK INFO HEADER
	  //===============================================================================
	  // SIEMENS AG / (c)Copyright 2019
	  //-------------------------------------------------------------------------------
	  // Title:            LGF_BitSetTo
	  // Comment/Function: Set bit in elemtary datatype DWord to FALSE or TRUE,
	  //                   along to the given value in "setTo" parameter
	  //                   can be used for Word and Byte as well, by convert
	  //                   the passed paramter and the result using for e.g. Dword_to_Byte
	  // Library/Family:   LGF (Library General Functions)
	  // Author:           Siemens Digital Industry
	  // Tested with:      CPU1212C DC/DC/DC FW:V4.2
	  // Engineering:      TIA Portal V15.1
	  // Restrictions:     ENO not in use, set to true, no error handling
	  // Requirements:     PLC (S7-1200 / S7-1500)
	  //-------------------------------------------------------------------------------
	  //===============================================================================
	END_REGION
	
	REGION logic
	  // check th value we wont TO use - TRUE / FALSE
	  IF #setTo THEN
	    // set the bit in tag
	    // shift one true bit into given position
	    // concatenate value then with OR will result in the previous value and the set bit in position
	    #LGF_BitSetTo := #value OR SHL(IN := #TRUE_BOOL_BIT, N := (#bitNo MOD #MAX_NO_OF_BITS));
	  ELSE
	    // reset the bit in tag
	    // shift one true bit into given position
	    // concatenate value then with XOR and biary ones
	    // using this result with AND and value will result in the previous value and the reseted bit in position
	    #LGF_BitSetTo := #value AND (#BINARY_ONES XOR SHL(IN := #TRUE_BOOL_BIT, N := (#bitNo MOD #MAX_NO_OF_BITS)));
	  END_IF;
	END_REGION
END_FUNCTION
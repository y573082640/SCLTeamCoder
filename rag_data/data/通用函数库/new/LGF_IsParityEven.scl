FUNCTION "LGF_IsParityEven" : Bool
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : Siemens_SIMATIC_Systems_Support
FAMILY : LGF
NAME : LGF_IsParityEven
   VAR_INPUT 
      doubleWord : DWord;
   END_VAR

   VAR_TEMP 
      tempDword : DWord;
   END_VAR

   VAR CONSTANT 
      SHIFT_ONE_BIT : USInt := 1;
      SHIFT_TWO_BIT : USInt := 2;
      SHIFT_TO_RESULT : USInt := 28;
      MASK_FOR_RESULT : DWord := 16#11111111;
   END_VAR


BEGIN
	REGION Block info header
	  //============================================================================
	  // SIEMENS AG / (c)Copyright 2018
	  //----------------------------------------------------------------------------
	  // Title:            LGF_IsParityEven
	  // Comment/Function: check if parity in input tag is even
	  //                   if number of bits is even, return TRUE
	  //                   https://graphics.stanford.edu/~seander/bithacks.html#ParityMultiply
	  // Library/Family:   LGF (Library General Functions)
	  // Author:           Siemens Digital Industry Support
	  // Tested with:      S7-PLCSIM Advanced V2.0 SP1
	  // Engineering:      TIA Portal V15 Update 2
	  // Restrictions:     ENO not needed, no error possible
	  // Requirements:     PLC (S7-1200 / S7-1500)
	  //-------------------------------------------------------------------------------
	  //=============================================================================
	END_REGION Block info header
	
	REGION DESCRIPTION
	  (/**/)
	END_REGION DESCRIPTION
	
	REGION Logic
	  #tempDword := #doubleWord; // 32-bit word
	  #tempDword := #tempDword XOR SHR(IN := #tempDword, N := #SHIFT_ONE_BIT);
	  #tempDword := #tempDword XOR SHR(IN := #tempDword, N := #SHIFT_TWO_BIT);
	  #tempDword := UDINT_TO_DWORD(DWORD_TO_UDINT(#tempDword AND #MASK_FOR_RESULT) * DWORD_TO_UDINT(#MASK_FOR_RESULT));
	  
	  #tempDword := SHR(IN := #tempDword, N := #SHIFT_TO_RESULT);
	  
	  // result is stored in LSB
	  #LGF_IsParityEven := NOT #tempDword.%X0;
	  
	  // ENO not needed, no error possible
	  ENO := FALSE;
	END_REGION
	
END_FUNCTION
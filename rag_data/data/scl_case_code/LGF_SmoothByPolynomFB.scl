FUNCTION_BLOCK "LGF_SmoothByPolynomFB"
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : Siemens_Digital_Industry
FAMILY : LGF
NAME : LGF_SmoothByPolynomFB
   VAR_INPUT 
      enable : Bool;
      insert : Bool;
      value : LReal;
   END_VAR

   VAR_OUTPUT 
      smoothedValue { ExternalWritable := 'False'} : LReal;
      error { ExternalWritable := 'False'} : Bool;
      status { ExternalWritable := 'False'} : Word := #STATUS_NO_CALL;
   END_VAR

   VAR 
      statValues { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Array[0..#MINIMUM_NUMBER_OF_VALUES] of LReal;
      statCount { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Int := 0;
      statSmoothedValue { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : LReal;
      statStatus { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Word;
      statEnableOld { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Bool := false;
      statInsertOld { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Bool := false;
   END_VAR

   VAR CONSTANT 
      ZERO_REAL : Real := 0.0;
      MINIMUM_NUMBER_OF_VALUES : UDInt := 4;
      INCREMENT_VALUE : Int := 1;
      STATUS_NO_CALL : Word := 16#7000;
      STATUS_FIRST_CALL : Word := 16#7001;
      STATUS_SUBSEQUENT_CALL : Word := 16#7002;
      STATUS_NOT_ENOUGH_VALUES : Word := 16#7010;
   END_VAR


BEGIN
	REGION Block info header
	  //============================================================================
	  // SIEMENS AG / (c)Copyright 2018
	  //----------------------------------------------------------------------------
	  // Title:            LGF_SmoothByPolynomFB
	  // Comment/Function: Calculates smoothed values by placing 3rd degree polynomial
	  //                   through five value points.
	  // Library/Family:   LGF(Library General Functions)
	  // Author:           Siemens Digital Industry Support
	  // Tested with:      S7-PLCSIM Advanced V2.0 SP1
	  // Engineering:      TIA Portal V15 Update 2
	  // Restrictions:     ENO disabled, forced to true - error handling done by error and status
	  // Requirements:     PLC (S7-1200 / S7-1500)
	  //-------------------------------------------------------------------------------
	  //=============================================================================
	END_REGION Block info header
	
	REGION DESCRIPTION
	  (/**/)
	END_REGION DESCRIPTION
	
	REGION Check function block call
	  // Check if FB is triggered - rising edge on enable
	  IF #enable AND NOT #statEnableOld THEN
	    // Reset static values
	    #statCount := 0;
	    #statValues[0] := #ZERO_REAL;
	    #statValues[1] := #ZERO_REAL;
	    #statValues[2] := #ZERO_REAL;
	    #statValues[3] := #ZERO_REAL;
	    #statValues[4] := #ZERO_REAL;
	    
	    // Set status for first call
	    #statStatus := #STATUS_FIRST_CALL;
	    
	    // Enabled after edge trigger
	  ELSIF #enable AND #statEnableOld THEN
	    REGION Values inserting and smoothing calculation
	      // Positive edge of insert detected 
	      IF #insert AND NOT #statInsertOld THEN
	        
	        // Copy new value
	        #statValues[0] := #statValues[1]; // -> n-2
	        #statValues[1] := #statValues[2]; // -> n-1
	        #statValues[2] := #statValues[3]; // -> n
	        #statValues[3] := #statValues[4]; // -> n+1
	        #statValues[4] := #value;         // -> n+2
	        
	        // Check if the minimum needed insered values is reached
	        // Increase the count of added values
	        IF #statCount <= #MINIMUM_NUMBER_OF_VALUES THEN
	          #statCount += #INCREMENT_VALUE;
	          #statStatus := #STATUS_NOT_ENOUGH_VALUES;
	        ELSE
	          // Calculate new smoothed value // keep the "Magic Numbers" as they are part of the Math equation and would extent the formular in a unreadable way
	          // y(n)=1/35*(-3*y(n-2)+12*y(n-1)+17*y(n)+12*y(n+1)-3*y(n+2))
	          // 1/35 = 0.028571
	          #statSmoothedValue := 0.028571 * (-3 * #statValues[0] + 12 * #statValues[1] + 17 * #statValues[2] + 12 * #statValues[3] - 3 * #statValues[4]);
	          #statStatus := #STATUS_SUBSEQUENT_CALL;
	        END_IF;
	      END_IF;
	    END_REGION
	  ELSE
	    #statStatus := #STATUS_NO_CALL;
	    #statSmoothedValue := #ZERO_REAL;
	  END_IF;
	  
	  // Store previous values for edge dedection
	  #statEnableOld := #enable;
	  #statInsertOld := #insert;
	END_REGION
	
	REGION Writting to outputs
	  #error := #statStatus.%X15;
	  #status := #statStatus;
	  #smoothedValue := #statSmoothedValue;
	  
	  // ENO mechanism is not used - forced to true.
	  ENO := TRUE;
	END_REGION
	
END_FUNCTION_BLOCK
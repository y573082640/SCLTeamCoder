{
    "title": "DWord Endianness Adjuster",
    "name": "LGF_SwapBlockDWord",
    "description": "Adjusts/switches the endianness of multibyte data typed values.",
    "type": "FUNCTION",
    "input": [],
    "output": [],
    "in/out": [
        {
            "name": "data",
            "type": "Array[*] of DWord",
            "description": "Contains the data values, which will be endianness adjusted"
        }
    ],
    "return_value": [
        {
            "type": "Void",
            "description": "Void - Function has no return value"
        }
    ],
    "status_codes": {},
    "user_defined_types": [],
    "description_zh": "\n一个函数FC，该函数用于调整多字节数据类型值的字节序。函数接收一个DWord类型的数组作为输入，并对数组中的每个DWord元素进行字节序的调整。调整的过程是将每个DWord的高字节和低字节进行交换。这个调整过程独立于原始系统和目标系统的字节序，因此可以在大端和小端系统中通用。\n\n函数逻辑如下：\n1. 获取数组的最低索引和最高索引，以便于迭代数组中的所有元素。\n2. 使用一个循环迭代数组中的每个元素。\n3. 对于每个元素，将其读入一个临时变量中。\n4. 将临时变量的高字节和低字节进行交换。\n5. 将交换后的值写回数组的对应位置。\n6. 迭代完成后，函数没有返回值。\n\n这个函数可以用于在不同字节序的系统之间传输和解析多字节数据值。\n\n\n"
}
{"title": "Shell Sort for LReal Arrays", "name": "LGF_ShellSort_LReal", "description": "This block sorts an array of type LReal with any number of elements (max. 1000) in ascending or descending order and returns the sorted version of the array in the same variable.", "type": "FUNCTION", "input": [{"name": "sortDirection", "type": "Bool", "description": "FALSE: Sort ascending; TRUE: Sort descending"}], "output": [{"name": "error", "type": "Bool", "description": "An error occurred during the execution of the FB"}, {"name": "status", "type": "Word", "description": "Status of the FB, Error identification"}], "in/out": [{"name": "array", "type": "Array[*] of LReal", "description": "Array to be sorted"}], "return_value": [], "status_codes": {"16#0000": "STATUS_NO_ERROR", "16#8200": "ERR_NO_ARRAY", "16#8201": "ERR_TOO_MANY_ELEMENTS"}, "user_defined_types": [], "description_zh": "\n该SCL函数块实现了对LReal类型数组的希尔排序算法，能够对任意数量的元素（最多1000个）进行升序或降序排序，并将排序后的数组保存在同一变量中。函数块接收一个布尔类型的输入参数sortDirection，用于指定排序方向：FALSE表示升序，TRUE表示降序。函数块的输出包括一个布尔类型的error变量，用于指示执行过程中是否发生错误，以及一个Word类型的status变量，用于提供状态信息和错误识别。函数块还有一个In/Out参数array，表示要排序的数组。\n\n函数块首先检查输入数组是否为空，或者元素数量是否超过最大限制（1000个），如果满足这些条件，则设置错误状态并返回。接下来，函数块将输入数组的元素复制到一个临时数组tempArray中，并进行希尔排序算法。排序过程中，根据sortDirection的值选择升序或降序排序。排序完成后，将排序后的元素写回输入数组array中，并设置状态为“无错误”。\n\n整个排序过程使用了希尔排序算法，该算法通过比较距离较远的元素来减少数据移动次数，从而提高排序效率。排序过程中，首先计算最大间隙大小，然后不断减小间隙，对数组进行排序，直到间隙大小小于等于一个预设的阈值。最后，将排序后的数组写回输入数组，完成排序操作。\n\n\n"}
{"title": "CRC-8 Calculator", "name": "LGF_CalcCRC8", "description": "The function LGF_CalcCRC8 uses 8 bits as the generator polynomial (mask) for CRC calculation.", "type": "FUNCTION", "input": [{"name": "initValue", "type": "Byte", "description": "Start value for the calculation"}, {"name": "mask", "type": "Byte", "description": "Generator polynomial for the calculation"}, {"name": "noOfElements", "type": "UInt", "description": "Number of elements to be used in CRC calculation"}], "output": [{"name": "error", "type": "Bool", "description": "Error flag"}, {"name": "status", "type": "Word", "description": "Status code"}], "in/out": [{"name": "array", "type": "Array[*] of Byte", "description": "Data stream for which the CRC value will be calculated"}], "return_value": [{"type": "Byte", "description": "Calculated CRC value"}], "status_codes": {"16#0000": "STATUS_NO_ERROR", "16#8400": "ERR_NO_OF_ELEMENTS"}, "user_defined_types": [], "description_zh": "\n函数 \"LGF_CalcCRC8\" 的主要功能是计算输入数据流的CRC-8校验值。它使用一个8位的生成多项式（掩码）来进行CRC计算。函数接受以下输入参数：initValue（Byte），表示计算的起始值；mask（Byte），表示生成多项式；noOfElements（UInt），表示要用于CRC计算的数据元素数量。函数的输出包括：error（Bool），表示错误标志；status（Word），表示状态码。此外，函数还有一个输入/输出参数array（Array[*] of Byte），表示要计算CRC值的数据流。\n\n函数首先检查输入参数noOfElements是否大于0，如果大于0，则进一步检查其是否小于等于输入数组array的大小。如果noOfElements大于数组大小，则设置错误标志和状态码，并返回当前计算的CRC值。如果noOfElements有效，则函数通过一个循环来计算CRC值，循环次数为noOfElements。在每次循环中，函数对数组中的一个字节和当前的CRC值进行异或操作，然后检查CRC值最高位是否为1。如果是，则将CRC值左移一位，并与掩码进行异或操作；如果不是，则只将CRC值左移一位。最后，函数返回计算出的CRC值，并设置状态码为STATUS_NO_ERROR，表示计算没有出错。\n\n\n\n"}
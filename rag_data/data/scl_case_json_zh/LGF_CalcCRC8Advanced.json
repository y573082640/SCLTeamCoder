{"title": "Advanced CRC-8 Calculator", "name": "LGF_CalcCRC8Advanced", "description": "The function uses 8 bits as the generator polynomial (mask) and additional parameters for CRC calculation.", "type": "FUNCTION", "input": [{"name": "initValue", "type": "Byte", "description": "Start value for the calculation"}, {"name": "mask", "type": "Byte", "description": "Generator polynomial for the calculation"}, {"name": "finalXorValue", "type": "Byte", "description": "Value for final XOR operation"}, {"name": "reflectInput", "type": "Bool", "description": "Mirror the bits within the input byte"}, {"name": "reflectResult", "type": "Bool", "description": "Mirror the order of the bits within the result"}, {"name": "noOfElements", "type": "UInt", "description": "Number of elements to be used in CRC calculation"}], "output": [{"name": "error", "type": "Bool", "description": "Error flag"}, {"name": "status", "type": "Word", "description": "Status code"}], "in/out": [{"name": "array", "type": "Array[*] of Byte", "description": "Data stream for which the CRC value will be calculated"}], "return_value": [{"type": "Byte", "description": "Calculated CRC value"}], "status_codes": {"16#0000": "STATUS_NO_ERROR", "16#8400": "ERR_NO_OF_ELEMENTS"}, "user_defined_types": [], "description_zh": "\n该函数实现了高级的CRC-8计算功能，使用8位生成多项式（掩码）和其他参数来进行CRC计算。\n\n函数接收以下输入参数：\n- initValue (Byte): 计算的起始值\n- mask (Byte): 计算使用的生成多项式\n- finalXorValue (Byte): 最终XOR操作的值\n- reflectInput (Bool): 控制是否对输入字节内的位进行镜像\n- reflectResult (Bool): 控制是否对结果内的位顺序进行镜像\n- noOfElements (UInt): 要用于CRC计算的元素数量\n\n函数的输出为：\n- error (Bool): 错误标志\n- status (Word): 状态码\n\n输入/输出参数为：\n- array (Array[*] of Byte): 要计算CRC值的数据流\n\n函数的返回值为：\n- item (Byte): 计算出的CRC值\n\n可能的状态码为：\n- 16#0000: STATUS_NO_ERROR，表示执行没有出错\n- 16#8400: ERR_NO_OF_ELEMENTS，表示元素数量不正确\n\n函数首先定义了初始值，并计算了输入数组的尺寸。然后，根据输入参数noOfElements的值，检查其是否大于零，如果大于零，则进一步检查是否适合数组大小。\n\n接下来，函数通过循环对数组中的每个元素进行CRC计算。在计算过程中，如果reflectInput参数为真，则会对输入字节内的位进行镜像。然后，函数使用XOR函数执行除法操作，对数组中相应的字节进行处理。\n\n在计算出CRC值后，如果reflectResult参数为真，则会对CRC校验和内的位顺序进行镜像。最后，函数将计算出的CRC值与finalXorValue进行XOR操作，并将结果作为函数的返回值。\n\n在函数的输出赋值部分，会根据是否进行了位镜像操作，将CRC值与finalXorValue进行XOR操作，然后将结果作为函数的返回值。同时，函数将状态码设置为STATUS_NO_ERROR，表示执行没有出错，并将错误标志设置为FALSE。\n\n\n"}
{"title": "Shift Register for Datatype Variant", "name": "LGF_ShiftRegister", "description": "The Function represents a shift register for any kind of Datatype (using variant). It is possible to shift the elements in the array at bufferRegister to the left or right.", "type": "FUNCTION_BLOCK", "input": [{"name": "shiftLeft", "type": "Bool", "description": "Rising edge: Elements in the array bufferRegister shifted left."}, {"name": "shiftRight", "type": "Bool", "description": "Rising edge: Elements in the array bufferRegister shifted right."}, {"name": "shiftRange", "type": "UInt", "description": "Number of places to be shifted in the bufferRegister input array"}, {"name": "clear", "type": "Bool", "description": "Clear buffer elements in bufferRegister with initalItem"}, {"name": "fill", "type": "Bool", "description": "Overwrite buffer elements after shift operation."}, {"name": "initialItem", "type": "Variant", "description": "Value with which the array at input bufferRegister is initialized."}], "output": [{"name": "error", "type": "Bool", "description": "An error occurred during the execution of the FB"}, {"name": "status", "type": "Word", "description": "Status of the FB, Error identification"}, {"name": "subFunctionStatus", "type": "Word", "description": "Status or return value of called FB's, FC's and system blocks"}], "in/out": [{"name": "bufferRegister", "type": "Variant", "description": "Buffer / Register memory as ARRAY, which keeps the data."}], "return_value": [], "status_codes": {"16#0000": "STATUS_NO_ERROR", "16#7000": "STATUS_NO_CURRENT_JOBS", "16#8200": "ERR_NO_ARRAY", "16#8201": "ERR_CLEARING_WITHOUT_INITIAL_ITEM", "16#8202": "ERR_FILL_WITHOUT_INITIAL_ITEM", "16#8203": "ERR_WRONG_TYPE_INITIAL_ITEM", "16#8401": "ERR_MORE_THAN_ONE_COMMAND", "16#8402": "ERR_IN_SHIFT_RANGE", "16#8610": "ERR_CLEAR_BUFFER", "16#8611": "ERR_SHIFT_BUFFER_LEFT", "16#8612": "ERR_SHIFT_BUFFER_LEFT_FILL", "16#8622": "ERR_SHIFT_BUFFER_RIGHT_FILL"}, "user_defined_types": [], "description_zh": "\n该函数块FB实现了一个可变数据类型Variant的移位寄存器功能。它可以对输入数组bufferRegister中的元素进行左移或右移操作。此外，还可以选择清除缓冲区中的元素并用initialItem初始化，或者在移位操作后用initialItem填充缓冲区。\n\n函数块接受以下输入信号：\n- shiftLeft (Bool): 上升沿有效，将bufferRegister数组中的元素向左移。\n- shiftRight (Bool): 上升沿有效，将bufferRegister数组中的元素向右移。\n- shiftRange (UInt): 要移位的元素数量。\n- clear (Bool): 上升沿有效，清除bufferRegister中的元素并用initialItem初始化。\n- fill (Bool): 在移位操作后，用initialItem填充bufferRegister中的元素。\n- initialItem (Variant): 用于初始化或填充bufferRegister数组中的元素的值。\n\n函数块的输出信号包括：\n- error (Bool): 执行过程中是否发生错误。\n- status (Word): 函数块的状态，用于错误识别。\n- subFunctionStatus (Word): 被调用FB、FC和系统块的返回值或状态。\n\n函数块还包含一个输入/输出参数：\n- bufferRegister (Variant): 作为数组的缓冲区/寄存器内存，用于存储数据。\n\n函数块在执行时会检查输入信号的有效性，包括bufferRegister是否为数组类型，移位范围是否在有效范围内，以及是否存在initialItem等。如果输入信号无效，函数块将设置错误标志并返回错误状态。\n\n在移位操作中，函数块会根据shiftLeft和shiftRight信号选择左移或右移操作，并按照shiftRange指定的数量进行移位。如果fill信号有效，函数块还会在移位操作后用initialItem填充bufferRegister中的元素。\n\n最后，函数块将更新输出信号，并设置ENO为TRUE，表示没有错误发生。\n\n\n"}
{"title": "DWord to 4-Byte Splitter", "name": "LGF_SplitDWordToBytes", "description": "This function splits a DWord variable into 4 Byte variables.", "type": "FUNCTION", "input": [{"name": "doubleWord", "type": "DWord", "description": "Bit sequence to be split"}], "output": [{"name": "byte3", "type": "Byte", "description": "Output Byte 3 - MSB"}, {"name": "byte2", "type": "Byte", "description": "Output Byte 2"}, {"name": "byte1", "type": "Byte", "description": "Output Byte 1"}, {"name": "byte0", "type": "Byte", "description": "Output Byte 0 - LSB"}], "in/out": [], "return_value": [], "status_codes": {}, "user_defined_types": [], "description_zh": "下面是实现 \"DWord to 4-Byte Splitter\" 任务的SCL案例代码的中文自然语言描述：\n\n该函数 \"LGF_SplitDWordToBytes\" 的功能是将一个32位的DWord变量分割成4个独立的字节变量。输入参数 \"doubleWord\" 是一个DWord类型的变量，它将被分割。输出参数 \"byte3\" 到 \"byte0\" 分别代表分割后的最高有效字节到最低有效字节。\n\n在函数的执行部分，通过切片访问的方式，将DWord变量分割成四个字节。这种访问方式利用了SCL语言中对于位和字节级别的操作符，其中 \"%B3\" 到 \"%B0\" 分别表示DWord中的最高有效字节到最低有效字节。分割后的每个字节分别赋值给输出参数 \"byte3\" 到 \"byte0\"。\n\n由于这个函数的实现过程中没有涉及到可能出错的操作，因此不需要进行错误处理。函数最后设置ENO（Enable Output）为真，表示函数执行成功。"}
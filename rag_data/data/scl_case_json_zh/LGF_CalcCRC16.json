{"title": "CRC-16 Calculator", "name": "LGF_CalcCRC16", "description": "The function calculates the CRC value from a data stream for error detection at data transmission.", "type": "FUNCTION", "input": [{"name": "initValue", "type": "Word", "description": "Start value for the calculation"}, {"name": "mask", "type": "Word", "description": "Generator polynomial for the calculation"}, {"name": "noOfElements", "type": "UInt", "description": "Number of elements to be used in CRC calculation"}], "output": [{"name": "error", "type": "Bool", "description": "Error flag"}, {"name": "status", "type": "Word", "description": "Status code"}], "in/out": [{"name": "array", "type": "Array[*] of Byte", "description": "Data stream for which the CRC value will be calculated"}], "return_value": [{"type": "Word", "description": "Calculated CRC value"}], "status_codes": {"16#0000": "STATUS_NO_ERROR", "16#8400": "ERR_NO_OF_ELEMENTS"}, "user_defined_types": [], "description_zh": "\n该函数用于计算数据流中的CRC值，以便在数据传输中进行错误检测。函数接收初始值、掩码（生成多项式）和要用于CRC计算的数据元素数量作为输入。输出包括错误标志和状态码。函数的返回值是计算出的CRC值。\n\n函数首先定义了CRC计算的初始值，并计算输入数组的尺寸。如果指定的数据元素数量大于零，函数会检查这个数量是否适合数组的大小。如果不适合，函数将返回错误状态ERR_NO_OF_ELEMENTS。\n\n接下来，函数通过一个循环对数组中的每个元素进行CRC计算。对于数组中的每个字节，函数将其移位到CRC值的最左边，并使用XOR函数执行除法。然后，函数检查CRC值的最左边的位是否设置。如果是，函数将CRC值左移一位，并使用XOR函数和掩码执行除法；如果不是，函数仅将CRC值左移一位。循环结束后，函数返回计算出的CRC值，并将状态码设置为STATUS_NO_ERROR，表示没有错误发生。\n\n\n"}
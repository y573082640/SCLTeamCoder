{"title": "3D distance calculation between points", "name": "LGF_CalcDistance_3D", "description": "The function calculates the distance between two points in 3D space.", "type": "FUNCTION", "input": [{"name": "x1", "type": "LReal", "description": "X coordinate point 1"}, {"name": "y1", "type": "LReal", "description": "Y coordinate point 1"}, {"name": "z1", "type": "LReal", "description": "Z coordinate point 1"}, {"name": "x2", "type": "LReal", "description": "X coordinate point 2"}, {"name": "y2", "type": "LReal", "description": "Y coordinate point 2"}, {"name": "z2", "type": "LReal", "description": "Z coordinate point 2"}], "output": [], "in/out": [], "return_value": [{"type": "LReal", "description": "Calculated distance between the Points"}], "status_codes": {}, "user_defined_types": [], "description_zh": "这是一个函数FC，它计算三维空间中两点之间的距离。函数接收两个点的三维坐标作为输入，即每个点一个x、y和z坐标，所有坐标都是长实数类型（LReal）。计算的距离是两点之间的直线距离，这是通过使用欧几里得距离公式来计算的，即距离等于两点坐标差的平方和的平方根。函数的输出是计算出的距离，也是一个长实数类型（LReal）。\n\n输入参数：\n- x1: 第一个点的x坐标。\n- y1: 第一个点的y坐标。\n- z1: 第一个点的z坐标。\n- x2: 第二个点的x坐标。\n- y2: 第二个点的y坐标。\n- z2: 第二个点的z坐标。\n\n输出参数：\n- 函数返回值：计算出的两点之间的距离。\n\n计算过程：\n1. 计算两点在x、y和z轴上的坐标差。\n2. 将这些差的平方相加。\n3. 对总和开平方根得到距离。\n\n示例：\n假设第一个点的坐标为 (x1, y1, z1) = (1.0, 2.0, 3.0)，第二个点的坐标为 (x2, y2, z2) = (4.0, 6.0, 9.0)。\n函数计算出的距离将是：\nSQRT(SQR(4.0 - 1.0) + SQR(6.0 - 2.0) + SQR(9.0 - 3.0)) = SQRT(SQR(3.0) + SQR(4.0) + SQR(6.0)) = SQRT(9.0 + 16.0 + 36.0) = SQRT(61.0) ≈ 7.81\n\n因此，函数将返回大约7.81作为两点之间的距离。"}
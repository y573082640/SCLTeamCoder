{"title": "Simple Smoothing Function Block", "name": "LGF_SimpleSmoothingFB", "description": "The function calculates the linear mean value cyclically for smoothing a sequence of measured values.", "type": "FUNCTION_BLOCK", "input": [{"name": "enable", "type": "Bool", "description": "Activates the block."}, {"name": "insert", "type": "Bool", "description": "Accepts the value at the input `value` at positive edge and outputs a `smoothedValue` if three values have been read in."}, {"name": "value", "type": "LReal", "description": "Value that is to be included in the smoothing."}], "output": [{"name": "smoothedValue", "type": "LReal", "description": "The smoothed value."}, {"name": "error", "type": "Bool", "description": "FALSE: No error, TRUE: An error occurred during the execution of the FB"}, {"name": "status", "type": "Word", "description": "Status of the FB and error identification."}], "in/out": [], "return_value": [], "status_codes": {"16#7000": "STATUS_NO_CALL: The block waits for activation through the parameter `enable`.", "16#7001": "STATUS_FIRST_CALL: First call of FB after enabling", "16#7002": "STATUS_SUBSEQUENT_CALL: Processing is active. Subsequent call of FB.", "16#7010": "STATUS_NOT_ENOUGH_VALUES: The block requires three (3) values to calculate a smoothed value."}, "user_defined_types": [], "description_zh": "\n这个函数块FB的作用是计算输入值的线性平均值，以平滑一系列测量值。它的工作原理是循环地读取输入值，并在读取到三个值后输出一个平滑后的值。以下是对该FB的详细描述：\n\n输入:\n- enable (Bool): 激活该函数块。\n- insert (Bool): 在上升沿时接受输入`value`的值，并在读取三个值后输出`smoothedValue`。\n- value (LReal): 要包含在平滑计算中的值。\n\n输出:\n- smoothedValue (LReal): 平滑后的值。\n- error (Bool): 错误标志，FALSE表示没有错误，TRUE表示在执行FB时发生了错误。\n- status (Word): FB的状态和错误识别。\n\n状态代码:\n- 16#7000: STATUS_NO_CALL: FB等待通过参数`enable`激活。\n- 16#7001: STATUS_FIRST_CALL: 启用后第一次调用FB。\n- 16#7002: STATUS_SUBSEQUENT_CALL: 处理活动正在进行。后续调用FB。\n- 16#7010: STATUS_NOT_ENOUGH_VALUES: 该块需要三个（3）值来计算平滑值。\n\n当`enable`信号为TRUE时，函数块被激活。当`insert`信号的上升沿被检测到时，输入`value`的值被读取并存储在一个数组中。当读取到三个值后，计算这三个值的平均值，并将结果作为`smoothedValue`输出。如果读取的值不足三个，`status`将设置为`STATUS_NOT_ENOUGH_VALUES`。\n\n该函数块不使用ENO机制，而是通过`error`和`status`输出进行错误处理。\n\n这个FB的主要逻辑是：\n1. 检查是否启用了函数块。\n2. 检查是否插入了新值。\n3. 如果插入了新值，将其存储在数组中。\n4. 检查是否已经读取了足够的值来计算平滑值。\n5. 如果读取了足够的值，计算平均值并输出。\n6. 更新状态和错误输出。\n\n这个函数块可以用在需要对一系列测量值进行平滑处理的场合，以减少噪声和波动。\n\n\n"}
{"title": "Word Endianness Adjuster", "name": "LGF_SwapBlockWord", "description": "Adjusts/switches the endianness of multibyte data typed values.", "type": "FUNCTION", "input": [], "output": [], "in/out": [{"name": "data", "type": "Array[*] of Word", "description": "Contains the data values, which will be endianness adjusted"}], "return_value": [{"type": "Void", "description": "Void - Function has no return value"}], "status_codes": {}, "user_defined_types": [], "description_zh": "\n函数 \"LGF_SwapBlockWord\" 用于调整多字节数据类型值的字节序。该函数接收一个Word类型的数组作为输入，通过遍历数组中的每个元素，并交换这些元素的字节顺序，来实现字节序的调整。函数没有返回值，而是在输入数组上进行原地修改。\n\n在函数内部，首先获取数组的最低索引和最高索引，然后使用一个while循环遍历数组中的每个元素。对于每个元素，函数将其读入一个临时变量中，然后交换该变量的字节顺序，并将交换后的值写回数组中的原位置。\n\n这个函数不关心原始系统或目标系统的字节序，因此可以在任何系统中通用使用。通过这种方式，函数能够将大端字节序的数据转换为小端字节序，或者将小端字节序的数据转换为大端字节序。\n\n函数执行完成后，ENO（Enable Output）信号被设置为TRUE，表示函数执行没有错误。\n\n\n"}
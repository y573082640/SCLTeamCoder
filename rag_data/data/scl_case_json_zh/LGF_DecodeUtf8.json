{"title": "UTF-8 Byte Stream Decoder", "name": "LGF_DecodeUtf8", "description": "Decodes a UTF-8 encoded byte stream into a WString", "type": "FUNCTION", "input": [{"name": "byteStream", "type": "Array[*] of Byte", "description": "UTF-8 encoded byte stream"}, {"name": "startPos", "type": "DInt", "description": "Position in byte stream to start decoding from"}, {"name": "count", "type": "UInt", "description": "Number of character (not bytes) to decode; 0: byte stream is decoded until end"}], "output": [], "in/out": [{"name": "decodedString", "type": "WString", "description": "Decoded string"}], "return_value": [{"type": "Word", "description": "Status of the FC, Error identification"}], "status_codes": {"16#0000": "STATUS_NO_ERROR", "16#7FFD": "WARN_UNSUPPORTED_CHAR", "16#7FFE": "WARN_STREAM_EXCEEDS_MAX_LEN", "16#8201": "ERR_START_POS_OUTSIDE", "16#8202": "ERR_COUNT_EXCEEDS_BOUNDS", "16#8203": "ERR_COUNT_EXCEEDS_MAX_LEN"}, "user_defined_types": [], "description_zh": "\n该函数\"LGF_DecodeUtf8\"用于将UTF-8编码的字节流解码为宽字符串（WString）。函数接收三个输入参数：byteStream（字节流数组），startPos（开始解码的字节流中的位置），count（要解码的字符数，如果为0，则解码直到字节流结束）。函数的输出是通过decodedString（WString类型）返回的解码后的字符串。\n\n在函数内部，首先进行初始化，包括设置临时变量和检查输入参数的合法性。如果输入参数不合法，函数将返回相应的错误状态代码。\n\n接下来是程序逻辑部分，通过重复循环来逐个字符地解码字节流。循环中，首先检查已解码的字符串长度是否超过了decodedString的最大长度限制。如果超过了，函数将返回警告状态代码WARN_STREAM_EXCEEDS_MAX_LEN，并退出循环。\n\n然后，根据当前字节的最高位来判断字符是单字节编码还是多字节编码。对于单字节编码，直接将字节转换为字符并添加到临时字符串中。对于多字节编码，函数将根据字节的数量进行相应的移位和组合操作，以获取字符的真实编码值。如果字符编码值超过了WChar支持的范围，函数将返回替换字符（REPLACEMENT_CHAR）并设置警告状态代码WARN_UNSUPPORTED_CHAR。\n\n在循环结束后，函数将临时字符串赋值给输出参数decodedString，并根据解码过程中的状态返回相应的状态代码。如果解码过程中出现了错误，ENO（Enable Output）将被设置为false，表示输出不可用。\n\n函数的状态代码包括：STATUS_NO_ERROR（没有错误），WARN_UNSUPPORTED_CHAR（字符不支持，使用了替换字符），WARN_STREAM_EXCEEDS_MAX_LEN（字节流长度超过了最大限制），ERR_START_POS_OUTSIDE（开始位置超出了字节流界限），ERR_COUNT_EXCEEDS_BOUNDS（计数超出了字节流界限），ERR_COUNT_EXCEEDS_MAX_LEN（计数超出了最大长度限制）。\n\n\n"}
{"title": "Bit reset operation in DWORD", "name": "LGF_BitReset", "description": "This block resets a bit at a predefined position in a variable of the data type DWORD.", "type": "FUNCTION", "input": [{"name": "value", "type": "DWord", "description": "Tag where the bit has to be reset"}, {"name": "bitNo", "type": "USInt", "description": "Bit number to reset in \"value\" parameter"}], "output": [], "in/out": [], "return_value": [{"type": "DWord", "description": "Tag with reset bit"}], "status_codes": {}, "user_defined_types": [], "description_zh": "\n函数 \"LGF_BitReset\" 用于将 DWORD 类型的变量中指定位置的位重置。该函数接收两个输入参数：value (DWord) 表示需要重置位的变量，bitNo (USInt) 表示需要重置的位号。函数的返回值为 DWord 类型，表示重置位后的变量值。\n\n函数首先定义了三个常量：BINARY_ONES 表示一个 DWORD 类型的全 1 值，用于进行位操作；TRUE_BOOL_BIT 表示一个 DWORD 类型中最低位的值为 1，其余位为 0 的值；MAX_NO_OF_BITS 表示 DWORD 类型的最大位数，即 32 位。\n\n在函数的逻辑部分，首先通过模运算确保 bitNo 在有效范围内（0 到 31），然后使用左移操作将 TRUE_BOOL_BIT 中的 1 移动到指定的位号位置。接着，使用异或操作将 value 和移动后的 TRUE_BOOL_BIT 进行异或，这样可以使得指定位置的位变为 0，而其他位保持不变。最后，使用与操作将异或后的结果与原始的 value 进行与操作，这样就可以将指定位置的位重置为 0，而其他位保持不变。\n\n函数没有错误处理，ENO 信号始终设置为真。函数的返回值即为重置位后的 DWORD 值。\n\n\n"}
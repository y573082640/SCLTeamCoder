{"title": "Ramp Function Generator", "name": "LGF_RampCI", "description": "Generates a speed curve based on an interpolation point table with linear interpolation.", "type": "FUNCTION_BLOCK", "input": [{"name": "defaultOutValue", "type": "LReal", "description": "Value for pre-assignment of the output variable"}, {"name": "contStepNbr", "type": "Int", "description": "Number of the next interpolation point for continuing"}, {"name": "contStepTime", "type": "Time", "description": "Remaining time to continue to the interpolation point"}, {"name": "enDefaultOutValue", "type": "Bool", "description": "Assign default output value"}, {"name": "start", "type": "Bool", "description": "Run down the interpolation point table"}, {"name": "hold", "type": "Bool", "description": "Freeze/hold output at actual value"}, {"name": "continue", "type": "Bool", "description": "Continuing"}, {"name": "cyclicOP", "type": "Bool", "description": "Repeat interpolation point table cyclically"}, {"name": "updateTime", "type": "Bool", "description": "Update time values"}, {"name": "reset", "type": "Bool", "description": "Complete reset of function"}, {"name": "callOB", "type": "OB_CYCLIC", "description": "Calling wake-alarm interrupt OB"}], "output": [{"name": "outputValue", "type": "LReal", "description": "Output value"}, {"name": "actTimeTable", "type": "Bool", "description": "Interpolation point table will be edited"}, {"name": "stepNumber", "type": "Int", "description": "Current interpolation point number"}, {"name": "remainTime", "type": "Time", "description": "Remaining time until reaching the next interpolation point"}, {"name": "totalTime", "type": "Time", "description": "Total time for setpoint table"}, {"name": "remainTotalTime", "type": "Time", "description": "Total remaining time"}, {"name": "error", "type": "Bool", "description": "Error occurred during the execution of the FB"}, {"name": "status", "type": "Word", "description": "Status of the FB"}, {"name": "subfunctionStatus", "type": "Word", "description": "Status or return value of called FB's, FC's and system blocks"}], "in/out": [{"name": "setpoints", "type": "Array[*] of LGF_typeRampTimeTable", "description": "Interpolation point table."}], "return_value": [], "status_codes": {"16#0000": "STATUS_FINISHED_NO_ERROR", "16#7000": "STATUS_NO_CALL", "16#7001": "STATUS_FIRST_CALL", "16#7002": "STATUS_FURTHER_CALLS", "16#8200": "ERR_OB_UNAVAILABLE", "16#8201": "ERR_ARRAY_LOWER_BOUND", "16#8400": "ERR_QRY_CINT"}, "user_defined_types": [{"name": "LGF_typeRampTimeTable", "description": "Data type for setup a speed curve", "member": [{"name": "outputValue", "type": "LReal", "default": "0.0", "description": "Setpoint Value to reach by the interpolation curve"}, {"name": "time", "type": "Time", "default": "T#0s", "description": "Time until the interpolation point is reached"}]}], "description_zh": "\n该函数块FB_LGF_RampCI用于根据插值点表生成速度曲线，采用线性插值方法。它能够处理以下主要功能：\n1. 生成速度曲线：基于用户提供的插值点表，该函数块通过线性插值在各个点之间生成速度曲线。\n2. 控制输出：根据速度曲线计算输出值，并支持将输出值冻结在当前值。\n3. 继续操作：允许用户指定一个继续步骤和剩余时间，以便从特定的插值点继续执行速度曲线。\n4. 循环操作：支持循环执行插值点表，以便速度曲线可以重复。\n5. 更新时间：允许更新插值点表中的时间值。\n6. 复位功能：提供完全重置函数的功能，将所有内部变量和输出值重置为初始状态。\n7. 中断调用：允许函数块通过调用OB（组织块）来响应周期性中断。\n\n函数块具有以下主要输入和输出：\n- defaultOutValue (LReal): 预先设定的输出变量值\n- contStepNbr (Int): 下一个插值点的继续步骤号\n- contStepTime (Time): 继续到下一个插值点的剩余时间\n- enDefaultOutValue (Bool): 指定是否使用默认输出值\n- start (Bool): 启动信号，开始执行插值点表\n- hold (Bool): 保持信号，冻结/保持输出值在当前值\n- continue (Bool): 继续信号，用于继续执行速度曲线\n- cyclicOP (Bool): 循环操作信号，指定是否循环执行插值点表\n- updateTime (Bool): 更新时间值信号，允许更新插值点表中的时间值\n- reset (Bool): 复位信号，用于将函数块重置为初始状态\n- callOB (OB_CYCLIC): 调用周期性中断OB\n\n- outputValue (LReal): 输出值，根据速度曲线计算得到\n- actTimeTable (Bool): 插值点表是否将被编辑的标志\n- stepNumber (Int): 当前插值点的编号\n- remainTime (Time): 到达下一个插值点的剩余时间\n- totalTime (Time): 插值点表的总时间\n- remainTotalTime (Time): 剩余总时间\n- error (Bool): 执行FB时是否发生错误的标志\n- status (Word): FB的状态\n- subfunctionStatus (Word): 被调用FB、FC和系统块的状态或返回值\n\n- setpoints (Array[*] of LGF_typeRampTimeTable): 插值点表，包含输出值和对应的时间\n\n函数块使用内部变量来存储和管理计算过程中的中间结果，包括结束值、旧值、当前步骤、剩余时间、总时间、剩余总时间、启动标志、时间表激活标志、更新时间标志、重置标志等。它还使用临时变量来处理计算过程中的中间结果，包括新值、索引、数组下限、采样时间、周期时间、周期相位、周期状态、读取时间状态、状态等。\n\n函数块使用常量来定义一些特定的值，如零、无错误、重置时间、周期OB不可用、维度的下限、秒到毫秒的转换、子状态无错误、状态完成无错误、状态无调用、状态首次调用、状态后续调用、错误OB不可用、错误数组下限、错误查询CINT等。\n\n函数块的执行流程如下：\n1. 获取采样时间：根据周期性中断OB的编号获取采样时间。\n2. 检查数组界限：检查输入数组setpoints的下限和上限，确保数组的有效性。\n3. 执行函数：\n   - 首次调用：检查启动信号，如果是首次调用，则初始化相关变量并计算总时间。\n   - 复位：检查复位信号，如果是复位，则将所有内部变量和输出值重置为初始状态。\n   - 操作：根据启动信号和复位标志，执行正常的操作流程，包括冻结操作、继续操作和正常操作。\n   - 更新时间：检查更新时间信号，如果是更新时间，则更新总时间和剩余总时间。\n   - 默认输出：检查是否使用默认输出值，如果是，则将输出值设置为默认值。\n\n4. 写入输出：将计算得到的输出值、时间表激活标志、步骤编号、剩余时间、总时间、剩余总时间、错误标志、状态和子状态写入相应的输出变量。\n\n\n"}
{"title": "LIFO Buffer Management", "name": "LGF_LIFO", "description": "LIFO (Last-In First-Out / Stack buffer memory) This function stores incoming data and outputs the latest/most recent not-yet-processed data.", "type": "FUNCTION_BLOCK", "input": [{"name": "push", "type": "Bool", "description": "Push item to the buffer"}, {"name": "pop", "type": "Bool", "description": "Pop item from the buffer"}, {"name": "peek", "type": "Bool", "description": "Peek item from the buffer (buffer not changed/modified)"}, {"name": "reset", "type": "Bool", "description": "Initializing the buffer (reset the index and the counter)"}, {"name": "clear", "type": "Bool", "description": "Clearing the buffer and initialize with the initial value initialItem (Reset index and counter)."}, {"name": "initialItem", "type": "Variant", "description": "Value with which the ARRAY of the buffer is initialized (usually: 0 / default value)"}], "output": [{"name": "error", "type": "Bool", "description": "An error occurred during the execution of the FB"}, {"name": "status", "type": "Word", "description": "Status of the FB, Error identification"}, {"name": "subFunctionStatus", "type": "Word", "description": "Status or return value of called FB's, FC's and system blocks"}, {"name": "elementCount", "type": "DInt", "description": "Number of elements in the buffer"}, {"name": "isEmpty", "type": "Bool", "description": "Buffer is empty"}], "in/out": [{"name": "item", "type": "Variant", "description": "The entry that is either returned from the ring buffer or written into the buffer"}, {"name": "buffer", "type": "Variant", "description": "The ARRAY that is used as the ring buffer."}], "return_value": [], "status_codes": {"16#0000": "STATUS_NO_ERROR", "16#7000": "STATUS_NO_CURRENT_JOBS", "16#8001": "ERR_BUFFER_EMPTY", "16#8002": "ERR_BUFFER_FULL", "16#8200": "ERR_NO_ARRAY", "16#8201": "ERR_WRONG_TYPE_ITEM", "16#8202": "ERR_WRONG_TYPE_INITIAL_ITEM", "16#8610": "ERR_CLEAR_BUFFER", "16#8611": "ERR_RETURN_LAST_ENTRY", "16#8612": "ERR_POP_REPLACE_ITEM_BY_INIT_VALUE", "16#8613": "ERR_WRITE_ENTRY"}, "user_defined_types": [], "description_zh": "\n这是一个实现后进先出（LIFO）堆栈缓冲区管理的Siemens SCL函数块（FB）。该函数块能够存储输入数据，并在需要时输出最新或最近未被处理的数据。\n\n输入参数包括：\n- push（布尔型）：将一个元素推入缓冲区。\n- pop（布尔型）：从缓冲区弹出最后一个元素。\n- peek（布尔型）：查看缓冲区中的最后一个元素，但不改变缓冲区的内容。\n- reset（布尔型）：初始化缓冲区（重置索引和计数器）。\n- clear（布尔型）：清除缓冲区并用initialItem初始化（重置索引和计数器）。\n- initialItem（变体型）：用于初始化缓冲区数组的值（通常是0或默认值）。\n\n输出参数包括：\n- error（布尔型）：FB执行过程中是否发生错误。\n- status（字型）：FB的状态，用于错误识别。\n- subFunctionStatus（字型）：被调用FB、FC和系统块的状态或返回值。\n- elementCount（双整数型）：缓冲区中的元素数量。\n- isEmpty（布尔型）：缓冲区是否为空。\n\nInOut参数包括：\n- item（变体型）：从缓冲区返回或写入缓冲区的条目。\n- buffer（变体型）：用作环形缓冲区的数组。\n\n函数块使用了一些内部变量来管理缓冲区的状态，例如statLastItemIndex用于跟踪最后一个元素的索引，tempBufferSize用于存储缓冲区的大小，等等。\n\n主要逻辑分为几个区域：\n1. Block execution control：收集边缘触发信号，如果没有任何触发输入，则设置状态为\"STATUS_NO_CURRENT_JOBS\"并返回。\n2. Validation of inputs：检查缓冲区是否为数组，元素类型是否匹配，以及是否需要重置或清除缓冲区。\n3. LIFO algorithm：根据输入信号执行LIFO算法，包括入栈（push）、出栈（pop）和查看（peek）操作。\n4. Writing to outputs：将内部变量值写入输出参数，并设置error和status。\n\n函数块通过ENO输出确保没有错误发生，无需进行额外的错误处理。\n\n\n"}
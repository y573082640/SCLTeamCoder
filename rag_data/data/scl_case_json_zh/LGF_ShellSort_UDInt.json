{"title": "Shell Sort for UDInt Arrays", "name": "LGF_ShellSort_UDInt", "description": "This block sorts an array of type UDInt with any number of elements (max. 1000) in ascending or descending order and returns the sorted version of the array in the same variable.", "type": "FUNCTION", "input": [{"name": "sortDirection", "type": "Bool", "description": "FALSE: Sort ascending; TRUE: Sort descending"}], "output": [{"name": "error", "type": "Bool", "description": "An error occurred during the execution of the FB"}, {"name": "status", "type": "Word", "description": "Status of the FB, Error identification"}], "in/out": [{"name": "array", "type": "Array[*] of UDInt", "description": "Array to be sorted"}], "return_value": [], "status_codes": {"16#0000": "STATUS_NO_ERROR", "16#8200": "ERR_NO_ARRAY", "16#8201": "ERR_TOO_MANY_ELEMENTS"}, "user_defined_types": [], "description_zh": "\n该SCL函数块实现了希尔排序算法，用于对UDInt类型的数组进行排序。数组可以包含任意数量的元素，最大数量限制为1000个。排序可以是升序或降序，由输入参数sortDirection控制。如果sortDirection为FALSE，则进行升序排序；如果为TRUE，则进行降序排序。\n\n函数块的输入参数包括：\n- sortDirection：一个布尔值，指示排序的方向。\n\n输出参数包括：\n- error：一个布尔值，指示在执行函数块期间是否发生错误。\n- status：一个字，表示函数块的状态和错误识别。\n\nInOut参数包括：\n- array：一个UDInt类型的数组，待排序。\n\n函数块的返回值为空。\n\n状态码包括：\n- 16#0000：STATUS_NO_ERROR，表示执行函数块没有出错。\n- 16#8200：ERR_NO_ARRAY，表示数组不存在。\n- 16#8201：ERR_TOO_MANY_ELEMENTS，表示数组元素过多。\n\n在初始化和输入数据处理阶段，首先计算输入数组的大小，并检查数组元素是否超过最大限制。如果数组元素数量在允许范围内，则将输入数组的元素读取到本地数组tempArray中。\n\n排序阶段使用希尔排序算法对本地数组tempArray进行排序。希尔排序是一种改进的插入排序算法，它通过比较距离较远的元素来减少数据移动次数。排序过程会根据sortDirection的值选择升序或降序排序。\n\n排序完成后，将本地数组tempArray的元素写回到InOut参数array中。最后设置error和status参数，表示函数块执行没有出错。\n\n整个函数块的执行过程中不需要进行错误处理，因此ENO设置为TRUE。\n\n\n"}
{"title": "Binary mask comparison", "name": "LGF_BinaryMaskCompare", "description": "This function compares two binary values source and compare by a given mask.", "type": "FUNCTION", "input": [{"name": "source", "type": "DWord", "description": "Source value to compare"}, {"name": "compare", "type": "DWord", "description": "Value to compare against"}, {"name": "mask", "type": "DWord", "description": "Mask the data - bits will pass if TRUE or block if FALSE"}], "output": [], "in/out": [], "return_value": [{"type": "Bool", "description": "Return TRUE if masked values are equal"}], "status_codes": {}, "user_defined_types": [], "description_zh": "一个函数FC，用于比较两个双字（DWord）类型的二进制数值，通过一个给定的掩码进行。该函数接受三个DWord类型的输入参数：`source`是需要比较的源值，`compare`是要与之比较的值，`mask`是一个掩码，用于选择需要比较的位。函数的目的是检查在掩码指定的位上，`source`和`compare`的值是否相等。\n\n逻辑如下：\n\n1. 使用逻辑与操作（AND）将`source`和`compare`与掩码`mask`进行位掩码操作，得到新的数值。\n2. 使用异或操作（XOR）比较两个掩码后的数值是否相等。如果相等，说明在掩码指定的位上，`source`和`compare`的值都相同；如果不相等，说明至少有一个掩码位上的值不同。\n3. 如果XOR的结果为全零（即`ALL_BITS_ARE_FALSE`），则说明在掩码指定的位上，`source`和`compare`的值完全相同，函数返回真（TRUE）；否则返回假（FALSE）。\n\n这个函数可以用于字（Word）或字节（Byte）的比较，只需将输入参数转换为DWord类型即可。\n\n示例：\n\n- 假设`source`为`0x12345678`，`compare`为`0x87654321`，`mask`为`0xFF000000`。\n- 掩码操作后，`source`变为`0x12000000`，`compare`变为`0x87000000`。\n- 这两个数值在掩码指定的位上并不完全相同，因此函数应返回假（FALSE）。"}
{"title": "LReal Array Min/Max Value and Index Searcher", "name": "LGF_SearchMinMax_LReal", "description": "This function searches, in an array of the data type LReal, for the maximum and minimum value and the respective index in the array.", "type": "FUNCTION", "input": [], "output": [{"name": "minValue", "type": "LReal", "description": "Minimum value found in the array"}, {"name": "minValueIndex", "type": "DInt", "description": "Index of the minimum found value in the array"}, {"name": "maxValue", "type": "LReal", "description": "Maximum value found in the array"}, {"name": "maxValueIndex", "type": "DInt", "description": "Index of the maximum found value in the array"}], "in/out": [{"name": "values", "type": "Array[*] of LReal", "description": "Array in whose fields the maximum and minimum are searched"}], "return_value": [], "status_codes": {}, "user_defined_types": [], "description_zh": "\n该函数用于在LReal类型的一维数组中查找最小值和最大值，并返回这些值在数组中的索引。函数没有输入参数，而是通过InOut参数接收要搜索的数组。函数的输出包括找到的最小值和最大值，以及它们在数组中的索引。\n\n函数的逻辑如下：\n1. 首先获取数组的上下界，这将确定数组的大小和要搜索的范围。\n2. 将数组的第一个元素同时赋值给最小值和最大值的临时变量，作为搜索的初始值。\n3. 使用一个循环遍历数组中的每个元素，从数组的第二个元素开始，一直到最后一个元素。\n4. 在循环中，将当前元素的值与临时最小值和最大值进行比较。\n5. 如果当前元素的值小于临时最小值，则更新临时最小值和对应的索引。\n6. 如果当前元素的值大于临时最大值，则更新临时最大值和对应的索引。\n7. 循环结束后，将找到的最小值和最大值以及它们的索引复制到函数的输出参数中。\n8. 由于函数没有错误处理，因此ENO始终设置为TRUE。\n\n函数的输出包括：\n- minValue：数组中的最小值\n- minValueIndex：最小值在数组中的索引\n- maxValue：数组中的最大值\n- maxValueIndex：最大值在数组中的索引\n\n函数没有返回值，所有的结果都是通过输出参数传递的。\n\n\n"}
{"title": "Standalone Data Logger with Advanced Configuration", "name": "LGF_DataLogC", "description": "Function integrates all the datalog system functions and can be used as standalone data logger.", "type": "FUNCTION_BLOCK", "input": [{"name": "enable", "type": "Bool", "description": "TRUE: Enable functionality of FB"}, {"name": "name", "type": "String", "description": "Name of datalog, also used as file name"}, {"name": "triggerLogEntry", "type": "Bool", "description": "Rising edge trigger one entry in data log (only if `parameter.isLoggingByInterval` := FALSE)"}, {"name": "clearLog", "type": "Bool", "description": "Rising edge triggering clearing of datalog file"}, {"name": "deleteLog", "type": "Bool", "description": "Rising edge triggering deletion of datalog file if exist"}, {"name": "parameter", "type": "LGF_typeDataLogParameter", "description": "This UDT belongs to the Module `LGF_DataLogC` and lists all possible parameter to configure its behaviour."}], "output": [{"name": "valid", "type": "Bool", "description": "TRUE: Valid set of output values available at the FB"}, {"name": "busy", "type": "Bool", "description": "TRUE: FB is not finished and new output values can be expected"}, {"name": "error", "type": "Bool", "description": "TRUE: An error occurred during the execution of the FB"}, {"name": "status", "type": "Word", "description": "Status of the FB, Error identification"}, {"name": "writeEntryDone", "type": "Bool", "description": "TRUE: DataLog write done successfully"}, {"name": "clearLogDone", "type": "Bool", "description": "TRUE: DataLog clear done successfully"}, {"name": "deleteLogDone", "type": "Bool", "description": "TRUE: DataLog delete done successfully"}, {"name": "lastEntryReached", "type": "Bool", "description": "TRUE: Last entry of datalog reached, if `enableRingBuffer` is set, start from beginning, otherwise block ends here"}, {"name": "noOfEntries", "type": "UDInt", "description": "Number of entries in datalog"}, {"name": "diagnostics", "type": "LGF_typeDiagnostics", "description": "Diagnostic structure to store and transfer diagnostic information from blocks trough the interface."}], "in/out": [{"name": "data", "type": "Variant", "description": "Data structure to log in datalog file"}], "return_value": [], "status_codes": {"16#0000": "STATUS_FINISHED_NO_ERROR", "16#7000": "STATUS_NO_CALL", "16#7001": "STATUS_FIRST_CALL", "16#7002": "STATUS_SUBSEQUENT_CALL", "16#7010": "STATUS_MAX_ENTRIES_REACHED", "16#8401": "ERR_WRONG_COMMAND_CALL_ORDER", "16#8600": "ERR_UNDEFINED_STATE", "16#8601": "ERR_DATALOG_OPEN", "16#8602": "ERR_DATALOG_CREATE", "16#8603": "ERR_DATALOG_CLOSE", "16#8604": "ERR_DATALOG_WRITE", "16#8605": "ERR_DATALOG_DELETE"}, "user_defined_types": [{"name": "LGF_typeDataLogParameter", "description": "This UDT belongs to the Module LGF_DataLogC and lists all possible parameter to configure its behaviour.", "member": [{"name": "header", "type": "String", "default": "", "description": "Headline of datalog, string of all data fields, separated by a comma: \"field1,field2,field3,...\""}, {"name": "maxNumberOfEntries", "type": "UDInt", "default": "1000", "description": "Maximum number of entries in datalog"}, {"name": "timestampFormat", "type": "USInt", "default": "0", "description": "Timestamp format"}, {"name": "clearOnOpen", "type": "Bool", "default": "FALSE", "description": "Clear datalog during opening datalog while enabling block"}, {"name": "deleteFile", "type": "Bool", "default": "FALSE", "description": "Delete as well datalog file during datalog delete"}, {"name": "enableRingBuffer", "type": "Bool", "default": "FALSE", "description": "TRUE: Overwrite old values and start from the beginning if datalog reaches its maximum entries FALSE: Stop logging if `maxNumberOfEntries` entries reached"}, {"name": "loggingByInterval", "type": "Bool", "default": "FALSE", "description": "TRUE: Log on interval time parameter FALSE: log on \"triggerEntry\""}, {"name": "loggingInterval", "type": "Time", "default": "T#1M", "description": "Time for automatic logging interval"}]}, {"name": "LGF_typeDiagnostics", "description": "Diagnostic structure to store and transfer diagnostic information from blocks trough the interface.", "member": [{"name": "status", "type": "Word", "default": "16#0000", "description": "Status of the Block or error identification when error occurred"}, {"name": "subfunctionStatus", "type": "Word", "default": "16#0000", "description": "Status or return value of called FB's, FC's and system blocks"}, {"name": "stateNumber", "type": "DInt", "default": "0", "description": "State in the state machine of the block where the error occurred"}]}], "description_zh": "\n\n这是一个独立的日志记录功能块FB，它可以作为一个独立的数据记录器使用。该功能块集成了所有数据记录系统功能，并允许用户通过配置参数来自定义其行为。\n\n输入参数包括：\n- enable (Bool): 启用FB的功能\n- name (String): 数据记录的名称，也用作文件名\n- triggerLogEntry (Bool): 上升沿触发数据记录中的一个条目（仅当`parameter.isLoggingByInterval` := FALSE时）\n- clearLog (Bool): 上升沿触发清除数据记录文件\n- deleteLog (Bool): 上升沿触发删除数据记录文件（如果存在）\n- parameter (LGF_typeDataLogParameter): 此UDT属于`LGF_DataLogC`模块，并列出了配置其行为的所有可能参数\n\n输出参数包括：\n- valid (Bool): TRUE: FB输出值有效\n- busy (Bool): TRUE: FB未完成，可以期望新的输出值\n- error (Bool): TRUE: 在执行FB期间发生错误\n- status (Word): FB的状态，错误识别\n- writeEntryDone (Bool): TRUE: 数据记录写入成功\n- clearLogDone (Bool): TRUE: 数据记录清除成功\n- deleteLogDone (Bool): TRUE: 数据记录删除成功\n- lastEntryReached (Bool): TRUE: 数据记录达到最后一个条目，如果设置了`enableRingBuffer`，则从开始重新开始，否则在此处结束\n- noOfEntries (UDInt): 数据记录中的条目数\n- diagnostics (LGF_typeDiagnostics): 诊断结构，用于存储和传输从块通过接口的诊断信息\n\n返回值：\n无\n\n状态代码：\n- 16#0000: STATUS_FINISHED_NO_ERROR\n- 16#7000: STATUS_NO_CALL\n- 16#7001: STATUS_FIRST_CALL\n- 16#7002: STATUS_SUBSEQUENT_CALL\n- 16#7010: STATUS_MAX_ENTRIES_REACHED\n- 16#8401: ERR_WRONG_COMMAND_CALL_ORDER\n- 16#8600: ERR_UNDEFINED_STATE\n- 16#8601: ERR_DATALOG_OPEN\n- 16#8602: ERR_DATALOG_CREATE\n- 16#8603: ERR_DATALOG_CLOSE\n- 16#8604: ERR_DATALOG_WRITE\n- 16#8605: ERR_DATALOG_DELETE\n\n用户定义类型：\n- LGF_typeDataLogParameter: 包含数据记录的配置参数，如数据记录的名称、最大条目数、时间戳格式、是否在打开时清除数据记录等。\n- LGF_typeDiagnostics: 包含块的诊断信息，如状态、子函数状态、发生错误的状态编号等。\n\n该功能块使用状态机来管理数据记录的不同阶段，包括打开、创建、写入、清除和删除数据记录文件。它还处理错误情况，并提供诊断信息以帮助用户识别问题。\n\n\n\n"}
{"title": "Odd Parity Checker for DWord", "name": "LGF_IsParityOdd", "description": "The function checks whether the parity of the input variable of type DWord is odd.", "type": "FUNCTION", "input": [{"name": "doubleWord", "type": "DWord", "description": "Variable for which the parity is to be determined."}], "output": [], "in/out": [], "return_value": [{"type": "Bool", "description": "TRUE: When the number of bits that are assigned `TRUE` is odd"}], "status_codes": {"16#0000": "STATUS_NO_ERROR"}, "user_defined_types": [], "description_zh": "\n该函数 \"LGF_IsParityOdd\" 用于检查一个 DWord 类型的输入变量是否有奇数个位的数值为1（即奇校验）。函数的输入参数为 \"doubleWord\"，输出为一个布尔值，当输入变量的位数为奇数时返回 TRUE。\n\n函数内部使用了一系列位操作来计算输入变量的奇偶性。首先，将输入变量 \"doubleWord\" 与自身右移一位后的结果进行异或操作，然后再次将结果右移两位后与之前的结果进行异或操作。接着，使用一个掩码将结果限制在最低的8位，并将这8位转换为无符号整数。最后，将这个无符号整数左移28位，使得结果存储在最低位。\n\n由于函数执行过程中不可能产生错误，因此不需要使用ENO进行错误处理。函数最后返回最低位的结果，即判断输入变量的奇偶性。\n\n\n"}
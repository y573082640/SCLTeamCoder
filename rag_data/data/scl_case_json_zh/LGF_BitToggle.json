{"title": "Bit toggle operation in DWORD", "name": "LGF_BitToggle", "description": "This block toggles (from TRUE to FALSE and vice versa) a bit at a predefined position in a variable of the data type DWORD.", "type": "FUNCTION", "input": [{"name": "value", "type": "DWord", "description": "Tag where the bit has to be toggled"}, {"name": "bitNo", "type": "USInt", "description": "Bit number to be toggled in the “value” parameter."}], "output": [], "in/out": [], "return_value": [{"type": "DWord", "description": "Tag with toggled bit"}], "status_codes": {}, "user_defined_types": [], "description_zh": "\n该函数\"LGF_BitToggle\"用于切换DWORD类型变量中指定位置的位。它接受两个输入参数：value（DWord类型），表示要切换位的变量；bitNo（USInt类型），表示要切换的位号。函数的返回值是一个DWORD类型的变量，其中指定位置的位已经被切换。\n\n函数首先定义了两个常量：TRUE_BOOL_BIT（DWord类型），表示一个最低位为1的DWORD值（即16#0001）；MAX_NO_OF_BITS（USInt类型），表示DWORD类型数据中的最大位数（即32位）。\n\n在函数的逻辑部分，使用了一个位操作来切换指定位置的位。首先，使用SHL函数将TRUE_BOOL_BIT左移bitNo位，这样就在指定的位置上放置了一个1。然后，使用XOR函数将这个移动后的值与原始的value进行异或操作，这样就会切换指定位置的位。如果该位原本是0，则切换为1；如果原本是1，则切换为0。\n\n最后，函数将ENO设置为TRUE，表示没有错误发生，不需要进行错误处理。\n\n这个函数可以用于切换DWORD、WORD或BYTE类型数据中的位，只需在调用函数之前和之后进行适当的类型转换即可。\n\n\n"}
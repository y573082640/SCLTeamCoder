{"title": "8-Bit to Byte Merger", "name": "LGF_MergeBitsToByte", "description": "This function merge 8 Bits / 8 Boolean variables into one Byte variable.", "type": "FUNCTION", "input": [{"name": "bit7", "type": "Bool", "description": "Input Bit 7 - MSB"}, {"name": "bit6", "type": "Bool", "description": "Input Bit 6"}, {"name": "bit5", "type": "Bool", "description": "Input Bit 5"}, {"name": "bit4", "type": "Bool", "description": "Input Bit 4"}, {"name": "bit3", "type": "Bool", "description": "Input Bit 3"}, {"name": "bit2", "type": "Bool", "description": "Input Bit 2"}, {"name": "bit1", "type": "Bool", "description": "Input Bit 1"}, {"name": "bit0", "type": "Bool", "description": "Input Bit 0 - LSB"}], "output": [], "in/out": [], "return_value": [{"type": "Byte", "description": "Composite Bit sequence stored as Byte variable"}], "status_codes": {}, "user_defined_types": [], "description_zh": "\n该函数\"LGF_MergeBitsToByte\"的功能是将8个布尔型输入位（bit7到bit0）合并成一个字节型变量。在这个函数中，输入位bit7是最高有效位（MSB），而bit0是最低有效位（LSB）。函数通过直接操作字节变量的各个位来实现合并，将输入位的值直接赋给字节变量的相应位。最后，函数返回这个合并后的字节变量。由于函数只进行位操作，没有复杂的逻辑判断或其他可能导致错误的操作，因此不需要进行错误处理。\n\n\n"}
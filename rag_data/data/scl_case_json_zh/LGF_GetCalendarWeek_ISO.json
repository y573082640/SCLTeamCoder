{"title": "ISO 8601 calendar week calculation", "name": "LGF_GetCalendarWeek_ISO", "description": "This function uses the specified date to calculate the calendar week and the number of days that have passed since the beginning of the year for ISO 8601 European countries.", "type": "FUNCTION", "input": [{"name": "date", "type": "DTL", "description": "Date used to calculate the calendar week and days since 1 January"}], "output": [{"name": "calendarDay", "type": "DInt", "description": "Days past since January 1st on given date"}, {"name": "error", "type": "Bool", "description": "FALSE: No error / TRUE: An error occurred during the execution of the FB"}, {"name": "status", "type": "Word", "description": "16#0000-16#7FFF: Status of the FB / 16#8000-16#FFFF: Error identification"}], "in/out": [], "return_value": [{"type": "DInt", "description": "Number of the calendar week."}], "status_codes": {"16#0000": "STATUS_NO_ERROR", "16#8201": "ERR_LIM_DATE Date out of the range"}, "user_defined_types": [], "description_zh": "\n该函数\"LGF_GetCalendarWeek_ISO\"根据输入的日期计算出ISO 8601标准下的日历周数，以及自年初以来的天数。函数首先检查输入日期是否超出有效范围，如果超出，则返回错误状态。接着，函数会确定当前年份、前一年和下一年的年份，并检查这些年份是否为闰年。然后，它会计算当前年份和前一年1月1日的星期几，以及当前年份12月31日的星期几。根据这些信息，函数会判断前一年是否有53周，以及当前年份是否有53周。接下来，函数会根据1月1日的星期几对已过的天数进行校正，并根据校正后的天数计算出日历周数。最后，函数会返回计算出的日历周数和已过的天数，并将错误状态和状态码设置为无错误。\n\n该函数的主要逻辑如下：\n1. 检查输入日期是否超出有效范围。\n2. 确定当前年份、前一年和下一年的年份，并检查这些年份是否为闰年。\n3. 计算1月1日和12月31日的星期几。\n4. 判断前一年和当前年份是否有53周。\n5. 根据星期几校正已过的天数。\n6. 根据校正后的天数计算日历周数。\n7. 返回计算出的日历周数和已过的天数。\n\n\n"}
FUNCTION "SearchMinMax_DInt" : Void
{ S7_Optimized_Access := 'TRUE' }

	VAR_INPUT 
		values : Array[*] of DInt;
	END_VAR

	VAR_OUTPUT 
		minValue : DInt;
		minValueIndex : DInt;
		maxValue : DInt;
		maxValueIndex : DInt;
	END_VAR

	VAR_IN_OUT 
		// define variable both in input and output here
	END_VAR

	VAR_TEMP 
		tempArrayLowerBound : DInt;
		tempArrayUpperBound : DInt;
		tempCounter : DInt;
		tempArrayIndexMax : DInt;
		tempArrayIndexMin : DInt;
		tempActValue : DInt;
		tempMinValue : DInt;
		tempMaxValue : DInt;
	END_VAR

	VAR CONSTANT 
		START_FROM_SECOND_ELEMENT : Int := 1;
		DIMENSION_ONE : UInt := 1;
	END_VAR

	VAR
		// define other variable here
	END_VAR

BEGIN

	REGION initialization
		// initialize your variable here if necessary
	END_REGION
	
	REGION Validation of inputs and outputs 
	  // Lower bound
	  #tempArrayLowerBound := LOWER_BOUND(ARR := #values, DIM := #DIMENSION_ONE);
	  // Upper bound 
	  #tempArrayUpperBound := UPPER_BOUND(ARR := #values, DIM := #DIMENSION_ONE);
	END_REGION
	
	REGION Searching the array 
	  // Assign first value as min / max
	  #tempMinValue := #tempMaxValue := #values[#tempArrayLowerBound];
	  #tempArrayIndexMin := #tempArrayIndexMax := #tempArrayLowerBound;
	  
	  // Search the Array for min/max values
	  FOR #tempCounter := (#tempArrayLowerBound + #START_FROM_SECOND_ELEMENT) TO #tempArrayUpperBound DO
	    
	    #tempActValue := #values[#tempCounter];
	    
	    // check for min
	    IF #tempActValue < #tempMinValue THEN
	      #tempMinValue := #tempActValue;
	      #tempArrayIndexMin := #tempCounter;
	      // check for max
	    ELSIF #tempActValue > #tempMaxValue THEN
	      #tempMaxValue := #tempActValue;
	      #tempArrayIndexMax := #tempCounter;
	    END_IF;
	  END_FOR;
	END_REGION
	
	REGION Writting to outputs
	  // Copy found values to outputs
	  // Copy Minimum value
	  #minValue := #values[#tempArrayIndexMin];
	  // Copy Maximum value
	  #maxValue := #values[#tempArrayIndexMax];
	  
	  // Write found indexes to outputs
	  #minValueIndex := #tempArrayIndexMin;
	  #maxValueIndex := #tempArrayIndexMax;
	  
	  // ENO mechanism is not used, no error possible
	  ENO := TRUE;
	END_REGION
	
END_FUNCTION

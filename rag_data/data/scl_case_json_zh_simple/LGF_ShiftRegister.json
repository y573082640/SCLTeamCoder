{"title": "Shift Register for Datatype Variant", "name": "LGF_ShiftRegister", "description": "The Function represents a shift register for any kind of Datatype (using variant). It is possible to shift the elements in the array at bufferRegister to the left or right.", "type": "FUNCTION_BLOCK", "input": [{"name": "shiftLeft", "type": "Bool", "description": "Rising edge: Elements in the array bufferRegister shifted left."}, {"name": "shiftRight", "type": "Bool", "description": "Rising edge: Elements in the array bufferRegister shifted right."}, {"name": "shiftRange", "type": "UInt", "description": "Number of places to be shifted in the bufferRegister input array"}, {"name": "clear", "type": "Bool", "description": "Clear buffer elements in bufferRegister with initalItem"}, {"name": "fill", "type": "Bool", "description": "Overwrite buffer elements after shift operation."}, {"name": "initialItem", "type": "Variant", "description": "Value with which the array at input bufferRegister is initialized."}], "output": [{"name": "error", "type": "Bool", "description": "An error occurred during the execution of the FB"}, {"name": "status", "type": "Word", "description": "Status of the FB, Error identification"}, {"name": "subFunctionStatus", "type": "Word", "description": "Status or return value of called FB's, FC's and system blocks"}], "in/out": [{"name": "bufferRegister", "type": "Variant", "description": "Buffer / Register memory as ARRAY, which keeps the data."}], "return_value": [], "status_codes": {"16#0000": "STATUS_NO_ERROR", "16#7000": "STATUS_NO_CURRENT_JOBS", "16#8200": "ERR_NO_ARRAY", "16#8201": "ERR_CLEARING_WITHOUT_INITIAL_ITEM", "16#8202": "ERR_FILL_WITHOUT_INITIAL_ITEM", "16#8203": "ERR_WRONG_TYPE_INITIAL_ITEM", "16#8401": "ERR_MORE_THAN_ONE_COMMAND", "16#8402": "ERR_IN_SHIFT_RANGE", "16#8610": "ERR_CLEAR_BUFFER", "16#8611": "ERR_SHIFT_BUFFER_LEFT", "16#8612": "ERR_SHIFT_BUFFER_LEFT_FILL", "16#8622": "ERR_SHIFT_BUFFER_RIGHT_FILL"}, "user_defined_types": [], "description_zh": "\n该函数块FB实现了一个可变数据类型的移位寄存器功能，可以左移或右移数组bufferRegister中的元素。它能够处理多种数据类型，并提供了清除缓冲区和使用初始项填充缓冲区的功能。\n\n输入参数包括：\n- shiftLeft (Bool): 上升沿触发时，将bufferRegister数组中的元素向左移。\n- shiftRight (Bool): 上升沿触发时，将bufferRegister数组中的元素向右移。\n- shiftRange (UInt): 指定移位的位数。\n- clear (Bool): 清除bufferRegister中的元素，并用initialItem初始化。\n- fill (Bool): 移位操作后，使用initialItem覆盖bufferRegister中的元素。\n- initialItem (Variant): 用于初始化bufferRegister数组的值。\n\n输出参数包括：\n- error (Bool): 执行FB过程中是否发生错误。\n- status (Word): FB的状态和错误识别。\n- subFunctionStatus (Word): 被调用FB、FC和系统块的返回值或状态。\n\nInOut参数包括：\n- bufferRegister (Variant): 作为数组的缓冲区/寄存器内存，用于保持数据。\n\n函数块执行逻辑：\n1. 检测边缘触发，如果shiftLeft、shiftRight或clear同时为真，则报告错误。\n2. 检查bufferRegister是否为数组，并获取数组元素的数量。\n3. 检查移位位数是否在有效范围内。\n4. 如果clear为真，则使用initialItem初始化bufferRegister数组。\n5. 如果移位操作（shiftLeft或shiftRight）为真，则执行相应的移位操作。\n6. 如果fill为真，则使用initialItem填充移位后的bufferRegister数组。\n7. 设置输出参数，表示操作是否成功。\n\n状态代码：\n- 16#0000: STATUS_NO_ERROR\n- 16#7000: STATUS_NO_CURRENT_JOBS\n- 16#8200: ERR_NO_ARRAY\n- 16#8201: ERR_CLEARING_WITHOUT_INITIAL_ITEM\n- 16#8202: ERR_FILL_WITHOUT_INITIAL_ITEM\n- 16#8203: ERR_WRONG_TYPE_INITIAL_ITEM\n- 16#8401: ERR_MORE_THAN_ONE_COMMAND\n- 16#8402: ERR_IN_SHIFT_RANGE\n- 16#8610: ERR_CLEAR_BUFFER\n- 16#8611: ERR_SHIFT_BUFFER_LEFT\n- 16#8612: ERR_SHIFT_BUFFER_LEFT_FILL\n- 16#8622: ERR_SHIFT_BUFFER_RIGHT_FILL\n\n\n"}
{"variables": [], "instructions": [], "planning": "\n- 概述\n这段代码是一个名为“LGF_Boxplot_UDInt”的功能块，用于对一组无符号双精度整数数组进行排序，并计算所谓的“五数概括”（包括最小值、第一四分位数、中位数、第三四分位数和最大值）。此外，它还计算偏度并检测异常值。\n\n- 变量定义\n代码中定义了以下几类变量：\n - 输入变量：执行、范围异常值\n - 输出变量：错误、状态、子函数状态、异常值最大、最大值、Q75、中位数、Q25、最小值、异常值最小、偏度\n - 输入/输出变量：值（数组）\n - 内部变量：最大新值、最小新值、状态状态、状态子函数状态、执行旧值、Shell排序实例、最小值、最大值、四分位数25、四分位数75、元素数量、中位数、四分位数差、异常值最小、异常值最大、偏度、计数器、异常值边界\n - 临时变量：临时K、临时值UDInt、临时值UDInt1、临时数组下界、临时数组上界\n - 常量：零LReal、零UInt、范围异常值下界、元素数量校正、转换为百分比、维度一、无余数、子状态无错误、状态执行完成、状态无调用、状态第一次调用、错误负数组边界、错误Shell排序、错误范围不正确\n\n- \n- 主逻辑部分\n  -- REGION Dectect execution bit\n     此区域检测`execute`输入信号的上升沿。当`execute`从`FALSE`变为`TRUE`时，功能块开始执行。首先，获取输入数组`values`的下界和上界，以便后续操作可以访问数组的所有元素。然后，重置功能块的状态变量和输出变量，确保每次执行时都从干净的状态开始。状态`statStatus`被设置为`STATUS_FIRST_CALL`，表示这是第一次调用该功能块。如果`execute`输入为`FALSE`，则功能块不执行任何操作，状态`statStatus`被设置为`STATUS_NO_CALL`。\n     \n  -- REGION Validation\n     在此区域中，对输入参数进行验证。首先，检查`rangeOutlier`参数是否在有效范围内。如果`rangeOutlier`不等于0且小于或等于1，则表示输入值无效，状态`statStatus`被设置为`ERR_RANGE_NOT_OK`。其次，检查数组边界是否为负数，如果是，则状态`statStatus`被设置为`ERR_NEG_ARR_BOUND`。这些验证确保了输入参数的合理性，避免了在后续计算中可能出现的问题。\n     \n  -- REGION Boxplot calculation\n     此区域是功能块的核心部分，负责计算Boxplot的统计量。首先，获取数组中元素的数量。然后，调用`LGF_ShellSort_UDInt`实例对数组进行排序。如果排序过程中出现错误，则将状态`statStatus`设置为`ERR_SHELL_SORT`，并记录子函数状态`statSubfuncStatus`。排序完成后，计算最小值`statMin`和最大值`statMax`。接着，根据元素数量的奇偶性，计算中位数`statMedian`。如果元素数量为偶数，则中位数为中间两个数的平均值；如果为奇数，则中位数为中间的数。然后，计算四分位数25`statQuartil25`和四分位数75`statQuartil75`。如果指定了`rangeOutlier`，则计算四分位数之间的差值`statDeltaQuartil`，并用于确定异常值的边界。在数组中搜索低于下界和高于上界的值，并将这些值视为异常值。计算异常值所占的百分比，并更新最小值`statMinNew`和最大值`statMaxNew`。最后，计算偏度`statSkewness`，它描述了数据分布的对称性。状态`statStatus`被设置为`STATUS_EXECUTION_FINISHED`，表示计算完成。\n     \n  -- REGION Write outputs\n     此区域将计算结果写入输出变量。如果指定了`rangeOutlier`，则使用新的最小值和最大值`statMinNew`和`statMaxNew`。否则，使用原始的最小值和最大值`statMin`和`statMax`。将计算的四分位数25、中位数、四分位数75、异常值最小、异常值最大和偏度写入对应的输出变量。最后，设置错误标志`error`，并将状态`statStatus`和子函数状态`statSubfuncStatus`写入输出。由于功能块不使用ENO机制，因此ENO被强制设置为`TRUE`。\n\n\n", "name": "LGF_Boxplot_UDInt"}
{"variables": [], "instructions": [], "planning": "\n- 概述\n这段代码是一个名为“LGF_Boxplot_DInt”的SCL功能块，它计算一个双整数数组的“五数概括”（即最小值、第一四分位数、中位数、第三四分位数和最大值），并可以识别异常值。\n- 变量定义\n代码中定义了以下几类变量：\n - 输入变量：执行、范围异常值\n - 输出变量：错误、状态、子函数状态、异常值最大、最大、Q75、中位数、Q25、最小、异常值最小、偏度\n - 输入/输出变量：值\n - 内部变量：最大新、最小新、状态状态、子函数状态、执行旧、Shell实例、最小、最大、四分位数25、四分位数75、元素数量、中位数、四分位数差、异常值最小、异常值最大、偏度、计数器、异常值边界\n - 临时变量：K、值DInt、值DInt1、数组下界、数组上界\n - 常量：零LReal、零DInt、异常值下界、元素数量修正、转换为百分比、维度一、无余数、子状态无错误、状态执行完成、状态无调用、状态第一次调用、错误负数组边界、错误Shell、错误范围不正确\n- \n- 主逻辑部分\n  -- REGION Dectect execution bit\n     此区域检测执行输入的上升沿。如果执行输入为真且上一个周期为假，则说明用户请求执行该功能块。在这种情况下，首先计算输入数组的上下界，以便后续处理。然后，重置所有输出和内部状态变量，为新的计算周期做准备。将状态设置为“状态第一次调用”，表示这是新的执行周期的开始。如果执行输入为假，则说明用户没有请求执行该功能块，因此将状态设置为“状态无调用”，表示功能块处于空闲状态。\n     \n  -- REGION Validation\n     此区域在执行计算之前验证输入参数。首先，检查范围异常值是否在有效范围内。范围异常值用于确定异常值的边界，它必须大于1.0或等于0.0。如果范围异常值不满足条件，则将状态设置为“错误范围不正确”，表示输入参数无效。然后，检查数组边界是否为负。如果是，则将状态设置为“错误负数组边界”，因为数组边界应该是非负的。如果所有验证都通过，则功能块继续执行计算。\n     \n  -- REGION Boxplot calculation\n     此区域是功能块的核心，负责计算五数概括和异常值。首先，获取数组中的元素数量。然后，使用Shell实例对数组进行排序。Shell实例是一个用于排序的辅助功能块。如果排序过程中出现错误，则将状态设置为“错误Shell”并记录子函数状态，表示排序过程中出现了问题。否则，计算最小值、最大值、中位数、第一四分位数和第三四分位数。如果指定了范围异常值，则计算异常值的边界，并搜索数组中的异常值。最后，计算偏度并将状态设置为“状态执行完成”，表示计算周期已经结束。\n     \n  -- REGION Write Outputs\n     此区域将计算结果写入输出变量。首先，检查是否指定了范围异常值。如果是，则将最小值和最大值设置为新的最小值和最大值，这些值考虑了异常值。然后，将第一四分位数、中位数、第三四分位数、异常值最小、异常值最大和偏度写入输出变量。最后，将错误、状态和子函数状态写入输出变量，以便用户可以检查功能块的执行结果。ENO（Enable Output）被强制设置为真，因为功能块不使用ENO机制来进行错误处理，而是使用错误和状态输出。\n\n\n", "name": "LGF_Boxplot_DInt"}
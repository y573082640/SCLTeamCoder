{"variables": [], "instructions": [], "planning": "\n- 概述\n这段代码是一个使用SCL编写的功能块，名为“LGF_NonLinearInterpolationCI”，用于通过预定义的设定点数组插值特性曲线。\n- 变量定义\n代码中定义了以下几类变量：\n  - 输入变量：值、默认输出值、启用默认输出值、跟踪、重置\n  - 输出变量：输出值\n  - 输入/输出变量：设定点\n  - 内部变量：状态索引\n  - 临时变量：临时值、临时结束搜索、临时输入值开始、临时输入值结束、临时输出值开始、临时输出值结束、临时因子、临时下限、临时上限\n  - 常量：零、状态索引移位、维度一\n- \n- 主逻辑部分\n  -- REGION Block info header\n     此区域包含功能块的元信息，简单描述。\n  -- REGION DESCRIPTION\n     此区域目前为空，但可以包含功能块的简单描述。\n  -- REGION Initialization\n     此区域初始化功能块。首先，将输入值存储在临时变量中。然后，使用LOWER_BOUND和UPPER_BOUND函数获取设定点的下限和上限。这些函数用于确定数组中的有效元素范围。最后，检查索引值是否在范围内。如果不是，则将其设置为下限加一，以确保从数组的第一个有效元素开始。\n  -- REGION Different modes\n     此区域处理不同的模式。首先，检查是否启用默认输出值。如果是，则将输出值设置为默认输出值并返回，这意味着不执行插值计算。否则，检查是否跟踪。如果是，则将输出值设置为输入值并返回，这表示输出直接跟随输入。否则，检查是否重置。如果是，则将索引值设置为下限加一，并将输出值设置为零并返回，这表示重置索引并停止输出。\n  -- REGION Calculated polynom output\n     此区域计算多项式输出。首先，初始化搜索过程，将结束搜索标志设置为假。然后，使用一个循环来搜索正确的设定点。在循环中，首先预设多边形的输入值，即当前索引值和下一个索引值的输入值。然后，检查实际的多边形。如果输入值大于开始值，则检查是否大于结束值。如果是，则检查索引值是否小于上限。如果是，则更新开始值和索引值，并获取新的结束值，这表示需要移动到下一个设定点。否则，设置结束搜索标志，表示已经到达数组的末尾。否则，设置结束搜索标志，表示当前设定点不包含输入值。如果输入值小于开始值，则检查索引值是否大于下限加一。如果是，则更新索引值和结束值，并获取新的开始值，这表示需要移动到前一个设定点。否则，设置结束搜索标志，表示已经到达数组的开头。在循环结束后，设置多边形的输出值，即当前索引值和下一个索引值的输出值。然后，计算直线的斜率，这将用于插值计算。\n  -- REGION Writting to outputs\n     此区域将计算出的输出值写入输出变量。首先，根据斜率和输入值计算输出值。这是通过将输入值乘以斜率然后加上起始输出值减去斜率乘以起始输入值来完成的。然后，将ENO机制设置为真，表示没有错误发生。\n\n\n", "name": "LGF_NonLinearInterpolation"}
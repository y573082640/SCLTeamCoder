{"variables": [], "instructions": [], "planning": "\n- 概述\n这段代码是一个名为“LGF_Histogram_DInt”的SCL功能块，用于计算一个DInt值数组，以便在WinCC中创建直方图。它执行排序、计算直方图的频率和中间值，并将这些值写入输出数组。\n\n- 变量定义\n代码中定义了以下几类变量：\n - 输入变量：执行、类别数量\n - 输出变量：错误、状态、子函数状态、直方图值、轴、类别宽度\n - 输入/输出变量：值\n - 内部变量：状态数组、状态状态、状态子函数状态、状态执行旧、实例希尔排序、状态最小值、状态最大值、状态计数器、状态宽度、状态频率值、状态索引、状态索引旧、状态边界、状态最大频率、状态直方图频率绝对、状态直方图频率相对、状态直方图类别中值\n - 临时变量：临时元素数量、临时下限、临时上限、临时值DInt、临时最小DInt、临时最大DInt、临时循环索引、临时数组偏移\n - 常量：零整数、零LReal、维数一、数组起始索引、元素计数校正、增量、计数器校正、最小类别数、最大类别数、类别计数器下限、类别计数器上限、比率、百分比校正、最大数组元素、子状态无错误、状态执行完成、状态无调用、状态第一次调用、错误希尔排序、错误类别数不正确\n\n- \n- 主逻辑部分\n-- REGION Detect execution bit\n   此区域检测执行位的上升沿。如果执行输入为真且上一个周期为假，则获取数组的边界，重置并初始化一些标签，然后将状态设置为“第一次调用”。如果执行输入为假，则将状态设置为“无调用”。\n-- REGION Validation\n   此区域验证类别数量是否在允许的范围内。如果类别数量超出范围，则将状态设置为“错误类别数不正确”。\n-- REGION Histogram calculation \n   此区域计算直方图。首先，计算数组中的元素数量。然后，将数组索引移到0..n的范围。接下来，对数组进行排序。如果排序过程中出现错误，则将状态设置为“错误希尔排序”。否则，识别最大值和最小值，计算类别宽度，并将值填充到临时数组中。然后，搜索所有值，计算每个类别的频率值，并将这些值存储在状态直方图频率绝对和状态直方图频率相对数组中。接着，找到每个类别的中值，并将这些值存储在状态直方图类别中值数组中。最后，将值复制到输出数组中，并将状态设置为“状态执行完成”。\n   - 计算数组元素数量\n     首先，计算数组中的元素数量。这是通过将数组的上限和下限相减，然后加上一个校正因子来实现的。\n   - 移动数组索引\n     然后，将数组索引移到0..n的范围。这是通过将数组的下限值作为偏移量来实现的。\n   - 排序数组\n     接下来，使用“LGF_ShellSort_DInt”功能块对数组进行排序。如果排序过程中出现错误，则将状态设置为“错误希尔排序”。\n   - 识别最大值和最小值\n     如果排序成功，则识别最大值和最小值。这些值用于计算类别宽度和直方图的边界。\n   - 计算类别宽度\n     类别宽度是最大值和最小值之间的差值除以类别数量。\n   - 填充临时数组\n     然后，将排序后的值填充到临时数组中。这是为了更容易地搜索和计算每个类别的频率值。\n   - 搜索所有值\n     接下来，搜索所有值，计算每个类别的频率值。这是通过遍历数组并对每个值进行分类来实现的。\n   - 计算频率值\n     对于每个类别，计算落在该类别范围内的值的数量。这些值存储在状态直方图频率绝对数组中。\n   - 计算相对频率\n     然后，计算每个类别的相对频率。这是通过将每个类别的频率值除以数组中的元素数量来实现的。这些值存储在状态直方图频率相对数组中。\n   - 找到每个类别的中值\n     接着，找到每个类别的中值。这是通过计算每个类别的边界之间的中间值来实现的。这些值存储在状态直方图类别中值数组中。\n   - 复制值到输出数组\n     最后，将相对频率和中值复制到输出数组中。这些值用于在WinCC中创建直方图。\n-- REGION Write outputs \n   此区域将轴值、类别宽度和一些状态信息写入输出。轴值包括最小值、最大值、零和最大频率。然后，将错误和状态信息写入输出。最后，ENO机制未使用，因此强制设置为真。\n\n\n", "name": "LGF_Histogram_DInt"}
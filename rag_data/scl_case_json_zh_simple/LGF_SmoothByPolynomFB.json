{"title": "Polynomial Smoothing Function Block", "name": "LGF_SmoothByPolynomFB", "description": "This function calculates the smoothed values by polynomial cyclically using a 3rd degree polynomial.", "type": "FUNCTION_BLOCK", "input": [{"name": "enable", "type": "Bool", "description": "Activates the block."}, {"name": "insert", "type": "Bool", "description": "Accepts the value at the input `value` at positive edge and outputs a `smoothedValue` if five values have been read in."}, {"name": "value", "type": "LReal", "description": "Value that is to be included in the smoothing."}], "output": [{"name": "smoothedValue", "type": "LReal", "description": "The smoothed value."}, {"name": "error", "type": "Bool", "description": "FALSE: No error, TRUE: An error occurred during the execution of the FB"}, {"name": "status", "type": "Word", "description": "Status of the FB and error identification."}], "in/out": [], "return_value": [], "status_codes": {"16#7000": "STATUS_NO_CALL: The block waits for activation through the parameter `enable`.", "16#7001": "STATUS_FIRST_CALL: First call of FB after enabling", "16#7002": "STATUS_SUBSEQUENT_CALL: Processing is active. Subsequent call of FB.", "16#7010": "STATUS_NOT_ENOUGH_VALUES: The block requires five (5) values to calculate a smoothed value."}, "user_defined_types": [], "description_zh": "\n一个函数块FB，该函数块通过使用三阶多项式对输入值进行循环平滑处理。它接受一个布尔型使能输入（enable）和一个插入信号（insert），当插入信号发生上升沿时，输入的数值（value）将被存储，并在存储了五个数值后计算出平滑后的数值（smoothedValue）。\\n\\n状态码：\\n16#7000：STATUS_NO_CALL：函数块等待通过参数`enable`激活。\\n16#7001：STATUS_FIRST_CALL：使能后第一次调用FB。\\n16#7002：STATUS_SUBSEQUENT_CALL：处理活动，后续调用FB。\\n16#7010：STATUS_NOT_ENOUGH_VALUES：函数块需要五个（5）个值来计算平滑值。\\n\\n函数块使用一个数组来存储输入值，并在每次插入信号发生上升沿时更新这个数组。当数组中存储了足够的值时，它将计算出一个平滑值，并输出。如果发生错误，函数块将设置错误输出（error）并返回相应的状态码（status）。\n\n\n"}
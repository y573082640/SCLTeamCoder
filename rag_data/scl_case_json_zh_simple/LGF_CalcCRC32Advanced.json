{"title": "Advanced CRC-32 Calculator", "name": "LGF_CalcCRC32Advanced", "description": "The function uses 32 bits as the generator polynomial (mask) and additional parameters for CRC calculation.", "type": "FUNCTION", "input": [{"name": "initValue", "type": "DWord", "description": "Start value for the calculation"}, {"name": "mask", "type": "DWord", "description": "Generator polynomial for the calculation"}, {"name": "finalXorValue", "type": "DWord", "description": "Value for final XOR operation"}, {"name": "reflectInput", "type": "Bool", "description": "Mirror the bits within the input byte"}, {"name": "reflectResult", "type": "Bool", "description": "Mirror the order of the bits within the result"}, {"name": "noOfElements", "type": "UInt", "description": "Number of elements to be used in CRC calculation"}], "output": [{"name": "error", "type": "Bool", "description": "Error flag"}, {"name": "status", "type": "Word", "description": "Status code"}], "in/out": [{"name": "array", "type": "Array[*] of Byte", "description": "Data stream for which the CRC value will be calculated"}], "return_value": [{"type": "DWord", "description": "Calculated CRC value"}], "status_codes": {"16#0000": "STATUS_NO_ERROR", "16#8400": "ERR_NO_OF_ELEMENTS"}, "user_defined_types": [], "description_zh": "\n一个函数FC，该函数根据CRC-32算法计算输入数据流的循环冗余校验（CRC）值。该函数支持多种参数，包括初始值、掩码（生成多项式）、最终异或值、输入/输出反射标志以及要用于CRC计算的数据元素数量。函数会检查输入数据元素的数量是否超出数组的大小，并在计算过程中根据需要反射输入字节和/或结果。最终计算出的CRC值可以与最终异或值进行异或操作。函数返回计算出的CRC值，并设置错误标志和状态代码以指示计算过程中是否存在错误。\n\n\n"}
{ "title": "PLC Logistics Transportation Task Management System", "description": "In modern logistics systems, an efficient transportation task management system is needed to manage the task allocation for transport vehicles. This system needs to be able to receive and store the vehicle numbers executing transportation tasks and update the vehicle status upon task completion. Additionally, the system should detect whether the task queue is full and trigger an alarm if necessary. The system receives a set of vehicle transportation task data, taskCars, constructed as a byte array. The first byte, taskCars[0], indicates the number of vehicles performing tasks in the data set, with the remaining space representing the vehicle numbers. The storage operation is triggered by the input storeTaskTrigger. Each set of task data needs to be sequentially stored in the task queue, and the task data length may vary. When the task queue is full and unable to store new tasks, the system should trigger an error alarm. The system should provide a reset function to clear the task queue and reset the error status error through the input resetTrigger. The system should output the current usage and remaining space of the task queue. When the storeTaskTrigger is triggered, the system first checks if the task input length information (i.e., the first byte of the array taskCars[0]) is illegal. If it is less than or equal to 0 or greater than 8, the system outputs an error status error=true and error code status=16#8001. If the remaining space in the task queue is insufficient, the system outputs an error status error=true and error code status=16#8002. If none of these errors are present, the system extracts the vehicle number data starting from the second byte of the input array (taskCars[1]) and stores it in the task queue. During storage, the existing data in the queue should not be overwritten; the new data should be stored sequentially after the existing data.\nWhen the resetTrigger is triggered, all data in the task queue should be cleared, and the error status should be reset to error=0 and status=0.\nThe used and remaining spaces of the task queue should be output through usedSpace and remainingSpace respectively.", "type": "FUNCTION_BLOCK", "name": "LGF_TransportationTaskManager", "input": [ { "name": "taskCars", "type": "Array[0..8] of Byte", "description": "Byte array of vehicle numbers executing transportation tasks" }, { "name": "storeTrigger", "type": "Bool", "description": "Storage trigger signal" }, { "name": "resetTrigger", "type": "Bool", "description": "Reset trigger signal" } ], "output": [ { "name": "usedSpace", "type": "Int", "description": "Used space of the task queue" }, { "name": "remainingSpace", "type": "Int", "description": "Remaining space of the task queue" }, { "name": "error", "type": "Bool", "description": "Error status indicator\nFALSE: No error occurred\nTRUE: Error occurred" }, { "name": "status", "type": "Word", "description": "Status code" } ], "in/out": [ { "name": "taskCarsQueue", "type": "Array[1..10] of Byte", "description": "Task queue byte array" } ] }